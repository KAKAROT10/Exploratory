// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Square3_duplex (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x,
        ap_return
);

parameter    ap_ST_st1_fsm_0 = 87'b1;
parameter    ap_ST_st2_fsm_1 = 87'b10;
parameter    ap_ST_st3_fsm_2 = 87'b100;
parameter    ap_ST_st4_fsm_3 = 87'b1000;
parameter    ap_ST_st5_fsm_4 = 87'b10000;
parameter    ap_ST_st6_fsm_5 = 87'b100000;
parameter    ap_ST_st7_fsm_6 = 87'b1000000;
parameter    ap_ST_st8_fsm_7 = 87'b10000000;
parameter    ap_ST_st9_fsm_8 = 87'b100000000;
parameter    ap_ST_st10_fsm_9 = 87'b1000000000;
parameter    ap_ST_st11_fsm_10 = 87'b10000000000;
parameter    ap_ST_st12_fsm_11 = 87'b100000000000;
parameter    ap_ST_st13_fsm_12 = 87'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 87'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 87'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 87'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 87'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 87'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 87'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 87'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 87'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 87'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 87'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 87'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 87'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 87'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 87'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 87'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 87'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 87'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 87'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 87'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 87'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 87'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 87'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 87'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 87'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 87'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 87'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 87'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 87'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 87'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 87'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 87'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 87'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 87'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 87'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 87'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 87'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 87'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 87'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 87'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 87'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 87'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 87'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 87'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 87'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 87'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 87'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 87'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 87'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 87'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 87'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 87'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 87'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 87'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 87'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 87'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 87'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 87'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 87'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 87'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 87'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 87'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 87'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 87'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 87'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st78_fsm_77 = 87'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st79_fsm_78 = 87'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st80_fsm_79 = 87'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_80 = 87'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st82_fsm_81 = 87'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st83_fsm_82 = 87'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st84_fsm_83 = 87'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st85_fsm_84 = 87'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st86_fsm_85 = 87'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st87_fsm_86 = 87'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_47 = 32'b1000111;
parameter    ap_const_lv32_4F = 32'b1001111;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_44 = 32'b1000100;
parameter    ap_const_lv32_46 = 32'b1000110;
parameter    ap_const_lv32_4D = 32'b1001101;
parameter    ap_const_lv32_4E = 32'b1001110;
parameter    ap_const_lv32_55 = 32'b1010101;
parameter    ap_const_lv32_45 = 32'b1000101;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_A = 64'b1010;
parameter    ap_const_lv129_lc_1 = 129'b11001100110011001100110011001100110011001100110011001100110011010;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv32_80 = 32'b10000000;
parameter    ap_const_lv129_lc_2 = 129'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv31_1 = 31'b1;
parameter    ap_const_lv32_48 = 32'b1001000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv32_50 = 32'b1010000;
parameter    ap_const_lv32_56 = 32'b1010110;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] x;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [86:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_104;
wire   [31:0] arr_q0;
reg  signed [31:0] reg_138;
reg    ap_sig_cseq_ST_st72_fsm_71;
reg    ap_sig_118;
reg    ap_sig_cseq_ST_st80_fsm_79;
reg    ap_sig_125;
wire   [31:0] cou1_1_fu_148_p2;
reg   [31:0] cou1_1_reg_416;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_140;
wire   [0:0] tmp_fu_142_p2;
reg   [0:0] tmp_19_reg_426;
wire   [0:0] tmp_3_fu_178_p3;
reg   [0:0] tmp_3_reg_432;
wire   [31:0] p_neg_fu_186_p2;
reg   [31:0] p_neg_reg_437;
wire   [31:0] tmp_s_fu_226_p3;
reg   [31:0] tmp_s_reg_442;
wire   [31:0] tmp_6_fu_234_p2;
reg   [31:0] tmp_6_reg_448;
wire   [128:0] grp_fu_164_p2;
reg   [128:0] mul_reg_453;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_167;
reg   [60:0] tmp_21_reg_458;
wire  signed [63:0] tmp_17_fu_269_p1;
reg  signed [63:0] tmp_17_reg_463;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_178;
wire   [63:0] neg_ti_fu_279_p2;
reg   [63:0] neg_ti_reg_468;
wire   [63:0] y_1_fu_285_p3;
reg   [63:0] y_1_reg_473;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_192;
wire   [31:0] grp_fu_154_p2;
reg   [31:0] tmp_2_reg_478;
reg    ap_sig_cseq_ST_st69_fsm_68;
reg    ap_sig_201;
wire   [30:0] i_1_fu_308_p2;
reg   [30:0] i_1_reg_486;
reg    ap_sig_cseq_ST_st71_fsm_70;
reg    ap_sig_210;
wire   [0:0] tmp_5_fu_303_p2;
wire   [0:0] tmp_26_fu_329_p1;
reg   [0:0] tmp_26_reg_501;
wire   [31:0] arr_q1;
reg  signed [31:0] arr_load_1_reg_511;
wire   [31:0] grp_fu_336_p2;
reg   [31:0] tmp_1_reg_516;
reg    ap_sig_cseq_ST_st78_fsm_77;
reg    ap_sig_238;
wire   [31:0] z_2_fu_346_p2;
reg    ap_sig_cseq_ST_st79_fsm_78;
reg    ap_sig_247;
wire   [0:0] tmp_14_fu_384_p2;
reg   [0:0] tmp_14_reg_526;
wire   [31:0] grp_fu_390_p2;
reg   [31:0] tmp_16_reg_531;
reg    ap_sig_cseq_ST_st86_fsm_85;
reg    ap_sig_258;
reg   [4:0] arr_address0;
reg    arr_ce0;
reg    arr_we0;
wire   [31:0] arr_d0;
wire   [4:0] arr_address1;
reg    arr_ce1;
reg   [31:0] cou1_reg_93;
reg    ap_sig_cseq_ST_st70_fsm_69;
reg    ap_sig_281;
reg  signed [63:0] y_reg_105;
reg   [30:0] i_reg_115;
reg   [31:0] z_reg_126;
wire  signed [63:0] tmp_4_fu_294_p1;
wire  signed [63:0] tmp_8_fu_319_p1;
wire   [63:0] tmp_9_fu_324_p1;
wire  signed [63:0] tmp_15_fu_332_p1;
wire   [4:0] grp_fu_154_p1;
wire   [65:0] grp_fu_164_p0;
wire   [30:0] p_lshr_fu_192_p4;
wire   [31:0] tmp_10_fu_202_p1;
wire   [30:0] p_lshr_f_fu_212_p4;
wire   [31:0] p_neg_t_fu_206_p2;
wire   [31:0] tmp_11_fu_222_p1;
wire   [128:0] neg_mul_fu_250_p2;
wire   [60:0] tmp_20_fu_255_p4;
wire  signed [63:0] tmp_13_fu_265_p1;
wire   [63:0] tmp_18_fu_272_p3;
wire   [31:0] i_cast_fu_299_p1;
wire   [31:0] tmp_7_fu_314_p2;
reg    ap_sig_cseq_ST_st73_fsm_72;
reg    ap_sig_387;
wire   [31:0] tmp_22_fu_341_p2;
wire   [1:0] tmp_27_fu_356_p3;
wire   [0:0] tmp_25_fu_352_p1;
wire   [1:0] tmp_28_fu_363_p2;
wire   [1:0] tmp_23_fu_369_p3;
wire   [1:0] tmp_24_fu_377_p3;
reg    ap_sig_cseq_ST_st81_fsm_80;
reg    ap_sig_420;
reg    ap_sig_cseq_ST_st87_fsm_86;
reg    ap_sig_429;
wire   [31:0] z_3_fu_396_p2;
reg    grp_fu_154_ap_start;
wire    grp_fu_154_ap_done;
reg   [86:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 87'b1;
end

Square3_duplex_arr #(
    .DataWidth( 32 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
arr_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(arr_address0),
    .ce0(arr_ce0),
    .we0(arr_we0),
    .d0(arr_d0),
    .q0(arr_q0),
    .address1(arr_address1),
    .ce1(arr_ce1),
    .q1(arr_q1)
);

Square3_srem_64ns_5ns_32_68_seq #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
Square3_srem_64ns_5ns_32_68_seq_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_154_ap_start),
    .done(grp_fu_154_ap_done),
    .din0(y_reg_105),
    .din1(grp_fu_154_p1),
    .ce(1'b1),
    .dout(grp_fu_154_p2)
);

Square3_mul_66ns_64s_129_18 #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 66 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 129 ))
Square3_mul_66ns_64s_129_18_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_164_p0),
    .din1(y_reg_105),
    .ce(1'b1),
    .dout(grp_fu_164_p2)
);

Square3_mul_32s_32s_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Square3_mul_32s_32s_32_6_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_138),
    .din1(arr_load_1_reg_511),
    .ce(1'b1),
    .dout(grp_fu_336_p2)
);

Square3_mul_32s_32s_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Square3_mul_32s_32s_32_6_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_138),
    .din1(reg_138),
    .ce(1'b1),
    .dout(grp_fu_390_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st70_fsm_69)) begin
        cou1_reg_93 <= cou1_1_reg_416;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        cou1_reg_93 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_fu_142_p2 == 1'b0))) begin
        i_reg_115 <= ap_const_lv31_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st79_fsm_78)) begin
        i_reg_115 <= i_1_reg_486;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st70_fsm_69)) begin
        y_reg_105 <= y_1_reg_473;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        y_reg_105 <= x;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_fu_142_p2 == 1'b0))) begin
        z_reg_126 <= ap_const_lv32_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st79_fsm_78)) begin
        z_reg_126 <= z_2_fu_346_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st72_fsm_71)) begin
        arr_load_1_reg_511 <= arr_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        cou1_1_reg_416 <= cou1_1_fu_148_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st71_fsm_70)) begin
        i_1_reg_486 <= i_1_fu_308_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        mul_reg_453 <= grp_fu_164_p2;
        tmp_21_reg_458 <= {{grp_fu_164_p2[ap_const_lv32_80 : ap_const_lv32_44]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & ~(1'b0 == tmp_19_reg_426))) begin
        neg_ti_reg_468 <= neg_ti_fu_279_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_fu_142_p2 == 1'b0))) begin
        p_neg_reg_437 <= p_neg_fu_186_p2;
        tmp_3_reg_432 <= cou1_reg_93[ap_const_lv32_1F];
        tmp_6_reg_448 <= tmp_6_fu_234_p2;
        tmp_s_reg_442 <= tmp_s_fu_226_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st72_fsm_71) | (1'b1 == ap_sig_cseq_ST_st80_fsm_79))) begin
        reg_138 <= arr_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st80_fsm_79)) begin
        tmp_14_reg_526 <= tmp_14_fu_384_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st86_fsm_85) & ~(1'b0 == tmp_14_reg_526))) begin
        tmp_16_reg_531 <= grp_fu_390_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        tmp_17_reg_463 <= tmp_17_fu_269_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (tmp_fu_142_p2 == 1'b0))) begin
        tmp_19_reg_426 <= y_reg_105[ap_const_lv32_3F];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st78_fsm_77)) begin
        tmp_1_reg_516 <= grp_fu_336_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st71_fsm_70) & (1'b0 == tmp_5_fu_303_p2) & ~(1'b0 == tmp_3_reg_432))) begin
        tmp_26_reg_501 <= tmp_26_fu_329_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st69_fsm_68)) begin
        tmp_2_reg_478 <= grp_fu_154_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        y_1_reg_473 <= y_1_fu_285_p3;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | (1'b1 == ap_sig_cseq_ST_st87_fsm_86))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st87_fsm_86)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_167) begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_104) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_178) begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_192) begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_140) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_201) begin
        ap_sig_cseq_ST_st69_fsm_68 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st69_fsm_68 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_281) begin
        ap_sig_cseq_ST_st70_fsm_69 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st70_fsm_69 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_210) begin
        ap_sig_cseq_ST_st71_fsm_70 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st71_fsm_70 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_118) begin
        ap_sig_cseq_ST_st72_fsm_71 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st72_fsm_71 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_387) begin
        ap_sig_cseq_ST_st73_fsm_72 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st73_fsm_72 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_238) begin
        ap_sig_cseq_ST_st78_fsm_77 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st78_fsm_77 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_247) begin
        ap_sig_cseq_ST_st79_fsm_78 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st79_fsm_78 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_125) begin
        ap_sig_cseq_ST_st80_fsm_79 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st80_fsm_79 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_420) begin
        ap_sig_cseq_ST_st81_fsm_80 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st81_fsm_80 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_258) begin
        ap_sig_cseq_ST_st86_fsm_85 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st86_fsm_85 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_429) begin
        ap_sig_cseq_ST_st87_fsm_86 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st87_fsm_86 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st70_fsm_69)) begin
        arr_address0 = tmp_4_fu_294_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st71_fsm_70) & (1'b0 == tmp_5_fu_303_p2))) begin
        arr_address0 = tmp_15_fu_332_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st71_fsm_70) & ~(1'b0 == tmp_5_fu_303_p2))) begin
        arr_address0 = tmp_8_fu_319_p1;
    end else begin
        arr_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st71_fsm_70) & ~(1'b0 == tmp_5_fu_303_p2)) | ((1'b1 == ap_sig_cseq_ST_st71_fsm_70) & (1'b0 == tmp_5_fu_303_p2)) | (1'b1 == ap_sig_cseq_ST_st70_fsm_69))) begin
        arr_ce0 = 1'b1;
    end else begin
        arr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st71_fsm_70)) begin
        arr_ce1 = 1'b1;
    end else begin
        arr_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st70_fsm_69)) begin
        arr_we0 = 1'b1;
    end else begin
        arr_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (tmp_fu_142_p2 == 1'b0))) begin
        grp_fu_154_ap_start = 1'b1;
    end else begin
        grp_fu_154_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(tmp_fu_142_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st71_fsm_70;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st71_fsm_70 : begin
            if ((1'b0 == tmp_5_fu_303_p2)) begin
                ap_NS_fsm = ap_ST_st80_fsm_79;
            end else begin
                ap_NS_fsm = ap_ST_st72_fsm_71;
            end
        end
        ap_ST_st72_fsm_71 : begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : begin
            ap_NS_fsm = ap_ST_st74_fsm_73;
        end
        ap_ST_st74_fsm_73 : begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : begin
            ap_NS_fsm = ap_ST_st77_fsm_76;
        end
        ap_ST_st77_fsm_76 : begin
            ap_NS_fsm = ap_ST_st78_fsm_77;
        end
        ap_ST_st78_fsm_77 : begin
            ap_NS_fsm = ap_ST_st79_fsm_78;
        end
        ap_ST_st79_fsm_78 : begin
            ap_NS_fsm = ap_ST_st71_fsm_70;
        end
        ap_ST_st80_fsm_79 : begin
            ap_NS_fsm = ap_ST_st81_fsm_80;
        end
        ap_ST_st81_fsm_80 : begin
            ap_NS_fsm = ap_ST_st82_fsm_81;
        end
        ap_ST_st82_fsm_81 : begin
            ap_NS_fsm = ap_ST_st83_fsm_82;
        end
        ap_ST_st83_fsm_82 : begin
            ap_NS_fsm = ap_ST_st84_fsm_83;
        end
        ap_ST_st84_fsm_83 : begin
            ap_NS_fsm = ap_ST_st85_fsm_84;
        end
        ap_ST_st85_fsm_84 : begin
            ap_NS_fsm = ap_ST_st86_fsm_85;
        end
        ap_ST_st86_fsm_85 : begin
            ap_NS_fsm = ap_ST_st87_fsm_86;
        end
        ap_ST_st87_fsm_86 : begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_return = ((tmp_14_reg_526[0:0] === 1'b1) ? z_3_fu_396_p2 : z_reg_126);

always @ (*) begin
    ap_sig_104 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_118 = (1'b1 == ap_CS_fsm[ap_const_lv32_47]);
end

always @ (*) begin
    ap_sig_125 = (1'b1 == ap_CS_fsm[ap_const_lv32_4F]);
end

always @ (*) begin
    ap_sig_140 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_167 = (1'b1 == ap_CS_fsm[ap_const_lv32_12]);
end

always @ (*) begin
    ap_sig_178 = (1'b1 == ap_CS_fsm[ap_const_lv32_13]);
end

always @ (*) begin
    ap_sig_192 = (1'b1 == ap_CS_fsm[ap_const_lv32_14]);
end

always @ (*) begin
    ap_sig_201 = (1'b1 == ap_CS_fsm[ap_const_lv32_44]);
end

always @ (*) begin
    ap_sig_210 = (1'b1 == ap_CS_fsm[ap_const_lv32_46]);
end

always @ (*) begin
    ap_sig_238 = (1'b1 == ap_CS_fsm[ap_const_lv32_4D]);
end

always @ (*) begin
    ap_sig_247 = (1'b1 == ap_CS_fsm[ap_const_lv32_4E]);
end

always @ (*) begin
    ap_sig_258 = (1'b1 == ap_CS_fsm[ap_const_lv32_55]);
end

always @ (*) begin
    ap_sig_281 = (1'b1 == ap_CS_fsm[ap_const_lv32_45]);
end

always @ (*) begin
    ap_sig_387 = (1'b1 == ap_CS_fsm[ap_const_lv32_48]);
end

always @ (*) begin
    ap_sig_420 = (1'b1 == ap_CS_fsm[ap_const_lv32_50]);
end

always @ (*) begin
    ap_sig_429 = (1'b1 == ap_CS_fsm[ap_const_lv32_56]);
end

assign arr_address1 = tmp_9_fu_324_p1;

assign arr_d0 = tmp_2_reg_478[31:0];

assign cou1_1_fu_148_p2 = (cou1_reg_93 + ap_const_lv32_1);

assign grp_fu_154_p1 = ap_const_lv64_A;

assign grp_fu_164_p0 = ap_const_lv129_lc_1;

assign i_1_fu_308_p2 = (i_reg_115 + ap_const_lv31_1);

assign i_cast_fu_299_p1 = i_reg_115;

assign neg_mul_fu_250_p2 = (ap_const_lv129_lc_2 - mul_reg_453);

assign neg_ti_fu_279_p2 = (ap_const_lv64_0 - tmp_18_fu_272_p3);

assign p_lshr_f_fu_212_p4 = {{cou1_reg_93[ap_const_lv32_1F : ap_const_lv32_1]}};

assign p_lshr_fu_192_p4 = {{p_neg_fu_186_p2[ap_const_lv32_1F : ap_const_lv32_1]}};

assign p_neg_fu_186_p2 = (ap_const_lv32_0 - cou1_reg_93);

assign p_neg_t_fu_206_p2 = (ap_const_lv32_0 - tmp_10_fu_202_p1);

assign tmp_10_fu_202_p1 = p_lshr_fu_192_p4;

assign tmp_11_fu_222_p1 = p_lshr_f_fu_212_p4;

assign tmp_13_fu_265_p1 = $signed(tmp_20_fu_255_p4);

assign tmp_14_fu_384_p2 = ((tmp_24_fu_377_p3 == ap_const_lv2_1) ? 1'b1 : 1'b0);

assign tmp_15_fu_332_p1 = $signed(tmp_s_reg_442);

assign tmp_17_fu_269_p1 = $signed(tmp_21_reg_458);

assign tmp_18_fu_272_p3 = ((tmp_19_reg_426[0:0] === 1'b1) ? tmp_13_fu_265_p1 : tmp_17_fu_269_p1);

assign tmp_20_fu_255_p4 = {{neg_mul_fu_250_p2[ap_const_lv32_80 : ap_const_lv32_44]}};

assign tmp_22_fu_341_p2 = tmp_1_reg_516 << ap_const_lv32_1;

assign tmp_23_fu_369_p3 = {{1'b0}, {tmp_25_fu_352_p1}};

assign tmp_24_fu_377_p3 = ((tmp_3_reg_432[0:0] === 1'b1) ? tmp_28_fu_363_p2 : tmp_23_fu_369_p3);

assign tmp_25_fu_352_p1 = cou1_reg_93[0:0];

assign tmp_26_fu_329_p1 = p_neg_reg_437[0:0];

assign tmp_27_fu_356_p3 = {{1'b0}, {tmp_26_reg_501}};

assign tmp_28_fu_363_p2 = (ap_const_lv2_0 - tmp_27_fu_356_p3);

assign tmp_3_fu_178_p3 = cou1_reg_93[ap_const_lv32_1F];

assign tmp_4_fu_294_p1 = $signed(cou1_reg_93);

assign tmp_5_fu_303_p2 = (($signed(i_cast_fu_299_p1) < $signed(tmp_s_reg_442)) ? 1'b1 : 1'b0);

assign tmp_6_fu_234_p2 = ($signed(cou1_reg_93) + $signed(ap_const_lv32_FFFFFFFF));

assign tmp_7_fu_314_p2 = (tmp_6_reg_448 - i_cast_fu_299_p1);

assign tmp_8_fu_319_p1 = $signed(tmp_7_fu_314_p2);

assign tmp_9_fu_324_p1 = i_reg_115;

assign tmp_fu_142_p2 = ((y_reg_105 == ap_const_lv64_0) ? 1'b1 : 1'b0);

assign tmp_s_fu_226_p3 = ((tmp_3_fu_178_p3[0:0] === 1'b1) ? p_neg_t_fu_206_p2 : tmp_11_fu_222_p1);

assign y_1_fu_285_p3 = ((tmp_19_reg_426[0:0] === 1'b1) ? neg_ti_reg_468 : tmp_17_reg_463);

assign z_2_fu_346_p2 = (z_reg_126 + tmp_22_fu_341_p2);

assign z_3_fu_396_p2 = (z_reg_126 + tmp_16_reg_531);

endmodule //Square3_duplex
