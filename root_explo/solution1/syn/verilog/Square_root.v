// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Square_root,hls_ip_2016_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200tfbg484-1,HLS_INPUT_CLOCK=15.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=15.574680,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=33,HLS_SYN_FF=3691,HLS_SYN_LUT=5470}" *)

module Square_root (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        num_i,
        num_o,
        num_o_ap_vld,
        ans,
        ans_ap_vld
);

parameter    ap_ST_st1_fsm_0 = 127'b1;
parameter    ap_ST_st2_fsm_1 = 127'b10;
parameter    ap_ST_st3_fsm_2 = 127'b100;
parameter    ap_ST_st4_fsm_3 = 127'b1000;
parameter    ap_ST_st5_fsm_4 = 127'b10000;
parameter    ap_ST_st6_fsm_5 = 127'b100000;
parameter    ap_ST_st7_fsm_6 = 127'b1000000;
parameter    ap_ST_st8_fsm_7 = 127'b10000000;
parameter    ap_ST_st9_fsm_8 = 127'b100000000;
parameter    ap_ST_st10_fsm_9 = 127'b1000000000;
parameter    ap_ST_st11_fsm_10 = 127'b10000000000;
parameter    ap_ST_st12_fsm_11 = 127'b100000000000;
parameter    ap_ST_st13_fsm_12 = 127'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 127'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 127'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 127'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 127'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 127'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 127'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 127'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 127'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 127'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 127'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 127'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 127'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 127'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 127'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 127'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 127'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 127'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 127'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 127'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 127'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 127'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 127'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 127'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 127'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 127'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 127'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 127'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 127'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 127'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 127'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 127'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 127'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 127'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 127'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 127'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 127'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 127'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 127'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 127'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 127'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 127'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 127'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 127'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 127'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 127'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 127'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 127'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 127'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 127'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 127'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 127'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 127'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 127'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 127'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 127'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 127'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 127'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 127'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 127'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 127'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 127'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 127'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 127'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 127'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st78_fsm_77 = 127'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st79_fsm_78 = 127'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st80_fsm_79 = 127'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_80 = 127'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st82_fsm_81 = 127'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st83_fsm_82 = 127'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st84_fsm_83 = 127'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st85_fsm_84 = 127'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st86_fsm_85 = 127'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st87_fsm_86 = 127'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st88_fsm_87 = 127'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st89_fsm_88 = 127'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st90_fsm_89 = 127'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st91_fsm_90 = 127'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st92_fsm_91 = 127'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st93_fsm_92 = 127'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st94_fsm_93 = 127'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st95_fsm_94 = 127'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st96_fsm_95 = 127'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st97_fsm_96 = 127'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st98_fsm_97 = 127'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st99_fsm_98 = 127'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st100_fsm_99 = 127'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st101_fsm_100 = 127'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st102_fsm_101 = 127'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st103_fsm_102 = 127'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st104_fsm_103 = 127'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st105_fsm_104 = 127'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st106_fsm_105 = 127'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st107_fsm_106 = 127'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st108_fsm_107 = 127'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st109_fsm_108 = 127'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st110_fsm_109 = 127'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st111_fsm_110 = 127'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st112_fsm_111 = 127'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st113_fsm_112 = 127'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st114_fsm_113 = 127'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st115_fsm_114 = 127'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st116_fsm_115 = 127'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st117_fsm_116 = 127'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st118_fsm_117 = 127'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st119_fsm_118 = 127'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st120_fsm_119 = 127'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st121_fsm_120 = 127'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st122_fsm_121 = 127'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st123_fsm_122 = 127'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st124_fsm_123 = 127'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st125_fsm_124 = 127'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st126_fsm_125 = 127'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st127_fsm_126 = 127'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_45 = 32'b1000101;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_2D = 32'b101101;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_43 = 32'b1000011;
parameter    ap_const_lv32_44 = 32'b1000100;
parameter    ap_const_lv32_46 = 32'b1000110;
parameter    ap_const_lv32_6A = 32'b1101010;
parameter    ap_const_lv32_6B = 32'b1101011;
parameter    ap_const_lv32_6D = 32'b1101101;
parameter    ap_const_lv32_6F = 32'b1101111;
parameter    ap_const_lv32_70 = 32'b1110000;
parameter    ap_const_lv32_74 = 32'b1110100;
parameter    ap_const_lv32_75 = 32'b1110101;
parameter    ap_const_lv32_7E = 32'b1111110;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv32_6C = 32'b1101100;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv8_30 = 8'b110000;
parameter    ap_const_lv32_71 = 32'b1110001;
parameter    ap_const_lv32_41200000 = 32'b1000001001000000000000000000000;
parameter    ap_const_lv65_19999999A = 65'b110011001100110011001100110011010;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv65_0 = 65'b00000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv6_30 = 6'b110000;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv9_1D0 = 9'b111010000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv11_5F0 = 11'b10111110000;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv3_5 = 3'b101;
parameter    ap_const_lv3_7 = 3'b111;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv17_9 = 17'b1001;
parameter    ap_const_lv32_47 = 32'b1000111;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv29_0 = 29'b00000000000000000000000000000;
parameter    ap_const_lv32_FFFFFFFE = 32'b11111111111111111111111111111110;
parameter    ap_const_lv31_1 = 31'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] num_i;
output  [31:0] num_o;
output   num_o_ap_vld;
output  [31:0] ans;
output   ans_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] num_o;
reg num_o_ap_vld;
reg ans_ap_vld;

(* fsm_encoding = "none" *) reg   [126:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_142;
reg   [31:0] reg_474;
reg    ap_sig_cseq_ST_st70_fsm_69;
reg    ap_sig_161;
wire   [0:0] tmp_38_fu_1160_p2;
reg   [31:0] n_reg_1561;
wire   [31:0] len_fu_486_p2;
reg   [31:0] len_reg_1570;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_182;
wire   [0:0] tmp_fu_480_p2;
reg   [0:0] tmp_36_reg_1583;
wire   [0:0] tmp_32_fu_510_p1;
reg   [0:0] tmp_32_reg_1589;
wire   [64:0] grp_fu_496_p2;
reg   [64:0] mul_reg_1593;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_202;
reg   [28:0] tmp_49_reg_1598;
wire   [31:0] n_1_fu_559_p3;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_213;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_222;
wire   [0:0] tmp_11_fu_566_p2;
reg   [0:0] tmp_65_reg_1616;
wire   [64:0] grp_fu_582_p2;
reg   [64:0] mul6_reg_1622;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_236;
reg   [28:0] tmp_67_reg_1627;
wire   [31:0] tmp_22_fu_650_p3;
reg   [31:0] tmp_22_reg_1632;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_247;
wire   [31:0] len2_1_fu_673_p2;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_256;
reg    ap_sig_cseq_ST_st43_fsm_42;
reg    ap_sig_265;
wire   [7:0] h_q1;
reg   [7:0] h_load_reg_1647;
reg    ap_sig_cseq_ST_st44_fsm_43;
reg    ap_sig_274;
wire   [8:0] temp_1_fu_710_p2;
reg   [8:0] temp_1_reg_1658;
wire  signed [11:0] temp_1_cast_fu_716_p1;
reg  signed [11:0] temp_1_cast_reg_1663;
wire   [11:0] temp_fu_762_p2;
reg   [11:0] temp_reg_1669;
reg    ap_sig_cseq_ST_st45_fsm_44;
reg    ap_sig_293;
wire   [3:0] i_fu_793_p2;
reg    ap_sig_cseq_ST_st46_fsm_45;
reg    ap_sig_302;
wire   [0:0] tmp_24_fu_772_p2;
wire   [0:0] tmp_28_fu_788_p2;
wire   [3:0] a_1_fu_799_p2;
wire   [2:0] i_3_fu_865_p2;
reg    ap_sig_cseq_ST_st47_fsm_46;
reg    ap_sig_329;
wire   [0:0] tmp_23_fu_844_p2;
wire   [0:0] tmp_26_fu_860_p2;
wire   [3:0] a_5_cast_fu_877_p1;
wire   [4:0] divisor_fu_885_p3;
reg   [4:0] divisor_reg_1746;
reg    ap_sig_cseq_ST_st48_fsm_47;
reg    ap_sig_350;
wire   [16:0] divisor_cast1_fu_893_p1;
reg   [16:0] divisor_cast1_reg_1751;
wire   [15:0] temp_2_fu_943_p2;
reg   [15:0] temp_2_reg_1757;
wire   [16:0] p_s_fu_1004_p3;
reg   [16:0] p_s_reg_1768;
reg    ap_sig_cseq_ST_st68_fsm_67;
reg    ap_sig_365;
wire   [31:0] size_of_a_fu_1096_p3;
reg   [31:0] size_of_a_reg_1773;
reg    ap_sig_cseq_ST_st69_fsm_68;
reg    ap_sig_374;
wire   [31:0] divisor_cast_fu_1104_p1;
reg   [31:0] divisor_cast_reg_1778;
wire   [31:0] tmp_37_fu_1142_p2;
reg   [31:0] tmp_37_reg_1785;
wire   [30:0] tmp_50_fu_1148_p1;
reg   [30:0] tmp_50_reg_1790;
reg   [31:0] k_1_load_reg_1795;
reg   [31:0] t_load_2_reg_1803;
wire   [31:0] t_2_fu_1165_p2;
reg   [31:0] t_2_reg_1809;
reg   [4:0] remy_addr_2_reg_1814;
wire   [31:0] k_4_fu_1176_p2;
reg   [31:0] k_4_reg_1819;
wire   [31:0] temp2_1_fu_1225_p2;
reg   [31:0] temp2_1_reg_1829;
reg    ap_sig_cseq_ST_st71_fsm_70;
reg    ap_sig_401;
wire    grp_Square_root_dup_fu_452_ap_done;
wire   [0:0] tmp_77_fu_1231_p3;
reg   [0:0] tmp_77_reg_1835;
wire   [31:0] a_7_fu_1249_p2;
reg  signed [31:0] a_7_reg_1839;
reg   [0:0] tmp_81_reg_1845;
wire   [31:0] p_6_fu_1273_p3;
reg   [31:0] p_6_reg_1851;
reg    ap_sig_cseq_ST_st107_fsm_106;
reg    ap_sig_423;
wire  signed [30:0] tmp_87_fu_1281_p1;
reg  signed [30:0] tmp_87_reg_1856;
wire   [31:0] remainder_2_fu_1320_p2;
reg   [31:0] remainder_2_reg_1861;
reg    ap_sig_cseq_ST_st108_fsm_107;
reg    ap_sig_434;
reg    ap_sig_cseq_ST_st110_fsm_109;
reg    ap_sig_443;
wire   [64:0] grp_fu_1352_p2;
reg   [64:0] mul1_reg_1877;
reg    ap_sig_cseq_ST_st112_fsm_111;
reg    ap_sig_454;
reg   [28:0] tmp_80_reg_1882;
wire   [64:0] grp_fu_1361_p2;
reg   [64:0] mul2_reg_1888;
reg   [28:0] tmp_83_reg_1893;
reg   [4:0] remy_addr_4_reg_1901;
reg    ap_sig_cseq_ST_st113_fsm_112;
reg    ap_sig_469;
wire   [0:0] tmp_47_fu_1476_p2;
wire   [31:0] grp_fu_463_p1;
reg    ap_sig_cseq_ST_st117_fsm_116;
reg    ap_sig_481;
wire   [31:0] tmp_40_fu_1530_p2;
reg   [31:0] tmp_40_reg_1911;
wire   [30:0] i_4_fu_1544_p2;
reg   [30:0] i_4_reg_1919;
reg    ap_sig_cseq_ST_st118_fsm_117;
reg    ap_sig_492;
wire   [31:0] grp_fu_457_p2;
reg    ap_sig_cseq_ST_st127_fsm_126;
reg    ap_sig_501;
reg   [4:0] remy_address0;
reg    remy_ce0;
reg    remy_we0;
reg   [31:0] remy_d0;
wire   [31:0] remy_q0;
reg   [6:0] h_address0;
reg    h_ce0;
reg    h_we0;
reg   [7:0] h_d0;
wire   [7:0] h_q0;
reg   [6:0] h_address1;
reg    h_ce1;
reg    h_we1;
wire    grp_Square_root_dup_fu_452_ap_start;
wire    grp_Square_root_dup_fu_452_ap_idle;
wire    grp_Square_root_dup_fu_452_ap_ready;
wire   [31:0] grp_Square_root_dup_fu_452_ap_return;
reg  signed [31:0] n1_reg_289;
reg   [31:0] len2_reg_298;
reg  signed [31:0] tmp_s_reg_310;
reg   [31:0] len1_reg_320;
reg   [3:0] a_reg_331;
reg   [3:0] a_2_reg_343;
reg   [1:0] k_phi_fu_360_p8;
reg   [1:0] k_reg_356;
reg   [2:0] i_1_reg_374;
reg   [3:0] a_3_reg_385;
reg   [11:0] temp2_reg_402;
reg   [31:0] size_of_a_0_in_reg_415;
reg   [31:0] ans_local_reg_430;
reg   [30:0] i_2_reg_441;
reg    ap_reg_grp_Square_root_dup_fu_452_ap_start;
wire  signed [63:0] tmp_12_fu_596_p1;
wire  signed [63:0] tmp_14_fu_601_p1;
wire  signed [63:0] tmp_21_fu_679_p1;
wire  signed [63:0] tmp_16_fu_690_p1;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_588;
wire  signed [63:0] tmp_18_fu_701_p1;
wire   [63:0] tmp_31_fu_815_p1;
wire  signed [63:0] tmp_41_fu_1171_p1;
wire  signed [63:0] tmp_42_fu_1182_p1;
wire  signed [63:0] tmp_54_fu_1330_p1;
reg    ap_sig_cseq_ST_st109_fsm_108;
reg    ap_sig_606;
wire  signed [63:0] tmp_57_fu_1488_p1;
reg   [31:0] a_4_fu_138;
wire  signed [31:0] a_6_cast_fu_1035_p1;
wire   [31:0] a_8_fu_1302_p2;
wire   [31:0] vr2_fu_1465_p3;
reg   [31:0] remainder_4_fu_142;
wire  signed [31:0] remainder_1_cast_fu_1137_p1;
wire   [31:0] remainder_3_fu_1509_p2;
reg   [31:0] k_1_fu_146;
wire   [31:0] k_2_cast_fu_826_p1;
wire   [31:0] k_3_fu_1239_p2;
reg   [31:0] t_fu_150;
wire   [31:0] t_1_fu_1334_p2;
wire   [0:0] tmp_46_fu_1539_p2;
wire   [7:0] tmp_23_cast_fu_668_p1;
wire  signed [31:0] remainder_cast_fu_897_p1;
reg    ap_sig_cseq_ST_st114_fsm_113;
reg    ap_sig_663;
wire   [31:0] tmp_58_fu_1524_p2;
wire   [33:0] grp_fu_496_p1;
wire   [64:0] neg_mul_fu_524_p2;
wire   [28:0] tmp_44_fu_529_p4;
wire  signed [31:0] tmp_34_fu_539_p1;
wire  signed [31:0] tmp_35_fu_543_p1;
wire   [31:0] tmp_45_fu_546_p3;
wire   [31:0] neg_ti_fu_553_p2;
wire   [4:0] grp_fu_572_p1;
wire   [33:0] grp_fu_582_p0;
wire   [64:0] neg_mul7_fu_615_p2;
wire   [28:0] tmp_66_fu_620_p4;
wire  signed [31:0] tmp_52_fu_630_p1;
wire  signed [31:0] tmp_59_fu_634_p1;
wire   [31:0] tmp_60_fu_637_p3;
wire   [31:0] neg_ti1_fu_644_p2;
wire   [5:0] grp_fu_572_p2;
wire   [5:0] tmp_64_fu_658_p1;
wire   [5:0] tmp_20_fu_662_p2;
wire   [31:0] tmp_15_fu_684_p2;
wire   [31:0] tmp_17_fu_695_p2;
wire  signed [8:0] tmp_30_cast_fu_706_p1;
wire   [10:0] p_shl_fu_720_p3;
wire   [8:0] p_shl6_fu_731_p3;
wire  signed [11:0] p_shl_cast_fu_727_p1;
wire  signed [11:0] p_shl6_cast_fu_738_p1;
wire  signed [10:0] tmp_28_cast_fu_742_p1;
wire   [10:0] tmp3_fu_752_p2;
wire   [11:0] tmp2_fu_746_p2;
wire  signed [11:0] tmp3_cast_fu_758_p1;
wire   [3:0] tmp_27_fu_778_p0;
wire   [7:0] a_2_cast17_cast_fu_768_p1;
wire   [3:0] tmp_27_fu_778_p1;
wire   [7:0] tmp_27_fu_778_p2;
wire   [11:0] tmp_33_cast_fu_784_p1;
wire   [1:0] tmp_30_fu_809_p2;
wire   [2:0] k_cast_fu_805_p1;
wire   [2:0] k_2_fu_820_p2;
wire   [2:0] tmp_25_fu_850_p0;
wire   [5:0] i_1_cast16_cast_fu_840_p1;
wire   [2:0] tmp_25_fu_850_p1;
wire   [5:0] tmp_25_fu_850_p2;
wire   [8:0] tmp_35_cast_fu_856_p1;
wire   [2:0] a_5_fu_871_p2;
wire   [11:0] grp_fu_1550_p3;
wire   [14:0] p_shl1_fu_901_p3;
wire   [12:0] p_shl2_fu_912_p3;
wire  signed [15:0] p_shl2_cast_fu_919_p1;
wire  signed [15:0] p_shl1_cast_fu_908_p1;
wire  signed [8:0] tmp_41_cast_fu_923_p1;
wire   [8:0] tmp6_fu_933_p2;
wire   [15:0] tmp5_fu_927_p2;
wire  signed [15:0] tmp6_cast_fu_939_p1;
wire  signed [16:0] grp_fu_953_p0;
wire   [5:0] grp_fu_953_p1;
wire   [7:0] tmp_69_fu_959_p3;
wire   [5:0] tmp_70_fu_971_p3;
wire   [21:0] p_shl4_fu_979_p1;
wire   [21:0] p_shl3_fu_967_p1;
wire  signed [21:0] x_fu_989_p1;
wire   [21:0] Ny_fu_983_p2;
wire   [0:0] slt_fu_992_p2;
wire   [0:0] rev_fu_998_p2;
wire   [16:0] grp_fu_953_p2;
wire   [6:0] p_shl8_fu_1012_p3;
wire   [16:0] p_shl8_cast_fu_1020_p1;
wire   [16:0] tmp7_fu_1024_p2;
wire   [16:0] a_6_fu_1030_p2;
wire   [31:0] p_neg_fu_1056_p2;
wire   [30:0] p_lshr_fu_1062_p4;
wire   [31:0] tmp_61_fu_1072_p1;
wire   [30:0] p_lshr_f_fu_1082_p4;
wire   [0:0] tmp_68_fu_1048_p3;
wire   [31:0] p_neg_t_fu_1076_p2;
wire   [31:0] tmp_62_fu_1092_p1;
wire   [3:0] tmp_33_fu_1113_p0;
wire  signed [16:0] tmp_33_fu_1113_p1;
wire   [20:0] tmp_33_fu_1113_p2;
wire   [21:0] tmp_63_fu_1119_p3;
wire  signed [22:0] temp_2_cast_cast_fu_1107_p1;
wire  signed [22:0] tmp_36_cast_fu_1127_p1;
wire   [22:0] remainder_1_fu_1131_p2;
wire   [31:0] tmp_75_fu_1187_p2;
wire   [31:0] tmp_76_fu_1193_p2;
wire  signed [8:0] tmp_53_cast_fu_1199_p1;
wire   [8:0] tmp9_fu_1209_p2;
wire  signed [31:0] tmp9_cast_fu_1215_p1;
wire   [31:0] tmp8_fu_1203_p2;
wire   [31:0] new_temp_fu_1219_p2;
wire   [4:0] grp_fu_1263_p1;
reg    ap_sig_cseq_ST_st72_fsm_71;
reg    ap_sig_1011;
wire   [31:0] grp_fu_1263_p2;
wire   [0:0] tmp_48_fu_1267_p2;
wire   [31:0] tmp_85_fu_1285_p2;
wire   [31:0] tmp10_fu_1297_p2;
wire   [31:0] tmp_86_fu_1291_p2;
wire   [3:0] tmp_51_fu_1308_p1;
wire   [30:0] tmp_51_fu_1308_p2;
wire   [31:0] tmp_53_fu_1312_p3;
wire   [33:0] grp_fu_1352_p0;
wire   [33:0] grp_fu_1361_p0;
wire   [64:0] neg_mul1_fu_1387_p2;
wire   [0:0] tmp_78_fu_1392_p3;
wire   [28:0] tmp_79_fu_1400_p4;
wire   [28:0] p_v_v_fu_1410_p3;
wire   [28:0] neg_ti2_fu_1417_p2;
wire   [64:0] neg_mul2_fu_1430_p2;
wire   [28:0] tmp_82_fu_1435_p4;
wire  signed [31:0] tmp_72_fu_1445_p1;
wire  signed [31:0] tmp_73_fu_1449_p1;
wire   [31:0] tmp_74_fu_1452_p3;
wire   [31:0] neg_ti3_fu_1459_p2;
wire   [28:0] tmp_71_fu_1423_p3;
wire   [28:0] tmp_84_fu_1472_p1;
wire   [31:0] tmp_56_fu_1482_p2;
wire   [31:0] i_2_cast_fu_1535_p1;
wire   [3:0] grp_fu_1550_p0;
wire   [7:0] a_3_cast15_cast_fu_881_p1;
wire   [3:0] grp_fu_1550_p1;
reg    grp_fu_572_ap_start;
wire    grp_fu_572_ap_done;
reg    grp_fu_953_ap_start;
wire    grp_fu_953_ap_done;
reg    grp_fu_1263_ap_start;
wire    grp_fu_1263_ap_done;
reg   [126:0] ap_NS_fsm;
wire   [16:0] grp_fu_953_p10;
wire   [20:0] tmp_33_fu_1113_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 127'b1;
#0 ap_reg_grp_Square_root_dup_fu_452_ap_start = 1'b0;
end

Square_root_remy #(
    .DataWidth( 32 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
remy_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(remy_address0),
    .ce0(remy_ce0),
    .we0(remy_we0),
    .d0(remy_d0),
    .q0(remy_q0)
);

Square_root_h #(
    .DataWidth( 8 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
h_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(h_address0),
    .ce0(h_ce0),
    .we0(h_we0),
    .d0(h_d0),
    .q0(h_q0),
    .address1(h_address1),
    .ce1(h_ce1),
    .we1(h_we1),
    .d1(ap_const_lv8_30),
    .q1(h_q1)
);

Square_root_dup grp_Square_root_dup_fu_452(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Square_root_dup_fu_452_ap_start),
    .ap_done(grp_Square_root_dup_fu_452_ap_done),
    .ap_idle(grp_Square_root_dup_fu_452_ap_idle),
    .ap_ready(grp_Square_root_dup_fu_452_ap_ready),
    .x(reg_474),
    .ap_return(grp_Square_root_dup_fu_452_ap_return)
);

Square_root_fdiv_32ns_32ns_32_10 #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Square_root_fdiv_32ns_32ns_32_10_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ans_local_reg_430),
    .din1(ap_const_lv32_41200000),
    .ce(1'b1),
    .dout(grp_fu_457_p2)
);

Square_root_sitofp_32ns_32_4 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Square_root_sitofp_32ns_32_4_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(a_4_fu_138),
    .ce(1'b1),
    .dout(grp_fu_463_p1)
);

Square_root_mul_32s_34ns_65_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 34 ),
    .dout_WIDTH( 65 ))
Square_root_mul_32s_34ns_65_3_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(n1_reg_289),
    .din1(grp_fu_496_p1),
    .ce(1'b1),
    .dout(grp_fu_496_p2)
);

Square_root_srem_32ns_5ns_6_36_seq #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 6 ))
Square_root_srem_32ns_5ns_6_36_seq_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_572_ap_start),
    .done(grp_fu_572_ap_done),
    .din0(tmp_s_reg_310),
    .din1(grp_fu_572_p1),
    .ce(1'b1),
    .dout(grp_fu_572_p2)
);

Square_root_mul_34ns_32s_65_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 34 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 65 ))
Square_root_mul_34ns_32s_65_3_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_582_p0),
    .din1(tmp_s_reg_310),
    .ce(1'b1),
    .dout(grp_fu_582_p2)
);

Square_root_sdiv_17s_6ns_17_21_seq #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 17 ))
Square_root_sdiv_17s_6ns_17_21_seq_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_953_ap_start),
    .done(grp_fu_953_ap_done),
    .din0(grp_fu_953_p0),
    .din1(grp_fu_953_p1),
    .ce(1'b1),
    .dout(grp_fu_953_p2)
);

Square_root_udiv_32ns_5ns_32_36_seq #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
Square_root_udiv_32ns_5ns_32_36_seq_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1263_ap_start),
    .done(grp_fu_1263_ap_done),
    .din0(temp2_1_reg_1829),
    .din1(grp_fu_1263_p1),
    .ce(1'b1),
    .dout(grp_fu_1263_p2)
);

Square_root_mul_34ns_32s_65_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 34 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 65 ))
Square_root_mul_34ns_32s_65_3_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1352_p0),
    .din1(reg_474),
    .ce(1'b1),
    .dout(grp_fu_1352_p2)
);

Square_root_mul_34ns_32s_65_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 34 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 65 ))
Square_root_mul_34ns_32s_65_3_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1361_p0),
    .din1(a_7_reg_1839),
    .ce(1'b1),
    .dout(grp_fu_1361_p2)
);

Square_root_mac_mulsub_4ns_4ns_12ns_12_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
Square_root_mac_mulsub_4ns_4ns_12ns_12_1_U15(
    .din0(grp_fu_1550_p0),
    .din1(grp_fu_1550_p1),
    .din2(temp2_reg_402),
    .dout(grp_fu_1550_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_Square_root_dup_fu_452_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st70_fsm_69) & (tmp_38_fu_1160_p2 == 1'b0))) begin
            ap_reg_grp_Square_root_dup_fu_452_ap_start <= 1'b1;
        end else if ((1'b1 == grp_Square_root_dup_fu_452_ap_ready)) begin
            ap_reg_grp_Square_root_dup_fu_452_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == tmp_32_reg_1589) & (1'b1 == ap_sig_cseq_ST_st46_fsm_45) & ~(1'b0 == tmp_24_fu_772_p2) & (1'b0 == tmp_28_fu_788_p2))) begin
        a_2_reg_343 <= i_fu_793_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st45_fsm_44)) begin
        a_2_reg_343 <= ap_const_lv4_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == tmp_32_reg_1589) & (1'b1 == ap_sig_cseq_ST_st46_fsm_45) & (1'b0 == tmp_24_fu_772_p2))) begin
        a_3_reg_385 <= a_reg_331;
    end else if (((1'b1 == ap_sig_cseq_ST_st47_fsm_46) & (1'b0 == tmp_23_fu_844_p2))) begin
        a_3_reg_385 <= ap_const_lv4_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st47_fsm_46) & ~(1'b0 == tmp_23_fu_844_p2) & ~(1'b0 == tmp_26_fu_860_p2))) begin
        a_3_reg_385 <= a_5_cast_fu_877_p1;
    end else if (((1'b0 == tmp_32_reg_1589) & (1'b1 == ap_sig_cseq_ST_st46_fsm_45) & ~(1'b0 == tmp_24_fu_772_p2) & ~(1'b0 == tmp_28_fu_788_p2))) begin
        a_3_reg_385 <= a_1_fu_799_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st113_fsm_112) & ~(1'b0 == tmp_47_fu_1476_p2))) begin
        a_4_fu_138 <= a_7_reg_1839;
    end else if (((1'b1 == ap_sig_cseq_ST_st113_fsm_112) & (1'b0 == tmp_47_fu_1476_p2))) begin
        a_4_fu_138 <= vr2_fu_1465_p3;
    end else if ((1'b1 == ap_sig_cseq_ST_st108_fsm_107)) begin
        a_4_fu_138 <= a_8_fu_1302_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st68_fsm_67)) begin
        a_4_fu_138 <= a_6_cast_fu_1035_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == tmp_32_reg_1589) & (1'b1 == ap_sig_cseq_ST_st46_fsm_45) & ~(1'b0 == tmp_24_fu_772_p2) & (1'b0 == tmp_28_fu_788_p2))) begin
        a_reg_331 <= a_2_reg_343;
    end else if ((1'b1 == ap_sig_cseq_ST_st45_fsm_44)) begin
        a_reg_331 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st127_fsm_126)) begin
        ans_local_reg_430 <= grp_fu_457_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st117_fsm_116)) begin
        ans_local_reg_430 <= grp_fu_463_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st47_fsm_46) & ~(1'b0 == tmp_23_fu_844_p2) & (1'b0 == tmp_26_fu_860_p2))) begin
        i_1_reg_374 <= i_3_fu_865_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st44_fsm_43) & ~(1'b0 == tmp_32_reg_1589))) begin
        i_1_reg_374 <= ap_const_lv3_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st127_fsm_126)) begin
        i_2_reg_441 <= i_4_reg_1919;
    end else if ((1'b1 == ap_sig_cseq_ST_st117_fsm_116)) begin
        i_2_reg_441 <= ap_const_lv31_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st113_fsm_112) & (1'b0 == tmp_47_fu_1476_p2))) begin
        k_1_fu_146 <= k_4_reg_1819;
    end else if (((1'b1 == ap_sig_cseq_ST_st71_fsm_70) & ~(1'b0 == grp_Square_root_dup_fu_452_ap_done) & (1'b0 == tmp_77_fu_1231_p3))) begin
        k_1_fu_146 <= k_3_fu_1239_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st46_fsm_45) & (~(1'b0 == tmp_32_reg_1589) | (1'b0 == tmp_24_fu_772_p2) | ~(1'b0 == tmp_28_fu_788_p2)))) begin
        k_1_fu_146 <= k_2_cast_fu_826_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_sig_cseq_ST_st47_fsm_46) & ~(1'b0 == tmp_23_fu_844_p2) & ~(1'b0 == tmp_26_fu_860_p2)) | ((1'b1 == ap_sig_cseq_ST_st47_fsm_46) & (1'b0 == tmp_23_fu_844_p2)))) begin
                k_reg_356[0] <= 1'b0;
    end else if ((((1'b0 == tmp_32_reg_1589) & (1'b1 == ap_sig_cseq_ST_st46_fsm_45) & ~(1'b0 == tmp_24_fu_772_p2) & ~(1'b0 == tmp_28_fu_788_p2)) | ((1'b0 == tmp_32_reg_1589) & (1'b1 == ap_sig_cseq_ST_st46_fsm_45) & (1'b0 == tmp_24_fu_772_p2)))) begin
                k_reg_356[0] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == tmp_fu_480_p2))) begin
        len1_reg_320 <= len2_reg_298;
    end else if ((1'b1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        len1_reg_320 <= len2_1_fu_673_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        len2_reg_298 <= len_reg_1570;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        len2_reg_298 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        n1_reg_289 <= n_1_fu_559_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        n1_reg_289 <= num_i;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st113_fsm_112) & ~(1'b0 == tmp_47_fu_1476_p2))) begin
        remainder_4_fu_142 <= remainder_3_fu_1509_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st109_fsm_108) & (1'b0 == tmp_77_reg_1835))) begin
        remainder_4_fu_142 <= remainder_2_reg_1861;
    end else if ((1'b1 == ap_sig_cseq_ST_st69_fsm_68)) begin
        remainder_4_fu_142 <= remainder_1_cast_fu_1137_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_sig_cseq_ST_st47_fsm_46) & ~(1'b0 == tmp_23_fu_844_p2) & ~(1'b0 == tmp_26_fu_860_p2)) | ((1'b1 == ap_sig_cseq_ST_st47_fsm_46) & (1'b0 == tmp_23_fu_844_p2)))) begin
        size_of_a_0_in_reg_415 <= len_reg_1570;
    end else if ((((1'b0 == tmp_32_reg_1589) & (1'b1 == ap_sig_cseq_ST_st46_fsm_45) & ~(1'b0 == tmp_24_fu_772_p2) & ~(1'b0 == tmp_28_fu_788_p2)) | ((1'b0 == tmp_32_reg_1589) & (1'b1 == ap_sig_cseq_ST_st46_fsm_45) & (1'b0 == tmp_24_fu_772_p2)))) begin
        size_of_a_0_in_reg_415 <= len2_reg_298;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st113_fsm_112) & (1'b0 == tmp_47_fu_1476_p2))) begin
        t_fu_150 <= t_2_reg_1809;
    end else if (((1'b1 == ap_sig_cseq_ST_st109_fsm_108) & (1'b0 == tmp_77_reg_1835))) begin
        t_fu_150 <= t_1_fu_1334_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st46_fsm_45) & (~(1'b0 == tmp_32_reg_1589) | (1'b0 == tmp_24_fu_772_p2) | ~(1'b0 == tmp_28_fu_788_p2)))) begin
        t_fu_150 <= ap_const_lv32_2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_sig_cseq_ST_st47_fsm_46) & ~(1'b0 == tmp_23_fu_844_p2) & ~(1'b0 == tmp_26_fu_860_p2)) | ((1'b1 == ap_sig_cseq_ST_st47_fsm_46) & (1'b0 == tmp_23_fu_844_p2)))) begin
        temp2_reg_402 <= temp_1_cast_reg_1663;
    end else if ((((1'b0 == tmp_32_reg_1589) & (1'b1 == ap_sig_cseq_ST_st46_fsm_45) & ~(1'b0 == tmp_24_fu_772_p2) & ~(1'b0 == tmp_28_fu_788_p2)) | ((1'b0 == tmp_32_reg_1589) & (1'b1 == ap_sig_cseq_ST_st46_fsm_45) & (1'b0 == tmp_24_fu_772_p2)))) begin
        temp2_reg_402 <= temp_reg_1669;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == tmp_fu_480_p2))) begin
        tmp_s_reg_310 <= n_reg_1561;
    end else if ((1'b1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        tmp_s_reg_310 <= tmp_22_reg_1632;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st71_fsm_70) & ~(1'b0 == grp_Square_root_dup_fu_452_ap_done) & ~(1'b0 == tmp_77_fu_1231_p3))) begin
        a_7_reg_1839 <= a_7_fu_1249_p2;
        tmp_81_reg_1845 <= a_7_fu_1249_p2[ap_const_lv32_1F];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        divisor_cast1_reg_1751[4 : 1] <= divisor_cast1_fu_893_p1[4 : 1];
        divisor_reg_1746[4 : 1] <= divisor_fu_885_p3[4 : 1];
        temp_2_reg_1757 <= temp_2_fu_943_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st69_fsm_68)) begin
        divisor_cast_reg_1778[4 : 1] <= divisor_cast_fu_1104_p1[4 : 1];
        size_of_a_reg_1773 <= size_of_a_fu_1096_p3;
        tmp_37_reg_1785 <= tmp_37_fu_1142_p2;
        tmp_50_reg_1790[3 : 0] <= tmp_50_fu_1148_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        h_load_reg_1647 <= h_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st118_fsm_117)) begin
        i_4_reg_1919 <= i_4_fu_1544_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st70_fsm_69)) begin
        k_1_load_reg_1795 <= k_1_fu_146;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st70_fsm_69) & (tmp_38_fu_1160_p2 == 1'b0))) begin
        k_4_reg_1819 <= k_4_fu_1176_p2;
        remy_addr_2_reg_1814 <= tmp_41_fu_1171_p1;
        t_2_reg_1809 <= t_2_fu_1165_p2;
        t_load_2_reg_1803 <= t_fu_150;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        len_reg_1570 <= len_fu_486_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st112_fsm_111)) begin
        mul1_reg_1877 <= grp_fu_1352_p2;
        mul2_reg_1888 <= grp_fu_1361_p2;
        tmp_80_reg_1882 <= {{grp_fu_1352_p2[ap_const_lv32_40 : ap_const_lv32_24]}};
        tmp_83_reg_1893 <= {{grp_fu_1361_p2[ap_const_lv32_40 : ap_const_lv32_24]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        mul6_reg_1622 <= grp_fu_582_p2;
        tmp_67_reg_1627 <= {{grp_fu_582_p2[ap_const_lv32_40 : ap_const_lv32_24]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        mul_reg_1593 <= grp_fu_496_p2;
        tmp_49_reg_1598 <= {{grp_fu_496_p2[ap_const_lv32_40 : ap_const_lv32_24]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        n_reg_1561 <= num_i;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st107_fsm_106)) begin
        p_6_reg_1851 <= p_6_fu_1273_p3;
        tmp_87_reg_1856 <= tmp_87_fu_1281_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st68_fsm_67)) begin
        p_s_reg_1768 <= p_s_fu_1004_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_sig_cseq_ST_st70_fsm_69) & (tmp_38_fu_1160_p2 == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st70_fsm_69) & ~(tmp_38_fu_1160_p2 == 1'b0)))) begin
        reg_474 <= a_4_fu_138;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st108_fsm_107)) begin
        remainder_2_reg_1861 <= remainder_2_fu_1320_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st113_fsm_112) & (1'b0 == tmp_47_fu_1476_p2))) begin
        remy_addr_4_reg_1901 <= tmp_57_fu_1488_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st71_fsm_70) & ~(1'b0 == grp_Square_root_dup_fu_452_ap_done))) begin
        temp2_1_reg_1829 <= temp2_1_fu_1225_p2;
        tmp_77_reg_1835 <= temp2_1_fu_1225_p2[ap_const_lv32_1F];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st44_fsm_43) & ~(1'b0 == tmp_32_reg_1589))) begin
        temp_1_cast_reg_1663 <= temp_1_cast_fu_716_p1;
        temp_1_reg_1658 <= temp_1_fu_710_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st45_fsm_44)) begin
        temp_reg_1669 <= temp_fu_762_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        tmp_22_reg_1632 <= tmp_22_fu_650_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == tmp_fu_480_p2))) begin
        tmp_32_reg_1589 <= tmp_32_fu_510_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == tmp_fu_480_p2))) begin
        tmp_36_reg_1583 <= n1_reg_289[ap_const_lv32_1F];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st117_fsm_116)) begin
        tmp_40_reg_1911 <= tmp_40_fu_1530_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & (1'b0 == tmp_11_fu_566_p2))) begin
        tmp_65_reg_1616 <= tmp_s_reg_310[ap_const_lv32_1F];
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st118_fsm_117) & (1'b0 == tmp_46_fu_1539_p2))) begin
        ans_ap_vld = 1'b1;
    end else begin
        ans_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st118_fsm_117) & (1'b0 == tmp_46_fu_1539_p2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st118_fsm_117) & (1'b0 == tmp_46_fu_1539_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_423) begin
        ap_sig_cseq_ST_st107_fsm_106 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st107_fsm_106 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_434) begin
        ap_sig_cseq_ST_st108_fsm_107 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st108_fsm_107 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_606) begin
        ap_sig_cseq_ST_st109_fsm_108 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st109_fsm_108 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_443) begin
        ap_sig_cseq_ST_st110_fsm_109 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st110_fsm_109 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_454) begin
        ap_sig_cseq_ST_st112_fsm_111 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st112_fsm_111 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_469) begin
        ap_sig_cseq_ST_st113_fsm_112 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st113_fsm_112 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_663) begin
        ap_sig_cseq_ST_st114_fsm_113 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st114_fsm_113 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_481) begin
        ap_sig_cseq_ST_st117_fsm_116 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st117_fsm_116 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_492) begin
        ap_sig_cseq_ST_st118_fsm_117 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st118_fsm_117 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_501) begin
        ap_sig_cseq_ST_st127_fsm_126 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st127_fsm_126 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_142) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_182) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_256) begin
        ap_sig_cseq_ST_st41_fsm_40 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_588) begin
        ap_sig_cseq_ST_st42_fsm_41 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_265) begin
        ap_sig_cseq_ST_st43_fsm_42 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st43_fsm_42 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_274) begin
        ap_sig_cseq_ST_st44_fsm_43 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st44_fsm_43 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_293) begin
        ap_sig_cseq_ST_st45_fsm_44 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st45_fsm_44 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_302) begin
        ap_sig_cseq_ST_st46_fsm_45 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st46_fsm_45 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_329) begin
        ap_sig_cseq_ST_st47_fsm_46 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st47_fsm_46 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_350) begin
        ap_sig_cseq_ST_st48_fsm_47 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_47 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_202) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_213) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_365) begin
        ap_sig_cseq_ST_st68_fsm_67 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st68_fsm_67 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_374) begin
        ap_sig_cseq_ST_st69_fsm_68 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st69_fsm_68 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_222) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_161) begin
        ap_sig_cseq_ST_st70_fsm_69 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st70_fsm_69 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_401) begin
        ap_sig_cseq_ST_st71_fsm_70 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st71_fsm_70 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1011) begin
        ap_sig_cseq_ST_st72_fsm_71 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st72_fsm_71 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_236) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_247) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st72_fsm_71)) begin
        grp_fu_1263_ap_start = 1'b1;
    end else begin
        grp_fu_1263_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & (1'b0 == tmp_11_fu_566_p2))) begin
        grp_fu_572_ap_start = 1'b1;
    end else begin
        grp_fu_572_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        grp_fu_953_ap_start = 1'b1;
    end else begin
        grp_fu_953_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        h_address0 = tmp_18_fu_701_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        h_address0 = tmp_21_fu_679_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        h_address0 = tmp_12_fu_596_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st70_fsm_69)) begin
        h_address0 = tmp_42_fu_1182_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st44_fsm_43)) begin
        h_address0 = ap_const_lv64_1;
    end else begin
        h_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        h_address1 = tmp_16_fu_690_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        h_address1 = tmp_14_fu_601_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st46_fsm_45)) begin
        h_address1 = tmp_31_fu_815_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st43_fsm_42)) begin
        h_address1 = ap_const_lv64_0;
    end else begin
        h_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st70_fsm_69) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st41_fsm_40) | (1'b1 == ap_sig_cseq_ST_st44_fsm_43) | (1'b1 == ap_sig_cseq_ST_st42_fsm_41))) begin
        h_ce0 = 1'b1;
    end else begin
        h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st43_fsm_42) | (1'b1 == ap_sig_cseq_ST_st46_fsm_45) | (1'b1 == ap_sig_cseq_ST_st42_fsm_41))) begin
        h_ce1 = 1'b1;
    end else begin
        h_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        h_d0 = tmp_23_cast_fu_668_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st42_fsm_41))) begin
        h_d0 = ap_const_lv8_30;
    end else begin
        h_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st41_fsm_40) | ((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == tmp_11_fu_566_p2)) | (1'b1 == ap_sig_cseq_ST_st42_fsm_41))) begin
        h_we0 = 1'b1;
    end else begin
        h_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == tmp_11_fu_566_p2)) | (1'b1 == ap_sig_cseq_ST_st42_fsm_41))) begin
        h_we1 = 1'b1;
    end else begin
        h_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == tmp_32_reg_1589) & (1'b1 == ap_sig_cseq_ST_st46_fsm_45) & ~(1'b0 == tmp_24_fu_772_p2) & ~(1'b0 == tmp_28_fu_788_p2)) | ((1'b0 == tmp_32_reg_1589) & (1'b1 == ap_sig_cseq_ST_st46_fsm_45) & (1'b0 == tmp_24_fu_772_p2)))) begin
        k_phi_fu_360_p8 = ap_const_lv2_3;
    end else begin
        k_phi_fu_360_p8 = k_reg_356;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        num_o = tmp_22_fu_650_p3;
    end else begin
        num_o = num_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        num_o_ap_vld = 1'b1;
    end else begin
        num_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st114_fsm_113)) begin
        remy_address0 = remy_addr_4_reg_1901;
    end else if (((1'b1 == ap_sig_cseq_ST_st113_fsm_112) & ~(1'b0 == tmp_47_fu_1476_p2))) begin
        remy_address0 = remy_addr_2_reg_1814;
    end else if ((1'b1 == ap_sig_cseq_ST_st109_fsm_108)) begin
        remy_address0 = tmp_54_fu_1330_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st69_fsm_68)) begin
        remy_address0 = ap_const_lv64_1;
    end else if ((1'b1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        remy_address0 = ap_const_lv64_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st113_fsm_112) & (1'b0 == tmp_47_fu_1476_p2))) begin
        remy_address0 = tmp_57_fu_1488_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st70_fsm_69)) begin
        remy_address0 = tmp_41_fu_1171_p1;
    end else begin
        remy_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st70_fsm_69) | (1'b1 == ap_sig_cseq_ST_st48_fsm_47) | (1'b1 == ap_sig_cseq_ST_st69_fsm_68) | ((1'b1 == ap_sig_cseq_ST_st113_fsm_112) & (1'b0 == tmp_47_fu_1476_p2)) | (1'b1 == ap_sig_cseq_ST_st109_fsm_108) | ((1'b1 == ap_sig_cseq_ST_st113_fsm_112) & ~(1'b0 == tmp_47_fu_1476_p2)) | (1'b1 == ap_sig_cseq_ST_st114_fsm_113))) begin
        remy_ce0 = 1'b1;
    end else begin
        remy_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st114_fsm_113)) begin
        remy_d0 = tmp_58_fu_1524_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st113_fsm_112) & ~(1'b0 == tmp_47_fu_1476_p2))) begin
        remy_d0 = remainder_3_fu_1509_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st109_fsm_108)) begin
        remy_d0 = remainder_2_reg_1861;
    end else if ((1'b1 == ap_sig_cseq_ST_st69_fsm_68)) begin
        remy_d0 = remainder_1_cast_fu_1137_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        remy_d0 = remainder_cast_fu_897_p1;
    end else begin
        remy_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st48_fsm_47) | (1'b1 == ap_sig_cseq_ST_st69_fsm_68) | ((1'b1 == ap_sig_cseq_ST_st109_fsm_108) & (1'b0 == tmp_77_reg_1835)) | ((1'b1 == ap_sig_cseq_ST_st113_fsm_112) & ~(1'b0 == tmp_47_fu_1476_p2)) | (1'b1 == ap_sig_cseq_ST_st114_fsm_113))) begin
        remy_we0 = 1'b1;
    end else begin
        remy_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(1'b0 == tmp_fu_480_p2)) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st6_fsm_5 : begin
            if (~(1'b0 == tmp_11_fu_566_p2)) begin
                ap_NS_fsm = ap_ST_st42_fsm_41;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st42_fsm_41 : begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : begin
            if (~(1'b0 == tmp_32_reg_1589)) begin
                ap_NS_fsm = ap_ST_st47_fsm_46;
            end else begin
                ap_NS_fsm = ap_ST_st45_fsm_44;
            end
        end
        ap_ST_st45_fsm_44 : begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : begin
            if (((1'b0 == tmp_32_reg_1589) & ~(1'b0 == tmp_24_fu_772_p2) & (1'b0 == tmp_28_fu_788_p2))) begin
                ap_NS_fsm = ap_ST_st46_fsm_45;
            end else begin
                ap_NS_fsm = ap_ST_st48_fsm_47;
            end
        end
        ap_ST_st47_fsm_46 : begin
            if ((~(1'b0 == tmp_23_fu_844_p2) & (1'b0 == tmp_26_fu_860_p2))) begin
                ap_NS_fsm = ap_ST_st47_fsm_46;
            end else begin
                ap_NS_fsm = ap_ST_st46_fsm_45;
            end
        end
        ap_ST_st48_fsm_47 : begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : begin
            if (~(tmp_38_fu_1160_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st115_fsm_114;
            end else begin
                ap_NS_fsm = ap_ST_st71_fsm_70;
            end
        end
        ap_ST_st71_fsm_70 : begin
            if ((~(1'b0 == grp_Square_root_dup_fu_452_ap_done) & ~(1'b0 == tmp_77_fu_1231_p3))) begin
                ap_NS_fsm = ap_ST_st110_fsm_109;
            end else if ((~(1'b0 == grp_Square_root_dup_fu_452_ap_done) & (1'b0 == tmp_77_fu_1231_p3))) begin
                ap_NS_fsm = ap_ST_st72_fsm_71;
            end else begin
                ap_NS_fsm = ap_ST_st71_fsm_70;
            end
        end
        ap_ST_st72_fsm_71 : begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : begin
            ap_NS_fsm = ap_ST_st74_fsm_73;
        end
        ap_ST_st74_fsm_73 : begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : begin
            ap_NS_fsm = ap_ST_st77_fsm_76;
        end
        ap_ST_st77_fsm_76 : begin
            ap_NS_fsm = ap_ST_st78_fsm_77;
        end
        ap_ST_st78_fsm_77 : begin
            ap_NS_fsm = ap_ST_st79_fsm_78;
        end
        ap_ST_st79_fsm_78 : begin
            ap_NS_fsm = ap_ST_st80_fsm_79;
        end
        ap_ST_st80_fsm_79 : begin
            ap_NS_fsm = ap_ST_st81_fsm_80;
        end
        ap_ST_st81_fsm_80 : begin
            ap_NS_fsm = ap_ST_st82_fsm_81;
        end
        ap_ST_st82_fsm_81 : begin
            ap_NS_fsm = ap_ST_st83_fsm_82;
        end
        ap_ST_st83_fsm_82 : begin
            ap_NS_fsm = ap_ST_st84_fsm_83;
        end
        ap_ST_st84_fsm_83 : begin
            ap_NS_fsm = ap_ST_st85_fsm_84;
        end
        ap_ST_st85_fsm_84 : begin
            ap_NS_fsm = ap_ST_st86_fsm_85;
        end
        ap_ST_st86_fsm_85 : begin
            ap_NS_fsm = ap_ST_st87_fsm_86;
        end
        ap_ST_st87_fsm_86 : begin
            ap_NS_fsm = ap_ST_st88_fsm_87;
        end
        ap_ST_st88_fsm_87 : begin
            ap_NS_fsm = ap_ST_st89_fsm_88;
        end
        ap_ST_st89_fsm_88 : begin
            ap_NS_fsm = ap_ST_st90_fsm_89;
        end
        ap_ST_st90_fsm_89 : begin
            ap_NS_fsm = ap_ST_st91_fsm_90;
        end
        ap_ST_st91_fsm_90 : begin
            ap_NS_fsm = ap_ST_st92_fsm_91;
        end
        ap_ST_st92_fsm_91 : begin
            ap_NS_fsm = ap_ST_st93_fsm_92;
        end
        ap_ST_st93_fsm_92 : begin
            ap_NS_fsm = ap_ST_st94_fsm_93;
        end
        ap_ST_st94_fsm_93 : begin
            ap_NS_fsm = ap_ST_st95_fsm_94;
        end
        ap_ST_st95_fsm_94 : begin
            ap_NS_fsm = ap_ST_st96_fsm_95;
        end
        ap_ST_st96_fsm_95 : begin
            ap_NS_fsm = ap_ST_st97_fsm_96;
        end
        ap_ST_st97_fsm_96 : begin
            ap_NS_fsm = ap_ST_st98_fsm_97;
        end
        ap_ST_st98_fsm_97 : begin
            ap_NS_fsm = ap_ST_st99_fsm_98;
        end
        ap_ST_st99_fsm_98 : begin
            ap_NS_fsm = ap_ST_st100_fsm_99;
        end
        ap_ST_st100_fsm_99 : begin
            ap_NS_fsm = ap_ST_st101_fsm_100;
        end
        ap_ST_st101_fsm_100 : begin
            ap_NS_fsm = ap_ST_st102_fsm_101;
        end
        ap_ST_st102_fsm_101 : begin
            ap_NS_fsm = ap_ST_st103_fsm_102;
        end
        ap_ST_st103_fsm_102 : begin
            ap_NS_fsm = ap_ST_st104_fsm_103;
        end
        ap_ST_st104_fsm_103 : begin
            ap_NS_fsm = ap_ST_st105_fsm_104;
        end
        ap_ST_st105_fsm_104 : begin
            ap_NS_fsm = ap_ST_st106_fsm_105;
        end
        ap_ST_st106_fsm_105 : begin
            ap_NS_fsm = ap_ST_st107_fsm_106;
        end
        ap_ST_st107_fsm_106 : begin
            ap_NS_fsm = ap_ST_st108_fsm_107;
        end
        ap_ST_st108_fsm_107 : begin
            ap_NS_fsm = ap_ST_st109_fsm_108;
        end
        ap_ST_st109_fsm_108 : begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st110_fsm_109 : begin
            ap_NS_fsm = ap_ST_st111_fsm_110;
        end
        ap_ST_st111_fsm_110 : begin
            ap_NS_fsm = ap_ST_st112_fsm_111;
        end
        ap_ST_st112_fsm_111 : begin
            ap_NS_fsm = ap_ST_st113_fsm_112;
        end
        ap_ST_st113_fsm_112 : begin
            if (~(1'b0 == tmp_47_fu_1476_p2)) begin
                ap_NS_fsm = ap_ST_st109_fsm_108;
            end else begin
                ap_NS_fsm = ap_ST_st114_fsm_113;
            end
        end
        ap_ST_st114_fsm_113 : begin
            ap_NS_fsm = ap_ST_st109_fsm_108;
        end
        ap_ST_st115_fsm_114 : begin
            ap_NS_fsm = ap_ST_st116_fsm_115;
        end
        ap_ST_st116_fsm_115 : begin
            ap_NS_fsm = ap_ST_st117_fsm_116;
        end
        ap_ST_st117_fsm_116 : begin
            ap_NS_fsm = ap_ST_st118_fsm_117;
        end
        ap_ST_st118_fsm_117 : begin
            if ((1'b0 == tmp_46_fu_1539_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st119_fsm_118;
            end
        end
        ap_ST_st119_fsm_118 : begin
            ap_NS_fsm = ap_ST_st120_fsm_119;
        end
        ap_ST_st120_fsm_119 : begin
            ap_NS_fsm = ap_ST_st121_fsm_120;
        end
        ap_ST_st121_fsm_120 : begin
            ap_NS_fsm = ap_ST_st122_fsm_121;
        end
        ap_ST_st122_fsm_121 : begin
            ap_NS_fsm = ap_ST_st123_fsm_122;
        end
        ap_ST_st123_fsm_122 : begin
            ap_NS_fsm = ap_ST_st124_fsm_123;
        end
        ap_ST_st124_fsm_123 : begin
            ap_NS_fsm = ap_ST_st125_fsm_124;
        end
        ap_ST_st125_fsm_124 : begin
            ap_NS_fsm = ap_ST_st126_fsm_125;
        end
        ap_ST_st126_fsm_125 : begin
            ap_NS_fsm = ap_ST_st127_fsm_126;
        end
        ap_ST_st127_fsm_126 : begin
            ap_NS_fsm = ap_ST_st118_fsm_117;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Ny_fu_983_p2 = (p_shl4_fu_979_p1 + p_shl3_fu_967_p1);

assign a_1_fu_799_p2 = ($signed(a_2_reg_343) + $signed(ap_const_lv4_F));

assign a_2_cast17_cast_fu_768_p1 = a_2_reg_343;

assign a_3_cast15_cast_fu_881_p1 = a_3_reg_385;

assign a_5_cast_fu_877_p1 = a_5_fu_871_p2;

assign a_5_fu_871_p2 = ($signed(i_1_reg_374) + $signed(ap_const_lv3_7));

assign a_6_cast_fu_1035_p1 = $signed(a_6_fu_1030_p2);

assign a_6_fu_1030_p2 = (divisor_cast1_reg_1751 + tmp7_fu_1024_p2);

assign a_7_fu_1249_p2 = ($signed(ap_const_lv32_FFFFFFFF) + $signed(reg_474));

assign a_8_fu_1302_p2 = (tmp10_fu_1297_p2 + tmp_86_fu_1291_p2);

assign ans = ans_local_reg_430;

always @ (*) begin
    ap_sig_1011 = (1'b1 == ap_CS_fsm[ap_const_lv32_47]);
end

always @ (*) begin
    ap_sig_142 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_161 = (1'b1 == ap_CS_fsm[ap_const_lv32_45]);
end

always @ (*) begin
    ap_sig_182 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_202 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_213 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_222 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_236 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_247 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_256 = (1'b1 == ap_CS_fsm[ap_const_lv32_28]);
end

always @ (*) begin
    ap_sig_265 = (1'b1 == ap_CS_fsm[ap_const_lv32_2A]);
end

always @ (*) begin
    ap_sig_274 = (1'b1 == ap_CS_fsm[ap_const_lv32_2B]);
end

always @ (*) begin
    ap_sig_293 = (1'b1 == ap_CS_fsm[ap_const_lv32_2C]);
end

always @ (*) begin
    ap_sig_302 = (1'b1 == ap_CS_fsm[ap_const_lv32_2D]);
end

always @ (*) begin
    ap_sig_329 = (1'b1 == ap_CS_fsm[ap_const_lv32_2E]);
end

always @ (*) begin
    ap_sig_350 = (1'b1 == ap_CS_fsm[ap_const_lv32_2F]);
end

always @ (*) begin
    ap_sig_365 = (1'b1 == ap_CS_fsm[ap_const_lv32_43]);
end

always @ (*) begin
    ap_sig_374 = (1'b1 == ap_CS_fsm[ap_const_lv32_44]);
end

always @ (*) begin
    ap_sig_401 = (1'b1 == ap_CS_fsm[ap_const_lv32_46]);
end

always @ (*) begin
    ap_sig_423 = (1'b1 == ap_CS_fsm[ap_const_lv32_6A]);
end

always @ (*) begin
    ap_sig_434 = (1'b1 == ap_CS_fsm[ap_const_lv32_6B]);
end

always @ (*) begin
    ap_sig_443 = (1'b1 == ap_CS_fsm[ap_const_lv32_6D]);
end

always @ (*) begin
    ap_sig_454 = (1'b1 == ap_CS_fsm[ap_const_lv32_6F]);
end

always @ (*) begin
    ap_sig_469 = (1'b1 == ap_CS_fsm[ap_const_lv32_70]);
end

always @ (*) begin
    ap_sig_481 = (1'b1 == ap_CS_fsm[ap_const_lv32_74]);
end

always @ (*) begin
    ap_sig_492 = (1'b1 == ap_CS_fsm[ap_const_lv32_75]);
end

always @ (*) begin
    ap_sig_501 = (1'b1 == ap_CS_fsm[ap_const_lv32_7E]);
end

always @ (*) begin
    ap_sig_588 = (1'b1 == ap_CS_fsm[ap_const_lv32_29]);
end

always @ (*) begin
    ap_sig_606 = (1'b1 == ap_CS_fsm[ap_const_lv32_6C]);
end

always @ (*) begin
    ap_sig_663 = (1'b1 == ap_CS_fsm[ap_const_lv32_71]);
end

assign divisor_cast1_fu_893_p1 = divisor_fu_885_p3;

assign divisor_cast_fu_1104_p1 = divisor_reg_1746;

assign divisor_fu_885_p3 = {{a_3_reg_385}, {1'b0}};

assign grp_Square_root_dup_fu_452_ap_start = ap_reg_grp_Square_root_dup_fu_452_ap_start;

assign grp_fu_1263_p1 = divisor_cast_reg_1778;

assign grp_fu_1352_p0 = ap_const_lv65_19999999A;

assign grp_fu_1361_p0 = ap_const_lv65_19999999A;

assign grp_fu_1550_p0 = a_3_cast15_cast_fu_881_p1;

assign grp_fu_1550_p1 = a_3_cast15_cast_fu_881_p1;

assign grp_fu_496_p1 = ap_const_lv65_19999999A;

assign grp_fu_572_p1 = ap_const_lv32_A;

assign grp_fu_582_p0 = ap_const_lv65_19999999A;

assign grp_fu_953_p0 = $signed(temp_2_fu_943_p2);

assign grp_fu_953_p1 = grp_fu_953_p10;

assign grp_fu_953_p10 = divisor_fu_885_p3;

assign i_1_cast16_cast_fu_840_p1 = i_1_reg_374;

assign i_2_cast_fu_1535_p1 = i_2_reg_441;

assign i_3_fu_865_p2 = (i_1_reg_374 + ap_const_lv3_1);

assign i_4_fu_1544_p2 = (i_2_reg_441 + ap_const_lv31_1);

assign i_fu_793_p2 = (a_2_reg_343 + ap_const_lv4_1);

assign k_2_cast_fu_826_p1 = k_2_fu_820_p2;

assign k_2_fu_820_p2 = (k_cast_fu_805_p1 + ap_const_lv3_1);

assign k_3_fu_1239_p2 = (ap_const_lv32_1 + k_1_load_reg_1795);

assign k_4_fu_1176_p2 = ($signed(ap_const_lv32_FFFFFFFF) + $signed(k_1_fu_146));

assign k_cast_fu_805_p1 = k_phi_fu_360_p8;

assign len2_1_fu_673_p2 = ($signed(ap_const_lv32_FFFFFFFF) + $signed(len1_reg_320));

assign len_fu_486_p2 = (len2_reg_298 + ap_const_lv32_1);

assign n_1_fu_559_p3 = ((tmp_36_reg_1583[0:0] === 1'b1) ? neg_ti_fu_553_p2 : tmp_35_fu_543_p1);

assign neg_mul1_fu_1387_p2 = (ap_const_lv65_0 - mul1_reg_1877);

assign neg_mul2_fu_1430_p2 = (ap_const_lv65_0 - mul2_reg_1888);

assign neg_mul7_fu_615_p2 = (ap_const_lv65_0 - mul6_reg_1622);

assign neg_mul_fu_524_p2 = (ap_const_lv65_0 - mul_reg_1593);

assign neg_ti1_fu_644_p2 = (ap_const_lv32_0 - tmp_60_fu_637_p3);

assign neg_ti2_fu_1417_p2 = (ap_const_lv29_0 - p_v_v_fu_1410_p3);

assign neg_ti3_fu_1459_p2 = (ap_const_lv32_0 - tmp_74_fu_1452_p3);

assign neg_ti_fu_553_p2 = (ap_const_lv32_0 - tmp_45_fu_546_p3);

assign new_temp_fu_1219_p2 = ($signed(tmp9_cast_fu_1215_p1) + $signed(tmp8_fu_1203_p2));

assign p_6_fu_1273_p3 = ((tmp_48_fu_1267_p2[0:0] === 1'b1) ? ap_const_lv32_9 : grp_fu_1263_p2);

assign p_lshr_f_fu_1082_p4 = {{size_of_a_0_in_reg_415[ap_const_lv32_1F : ap_const_lv32_1]}};

assign p_lshr_fu_1062_p4 = {{p_neg_fu_1056_p2[ap_const_lv32_1F : ap_const_lv32_1]}};

assign p_neg_fu_1056_p2 = (ap_const_lv32_0 - size_of_a_0_in_reg_415);

assign p_neg_t_fu_1076_p2 = (ap_const_lv32_0 - tmp_61_fu_1072_p1);

assign p_s_fu_1004_p3 = ((rev_fu_998_p2[0:0] === 1'b1) ? ap_const_lv17_9 : grp_fu_953_p2);

assign p_shl1_cast_fu_908_p1 = $signed(p_shl1_fu_901_p3);

assign p_shl1_fu_901_p3 = {{grp_fu_1550_p3}, {ap_const_lv3_0}};

assign p_shl2_cast_fu_919_p1 = $signed(p_shl2_fu_912_p3);

assign p_shl2_fu_912_p3 = {{grp_fu_1550_p3}, {1'b0}};

assign p_shl3_fu_967_p1 = tmp_69_fu_959_p3;

assign p_shl4_fu_979_p1 = tmp_70_fu_971_p3;

assign p_shl6_cast_fu_738_p1 = $signed(p_shl6_fu_731_p3);

assign p_shl6_fu_731_p3 = {{h_load_reg_1647}, {1'b0}};

assign p_shl8_cast_fu_1020_p1 = p_shl8_fu_1012_p3;

assign p_shl8_fu_1012_p3 = {{a_3_reg_385}, {ap_const_lv3_0}};

assign p_shl_cast_fu_727_p1 = $signed(p_shl_fu_720_p3);

assign p_shl_fu_720_p3 = {{h_load_reg_1647}, {ap_const_lv3_0}};

assign p_v_v_fu_1410_p3 = ((tmp_78_fu_1392_p3[0:0] === 1'b1) ? tmp_79_fu_1400_p4 : tmp_80_reg_1882);

assign remainder_1_cast_fu_1137_p1 = $signed(remainder_1_fu_1131_p2);

assign remainder_1_fu_1131_p2 = ($signed(temp_2_cast_cast_fu_1107_p1) - $signed(tmp_36_cast_fu_1127_p1));

assign remainder_2_fu_1320_p2 = (temp2_1_reg_1829 - tmp_53_fu_1312_p3);

assign remainder_3_fu_1509_p2 = (divisor_cast_reg_1778 + remainder_4_fu_142);

assign remainder_cast_fu_897_p1 = $signed(grp_fu_1550_p3);

assign rev_fu_998_p2 = (slt_fu_992_p2 ^ 1'b1);

assign size_of_a_fu_1096_p3 = ((tmp_68_fu_1048_p3[0:0] === 1'b1) ? p_neg_t_fu_1076_p2 : tmp_62_fu_1092_p1);

assign slt_fu_992_p2 = (($signed(x_fu_989_p1) < $signed(Ny_fu_983_p2)) ? 1'b1 : 1'b0);

assign t_1_fu_1334_p2 = (ap_const_lv32_1 + t_load_2_reg_1803);

assign t_2_fu_1165_p2 = ($signed(ap_const_lv32_FFFFFFFF) + $signed(t_fu_150));

assign temp2_1_fu_1225_p2 = (new_temp_fu_1219_p2 - grp_Square_root_dup_fu_452_ap_return);

assign temp_1_cast_fu_716_p1 = $signed(temp_1_fu_710_p2);

assign temp_1_fu_710_p2 = ($signed(tmp_30_cast_fu_706_p1) + $signed(ap_const_lv9_1D0));

assign temp_2_cast_cast_fu_1107_p1 = $signed(temp_2_reg_1757);

assign temp_2_fu_943_p2 = ($signed(tmp5_fu_927_p2) + $signed(tmp6_cast_fu_939_p1));

assign temp_fu_762_p2 = ($signed(tmp2_fu_746_p2) + $signed(tmp3_cast_fu_758_p1));

assign tmp10_fu_1297_p2 = (tmp_85_fu_1285_p2 + p_6_reg_1851);

assign tmp2_fu_746_p2 = ($signed(p_shl_cast_fu_727_p1) + $signed(p_shl6_cast_fu_738_p1));

assign tmp3_cast_fu_758_p1 = $signed(tmp3_fu_752_p2);

assign tmp3_fu_752_p2 = ($signed(tmp_28_cast_fu_742_p1) + $signed(ap_const_lv11_5F0));

assign tmp5_fu_927_p2 = ($signed(p_shl2_cast_fu_919_p1) + $signed(p_shl1_cast_fu_908_p1));

assign tmp6_cast_fu_939_p1 = $signed(tmp6_fu_933_p2);

assign tmp6_fu_933_p2 = ($signed(tmp_41_cast_fu_923_p1) + $signed(ap_const_lv9_1D0));

assign tmp7_fu_1024_p2 = (p_s_fu_1004_p3 + p_shl8_cast_fu_1020_p1);

assign tmp8_fu_1203_p2 = (tmp_75_fu_1187_p2 + tmp_76_fu_1193_p2);

assign tmp9_cast_fu_1215_p1 = $signed(tmp9_fu_1209_p2);

assign tmp9_fu_1209_p2 = ($signed(ap_const_lv9_1D0) + $signed(tmp_53_cast_fu_1199_p1));

assign tmp_11_fu_566_p2 = ((tmp_s_reg_310 == ap_const_lv32_0) ? 1'b1 : 1'b0);

assign tmp_12_fu_596_p1 = $signed(len2_reg_298);

assign tmp_14_fu_601_p1 = $signed(len_reg_1570);

assign tmp_15_fu_684_p2 = (len2_reg_298 + ap_const_lv32_2);

assign tmp_16_fu_690_p1 = $signed(tmp_15_fu_684_p2);

assign tmp_17_fu_695_p2 = (len2_reg_298 + ap_const_lv32_3);

assign tmp_18_fu_701_p1 = $signed(tmp_17_fu_695_p2);

assign tmp_20_fu_662_p2 = ($signed(ap_const_lv6_30) + $signed(tmp_64_fu_658_p1));

assign tmp_21_fu_679_p1 = $signed(len2_1_fu_673_p2);

assign tmp_22_fu_650_p3 = ((tmp_65_reg_1616[0:0] === 1'b1) ? neg_ti1_fu_644_p2 : tmp_59_fu_634_p1);

assign tmp_23_cast_fu_668_p1 = tmp_20_fu_662_p2;

assign tmp_23_fu_844_p2 = ((i_1_reg_374 < ap_const_lv3_5) ? 1'b1 : 1'b0);

assign tmp_24_fu_772_p2 = ((a_2_reg_343 < ap_const_lv4_A) ? 1'b1 : 1'b0);

assign tmp_25_fu_850_p0 = i_1_cast16_cast_fu_840_p1;

assign tmp_25_fu_850_p1 = i_1_cast16_cast_fu_840_p1;

assign tmp_25_fu_850_p2 = (tmp_25_fu_850_p0 * tmp_25_fu_850_p1);

assign tmp_26_fu_860_p2 = (($signed(tmp_35_cast_fu_856_p1) > $signed(temp_1_reg_1658)) ? 1'b1 : 1'b0);

assign tmp_27_fu_778_p0 = a_2_cast17_cast_fu_768_p1;

assign tmp_27_fu_778_p1 = a_2_cast17_cast_fu_768_p1;

assign tmp_27_fu_778_p2 = (tmp_27_fu_778_p0 * tmp_27_fu_778_p1);

assign tmp_28_cast_fu_742_p1 = $signed(h_q0);

assign tmp_28_fu_788_p2 = (($signed(tmp_33_cast_fu_784_p1) > $signed(temp_reg_1669)) ? 1'b1 : 1'b0);

assign tmp_30_cast_fu_706_p1 = $signed(h_q1);

assign tmp_30_fu_809_p2 = ($signed(k_phi_fu_360_p8) + $signed(ap_const_lv2_3));

assign tmp_31_fu_815_p1 = tmp_30_fu_809_p2;

assign tmp_32_fu_510_p1 = len2_reg_298[0:0];

assign tmp_33_cast_fu_784_p1 = tmp_27_fu_778_p2;

assign tmp_33_fu_1113_p0 = tmp_33_fu_1113_p00;

assign tmp_33_fu_1113_p00 = a_3_reg_385;

assign tmp_33_fu_1113_p1 = p_s_reg_1768;

assign tmp_33_fu_1113_p2 = ($signed({{1'b0}, {tmp_33_fu_1113_p0}}) * $signed(tmp_33_fu_1113_p1));

assign tmp_34_fu_539_p1 = $signed(tmp_44_fu_529_p4);

assign tmp_35_cast_fu_856_p1 = tmp_25_fu_850_p2;

assign tmp_35_fu_543_p1 = $signed(tmp_49_reg_1598);

assign tmp_36_cast_fu_1127_p1 = $signed(tmp_63_fu_1119_p3);

assign tmp_37_fu_1142_p2 = (len2_reg_298 + ap_const_lv32_4);

assign tmp_38_fu_1160_p2 = (($signed(k_1_fu_146) > $signed(tmp_37_reg_1785)) ? 1'b1 : 1'b0);

assign tmp_40_fu_1530_p2 = (t_fu_150 - size_of_a_reg_1773);

assign tmp_41_cast_fu_923_p1 = $signed(h_q1);

assign tmp_41_fu_1171_p1 = $signed(t_2_fu_1165_p2);

assign tmp_42_fu_1182_p1 = $signed(k_4_fu_1176_p2);

assign tmp_44_fu_529_p4 = {{neg_mul_fu_524_p2[ap_const_lv32_40 : ap_const_lv32_24]}};

assign tmp_45_fu_546_p3 = ((tmp_36_reg_1583[0:0] === 1'b1) ? tmp_34_fu_539_p1 : tmp_35_fu_543_p1);

assign tmp_46_fu_1539_p2 = (($signed(i_2_cast_fu_1535_p1) < $signed(tmp_40_reg_1911)) ? 1'b1 : 1'b0);

assign tmp_47_fu_1476_p2 = ((tmp_71_fu_1423_p3 == tmp_84_fu_1472_p1) ? 1'b1 : 1'b0);

assign tmp_48_fu_1267_p2 = (($signed(grp_fu_1263_p2) > $signed(32'b1001)) ? 1'b1 : 1'b0);

assign tmp_50_fu_1148_p1 = a_3_reg_385;

assign tmp_51_fu_1308_p1 = tmp_50_reg_1790;

assign tmp_51_fu_1308_p2 = ($signed(tmp_87_reg_1856) * $signed({{1'b0}, {tmp_51_fu_1308_p1}}));

assign tmp_52_fu_630_p1 = $signed(tmp_66_fu_620_p4);

assign tmp_53_cast_fu_1199_p1 = $signed(h_q0);

assign tmp_53_fu_1312_p3 = {{tmp_51_fu_1308_p2}, {1'b0}};

assign tmp_54_fu_1330_p1 = $signed(t_load_2_reg_1803);

assign tmp_56_fu_1482_p2 = ($signed(t_fu_150) + $signed(ap_const_lv32_FFFFFFFE));

assign tmp_57_fu_1488_p1 = $signed(tmp_56_fu_1482_p2);

assign tmp_58_fu_1524_p2 = (remy_q0 + divisor_cast_reg_1778);

assign tmp_59_fu_634_p1 = $signed(tmp_67_reg_1627);

assign tmp_60_fu_637_p3 = ((tmp_65_reg_1616[0:0] === 1'b1) ? tmp_52_fu_630_p1 : tmp_59_fu_634_p1);

assign tmp_61_fu_1072_p1 = p_lshr_fu_1062_p4;

assign tmp_62_fu_1092_p1 = p_lshr_f_fu_1082_p4;

assign tmp_63_fu_1119_p3 = {{tmp_33_fu_1113_p2}, {1'b0}};

assign tmp_64_fu_658_p1 = grp_fu_572_p2[5:0];

assign tmp_66_fu_620_p4 = {{neg_mul7_fu_615_p2[ap_const_lv32_40 : ap_const_lv32_24]}};

assign tmp_68_fu_1048_p3 = size_of_a_0_in_reg_415[ap_const_lv32_1F];

assign tmp_69_fu_959_p3 = {{a_3_reg_385}, {ap_const_lv4_0}};

assign tmp_70_fu_971_p3 = {{a_3_reg_385}, {ap_const_lv2_0}};

assign tmp_71_fu_1423_p3 = ((tmp_78_fu_1392_p3[0:0] === 1'b1) ? neg_ti2_fu_1417_p2 : tmp_80_reg_1882);

assign tmp_72_fu_1445_p1 = $signed(tmp_82_fu_1435_p4);

assign tmp_73_fu_1449_p1 = $signed(tmp_83_reg_1893);

assign tmp_74_fu_1452_p3 = ((tmp_81_reg_1845[0:0] === 1'b1) ? tmp_72_fu_1445_p1 : tmp_73_fu_1449_p1);

assign tmp_75_fu_1187_p2 = remy_q0 << ap_const_lv32_3;

assign tmp_76_fu_1193_p2 = remy_q0 << ap_const_lv32_1;

assign tmp_77_fu_1231_p3 = temp2_1_fu_1225_p2[ap_const_lv32_1F];

assign tmp_78_fu_1392_p3 = reg_474[ap_const_lv32_1F];

assign tmp_79_fu_1400_p4 = {{neg_mul1_fu_1387_p2[ap_const_lv32_40 : ap_const_lv32_24]}};

assign tmp_82_fu_1435_p4 = {{neg_mul2_fu_1430_p2[ap_const_lv32_40 : ap_const_lv32_24]}};

assign tmp_84_fu_1472_p1 = vr2_fu_1465_p3[28:0];

assign tmp_85_fu_1285_p2 = reg_474 << ap_const_lv32_3;

assign tmp_86_fu_1291_p2 = reg_474 << ap_const_lv32_1;

assign tmp_87_fu_1281_p1 = p_6_fu_1273_p3[30:0];

assign tmp_fu_480_p2 = ((n1_reg_289 == ap_const_lv32_0) ? 1'b1 : 1'b0);

assign vr2_fu_1465_p3 = ((tmp_81_reg_1845[0:0] === 1'b1) ? neg_ti3_fu_1459_p2 : tmp_73_fu_1449_p1);

assign x_fu_989_p1 = $signed(temp_2_reg_1757);

always @ (posedge ap_clk) begin
    divisor_reg_1746[0] <= 1'b0;
    divisor_cast1_reg_1751[0] <= 1'b0;
    divisor_cast1_reg_1751[16:5] <= 12'b000000000000;
    divisor_cast_reg_1778[0] <= 1'b0;
    divisor_cast_reg_1778[31:5] <= 27'b000000000000000000000000000;
    tmp_50_reg_1790[30:4] <= 27'b000000000000000000000000000;
    k_reg_356[1] <= 1'b1;
end

endmodule //Square_root
