

================================================================
== Vivado HLS Report for 'Square_root'
================================================================
* Date:           Thu Apr 20 11:51:12 2017

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        root_explo
* Solution:       solution2
* Product family: artix7
* Target device:  xc7a200tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  30.00|     25.86|        3.75|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+-------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  |  Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count | Pipelined|
        +----------+-----+-----+----------+-----------+-----------+-------+----------+
        |- Loop 1  |    ?|    ?|         1|          -|          -|      ?|    no    |
        |- Loop 2  |    ?|    ?|        36|          -|          -|      ?|    no    |
        |- Loop 3  |    1|    9|         1|          -|          -| 1 ~ 9 |    no    |
        |- Loop 4  |    1|    4|         1|          -|          -| 1 ~ 4 |    no    |
        |- Loop 5  |    ?|    ?|         ?|          -|          -|      ?|    no    |
        |- Loop 6  |    ?|    ?|         6|          -|          -|      ?|    no    |
        +----------+-----+-----+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 110
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	2  / (!tmp)
	3  / (tmp)
3 --> 
	4  / (!tmp_11)
	39  / (tmp_11)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	3  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / (!tmp_32)
	44  / (tmp_32)
42 --> 
	43  / true
43 --> 
	45  / (tmp_32) | (!tmp_24) | (tmp_28)
	43  / (!tmp_32 & tmp_24 & !tmp_28)
44 --> 
	43  / (!tmp_23) | (tmp_26)
	44  / (tmp_23 & !tmp_26)
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	56  / true
56 --> 
	57  / true
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / true
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / (!tmp_38)
	105  / (tmp_38)
67 --> 
	68  / (!tmp_77)
	103  / (tmp_77)
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	91  / true
91 --> 
	92  / true
92 --> 
	93  / true
93 --> 
	94  / true
94 --> 
	95  / true
95 --> 
	96  / true
96 --> 
	97  / true
97 --> 
	98  / true
98 --> 
	99  / true
99 --> 
	100  / true
100 --> 
	101  / true
101 --> 
	102  / true
102 --> 
	66  / true
103 --> 
	104  / (!tmp_47)
	102  / (tmp_47)
104 --> 
	102  / true
105 --> 
	106  / (tmp_46)
106 --> 
	107  / true
107 --> 
	108  / true
108 --> 
	109  / true
109 --> 
	110  / true
110 --> 
	105  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: stg_111 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i32* %num) nounwind, !map !13

ST_1: stg_112 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(float* %ans) nounwind, !map !19

ST_1: stg_113 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecTopModule([12 x i8]* @Square_root_str) nounwind

ST_1: remy [1/1] 0.00ns
:3  %remy = alloca [20 x i32], align 16

ST_1: h [1/1] 0.00ns
:4  %h = alloca [100 x i8], align 16

ST_1: n [1/1] 0.00ns
:5  %n = call i32 @_ssdm_op_Read.ap_auto.i32P(i32* %num) nounwind

ST_1: stg_117 [1/1] 1.57ns
:6  br label %1


 <State 2>: 21.35ns
ST_2: n1 [1/1] 0.00ns
:0  %n1 = phi i32 [ %n, %0 ], [ %n_1, %2 ]

ST_2: len2 [1/1] 0.00ns
:1  %len2 = phi i32 [ 0, %0 ], [ %len, %2 ]

ST_2: tmp [1/1] 2.93ns
:2  %tmp = icmp eq i32 %n1, 0

ST_2: len [1/1] 2.39ns
:3  %len = add nsw i32 %len2, 1

ST_2: stg_122 [1/1] 0.00ns
:4  br i1 %tmp, label %.preheader.preheader, label %2

ST_2: sext_cast [1/1] 0.00ns
:0  %sext_cast = sext i32 %n1 to i65

ST_2: mul [1/1] 14.12ns
:1  %mul = mul i65 %sext_cast, 6871947674

ST_2: neg_mul [1/1] 3.47ns
:2  %neg_mul = sub i65 0, %mul

ST_2: tmp_36 [1/1] 0.00ns
:3  %tmp_36 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %n1, i32 31)

ST_2: tmp_44 [1/1] 0.00ns (grouped into LUT with out node neg_ti)
:4  %tmp_44 = call i29 @_ssdm_op_PartSelect.i29.i65.i32.i32(i65 %neg_mul, i32 36, i32 64)

ST_2: tmp_34 [1/1] 0.00ns (grouped into LUT with out node neg_ti)
:5  %tmp_34 = sext i29 %tmp_44 to i32

ST_2: tmp_49 [1/1] 0.00ns
:6  %tmp_49 = call i29 @_ssdm_op_PartSelect.i29.i65.i32.i32(i65 %mul, i32 36, i32 64)

ST_2: tmp_35 [1/1] 0.00ns
:7  %tmp_35 = sext i29 %tmp_49 to i32

ST_2: tmp_45 [1/1] 0.00ns (grouped into LUT with out node neg_ti)
:8  %tmp_45 = select i1 %tmp_36, i32 %tmp_34, i32 %tmp_35

ST_2: neg_ti [1/1] 2.39ns (out node of the LUT)
:9  %neg_ti = sub i32 0, %tmp_45

ST_2: n_1 [1/1] 1.37ns
:10  %n_1 = select i1 %tmp_36, i32 %neg_ti, i32 %tmp_35

ST_2: stg_134 [1/1] 0.00ns
:11  br label %1

ST_2: tmp_32 [1/1] 0.00ns
.preheader.preheader:0  %tmp_32 = trunc i32 %len2 to i1

ST_2: stg_136 [1/1] 1.57ns
.preheader.preheader:1  br label %.preheader


 <State 3>: 21.35ns
ST_3: tmp_s [1/1] 0.00ns
.preheader:0  %tmp_s = phi i32 [ %tmp_22, %3 ], [ %n, %.preheader.preheader ]

ST_3: len1 [1/1] 0.00ns
.preheader:1  %len1 = phi i32 [ %len2_1, %3 ], [ %len2, %.preheader.preheader ]

ST_3: tmp_11 [1/1] 2.93ns
.preheader:2  %tmp_11 = icmp eq i32 %tmp_s, 0

ST_3: stg_140 [1/1] 0.00ns
.preheader:3  br i1 %tmp_11, label %4, label %3

ST_3: tmp_19 [36/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10

ST_3: sext5_cast [1/1] 0.00ns
:8  %sext5_cast = sext i32 %tmp_s to i65

ST_3: mul6 [1/1] 14.12ns
:9  %mul6 = mul i65 6871947674, %sext5_cast

ST_3: neg_mul7 [1/1] 3.47ns
:10  %neg_mul7 = sub i65 0, %mul6

ST_3: tmp_65 [1/1] 0.00ns
:11  %tmp_65 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %tmp_s, i32 31)

ST_3: tmp_66 [1/1] 0.00ns (grouped into LUT with out node neg_ti1)
:12  %tmp_66 = call i29 @_ssdm_op_PartSelect.i29.i65.i32.i32(i65 %neg_mul7, i32 36, i32 64)

ST_3: tmp_52 [1/1] 0.00ns (grouped into LUT with out node neg_ti1)
:13  %tmp_52 = sext i29 %tmp_66 to i32

ST_3: tmp_67 [1/1] 0.00ns
:14  %tmp_67 = call i29 @_ssdm_op_PartSelect.i29.i65.i32.i32(i65 %mul6, i32 36, i32 64)

ST_3: tmp_59 [1/1] 0.00ns
:15  %tmp_59 = sext i29 %tmp_67 to i32

ST_3: tmp_60 [1/1] 0.00ns (grouped into LUT with out node neg_ti1)
:16  %tmp_60 = select i1 %tmp_65, i32 %tmp_52, i32 %tmp_59

ST_3: neg_ti1 [1/1] 2.39ns (out node of the LUT)
:17  %neg_ti1 = sub i32 0, %tmp_60

ST_3: tmp_22 [1/1] 1.37ns
:18  %tmp_22 = select i1 %tmp_65, i32 %neg_ti1, i32 %tmp_59

ST_3: stg_153 [1/1] 0.00ns
:19  call void @_ssdm_op_Write.ap_auto.i32P(i32* %num, i32 %tmp_22) nounwind

ST_3: tmp_12 [1/1] 0.00ns
:0  %tmp_12 = sext i32 %len2 to i64

ST_3: h_addr [1/1] 0.00ns
:1  %h_addr = getelementptr inbounds [100 x i8]* %h, i64 0, i64 %tmp_12

ST_3: stg_156 [1/1] 2.39ns
:2  store i8 48, i8* %h_addr, align 1

ST_3: tmp_14 [1/1] 0.00ns
:3  %tmp_14 = sext i32 %len to i64

ST_3: h_addr_1 [1/1] 0.00ns
:4  %h_addr_1 = getelementptr inbounds [100 x i8]* %h, i64 0, i64 %tmp_14

ST_3: stg_159 [1/1] 2.39ns
:5  store i8 48, i8* %h_addr_1, align 1


 <State 4>: 5.46ns
ST_4: tmp_19 [35/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 5>: 5.46ns
ST_5: tmp_19 [34/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 6>: 5.46ns
ST_6: tmp_19 [33/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 7>: 5.46ns
ST_7: tmp_19 [32/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 8>: 5.46ns
ST_8: tmp_19 [31/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 9>: 5.46ns
ST_9: tmp_19 [30/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 10>: 5.46ns
ST_10: tmp_19 [29/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 11>: 5.46ns
ST_11: tmp_19 [28/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 12>: 5.46ns
ST_12: tmp_19 [27/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 13>: 5.46ns
ST_13: tmp_19 [26/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 14>: 5.46ns
ST_14: tmp_19 [25/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 15>: 5.46ns
ST_15: tmp_19 [24/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 16>: 5.46ns
ST_16: tmp_19 [23/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 17>: 5.46ns
ST_17: tmp_19 [22/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 18>: 5.46ns
ST_18: tmp_19 [21/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 19>: 5.46ns
ST_19: tmp_19 [20/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 20>: 5.46ns
ST_20: tmp_19 [19/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 21>: 5.46ns
ST_21: tmp_19 [18/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 22>: 5.46ns
ST_22: tmp_19 [17/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 23>: 5.46ns
ST_23: tmp_19 [16/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 24>: 5.46ns
ST_24: tmp_19 [15/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 25>: 5.46ns
ST_25: tmp_19 [14/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 26>: 5.46ns
ST_26: tmp_19 [13/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 27>: 5.46ns
ST_27: tmp_19 [12/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 28>: 5.46ns
ST_28: tmp_19 [11/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 29>: 5.46ns
ST_29: tmp_19 [10/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 30>: 5.46ns
ST_30: tmp_19 [9/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 31>: 5.46ns
ST_31: tmp_19 [8/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 32>: 5.46ns
ST_32: tmp_19 [7/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 33>: 5.46ns
ST_33: tmp_19 [6/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 34>: 5.46ns
ST_34: tmp_19 [5/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 35>: 5.46ns
ST_35: tmp_19 [4/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 36>: 5.46ns
ST_36: tmp_19 [3/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 37>: 5.46ns
ST_37: tmp_19 [2/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10


 <State 38>: 9.52ns
ST_38: tmp_19 [1/36] 5.46ns
:0  %tmp_19 = srem i32 %tmp_s, 10

ST_38: tmp_64 [1/1] 0.00ns
:1  %tmp_64 = trunc i32 %tmp_19 to i6

ST_38: tmp_20 [1/1] 1.67ns
:2  %tmp_20 = add i6 -16, %tmp_64

ST_38: tmp_23_cast [1/1] 0.00ns
:3  %tmp_23_cast = zext i6 %tmp_20 to i8

ST_38: len2_1 [1/1] 2.39ns
:4  %len2_1 = add nsw i32 -1, %len1

ST_38: tmp_21 [1/1] 0.00ns
:5  %tmp_21 = sext i32 %len2_1 to i64

ST_38: h_addr_4 [1/1] 0.00ns
:6  %h_addr_4 = getelementptr inbounds [100 x i8]* %h, i64 0, i64 %tmp_21

ST_38: stg_201 [1/1] 2.39ns
:7  store i8 %tmp_23_cast, i8* %h_addr_4, align 1

ST_38: stg_202 [1/1] 0.00ns
:20  br label %.preheader


 <State 39>: 4.78ns
ST_39: tmp_15 [1/1] 2.39ns
:6  %tmp_15 = add nsw i32 %len2, 2

ST_39: tmp_16 [1/1] 0.00ns
:7  %tmp_16 = sext i32 %tmp_15 to i64

ST_39: h_addr_2 [1/1] 0.00ns
:8  %h_addr_2 = getelementptr inbounds [100 x i8]* %h, i64 0, i64 %tmp_16

ST_39: stg_206 [1/1] 2.39ns
:9  store i8 48, i8* %h_addr_2, align 1

ST_39: tmp_17 [1/1] 2.39ns
:10  %tmp_17 = add nsw i32 %len2, 3

ST_39: tmp_18 [1/1] 0.00ns
:11  %tmp_18 = sext i32 %tmp_17 to i64

ST_39: h_addr_3 [1/1] 0.00ns
:12  %h_addr_3 = getelementptr inbounds [100 x i8]* %h, i64 0, i64 %tmp_18

ST_39: stg_210 [1/1] 2.39ns
:13  store i8 48, i8* %h_addr_3, align 1


 <State 40>: 2.39ns
ST_40: h_addr_5 [1/1] 0.00ns
:14  %h_addr_5 = getelementptr inbounds [100 x i8]* %h, i64 0, i64 0

ST_40: h_load [2/2] 2.39ns
:15  %h_load = load i8* %h_addr_5, align 16


 <State 41>: 4.06ns
ST_41: h_load [1/2] 2.39ns
:15  %h_load = load i8* %h_addr_5, align 16

ST_41: stg_214 [1/1] 0.00ns
:16  br i1 %tmp_32, label %10, label %5

ST_41: h_addr_6 [1/1] 0.00ns
:4  %h_addr_6 = getelementptr inbounds [100 x i8]* %h, i64 0, i64 1

ST_41: h_load_1 [2/2] 2.39ns
:5  %h_load_1 = load i8* %h_addr_6, align 1

ST_41: tmp_30_cast [1/1] 0.00ns
:0  %tmp_30_cast = sext i8 %h_load to i9

ST_41: temp_1 [1/1] 1.67ns
:1  %temp_1 = add i9 %tmp_30_cast, -48

ST_41: temp_1_cast [1/1] 0.00ns
:2  %temp_1_cast = sext i9 %temp_1 to i12

ST_41: stg_220 [1/1] 1.57ns
:3  br label %11


 <State 42>: 5.50ns
ST_42: p_shl [1/1] 0.00ns
:0  %p_shl = call i11 @_ssdm_op_BitConcatenate.i11.i8.i3(i8 %h_load, i3 0)

ST_42: p_shl_cast [1/1] 0.00ns
:1  %p_shl_cast = sext i11 %p_shl to i12

ST_42: p_shl6 [1/1] 0.00ns
:2  %p_shl6 = call i9 @_ssdm_op_BitConcatenate.i9.i8.i1(i8 %h_load, i1 false)

ST_42: p_shl6_cast [1/1] 0.00ns
:3  %p_shl6_cast = sext i9 %p_shl6 to i12

ST_42: h_load_1 [1/2] 2.39ns
:5  %h_load_1 = load i8* %h_addr_6, align 1

ST_42: tmp_28_cast [1/1] 0.00ns
:6  %tmp_28_cast = sext i8 %h_load_1 to i11

ST_42: tmp2 [1/1] 1.32ns
:7  %tmp2 = add i12 %p_shl_cast, %p_shl6_cast

ST_42: tmp3 [1/1] 1.79ns
:8  %tmp3 = add i11 %tmp_28_cast, -528

ST_42: tmp3_cast [1/1] 0.00ns
:9  %tmp3_cast = sext i11 %tmp3 to i12

ST_42: temp [1/1] 1.32ns
:10  %temp = add i12 %tmp2, %tmp3_cast

ST_42: stg_231 [1/1] 1.57ns
:11  br label %6


 <State 43>: 7.04ns
ST_43: a [1/1] 0.00ns
:0  %a = phi i4 [ 0, %5 ], [ %a_2, %9 ]

ST_43: a_2 [1/1] 0.00ns
:1  %a_2 = phi i4 [ 1, %5 ], [ %i, %9 ]

ST_43: a_2_cast17_cast [1/1] 0.00ns
:2  %a_2_cast17_cast = zext i4 %a_2 to i8

ST_43: tmp_24 [1/1] 2.33ns
:3  %tmp_24 = icmp ult i4 %a_2, -6

ST_43: empty [1/1] 0.00ns
:4  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 9, i64 5) nounwind

ST_43: stg_237 [1/1] 1.57ns
:5  br i1 %tmp_24, label %7, label %.loopexit2

ST_43: tmp_27 [1/1] 1.40ns
:0  %tmp_27 = mul i8 %a_2_cast17_cast, %a_2_cast17_cast

ST_43: tmp_33_cast [1/1] 0.00ns
:1  %tmp_33_cast = zext i8 %tmp_27 to i12

ST_43: tmp_28 [1/1] 2.62ns
:2  %tmp_28 = icmp sgt i12 %tmp_33_cast, %temp

ST_43: stg_241 [1/1] 0.00ns
:3  br i1 %tmp_28, label %8, label %9

ST_43: i [1/1] 0.75ns
:0  %i = add i4 %a_2, 1

ST_43: stg_243 [1/1] 0.00ns
:1  br label %6

ST_43: a_1 [1/1] 0.75ns
:0  %a_1 = add i4 %a_2, -1

ST_43: stg_245 [1/1] 1.57ns
:1  br label %.loopexit2

ST_43: k [1/1] 0.00ns
.loopexit2:0  %k = phi i2 [ -1, %8 ], [ -2, %13 ], [ -2, %11 ], [ -1, %6 ]

ST_43: a_4 [1/1] 0.00ns
.loopexit2:4  %a_4 = alloca i32

ST_43: remainder_4 [1/1] 0.00ns
.loopexit2:5  %remainder_4 = alloca i32

ST_43: k_1 [1/1] 0.00ns
.loopexit2:6  %k_1 = alloca i32

ST_43: t [1/1] 0.00ns
.loopexit2:7  %t = alloca i32

ST_43: k_cast [1/1] 0.00ns
.loopexit2:8  %k_cast = zext i2 %k to i3

ST_43: tmp_30 [1/1] 0.75ns
.loopexit2:32  %tmp_30 = add i2 %k, -1

ST_43: tmp_31 [1/1] 0.00ns
.loopexit2:33  %tmp_31 = zext i2 %tmp_30 to i64

ST_43: h_addr_7 [1/1] 0.00ns
.loopexit2:34  %h_addr_7 = getelementptr inbounds [100 x i8]* %h, i64 0, i64 %tmp_31

ST_43: h_load_2 [2/2] 2.39ns
.loopexit2:35  %h_load_2 = load i8* %h_addr_7, align 1

ST_43: k_2 [1/1] 0.75ns
.loopexit2:66  %k_2 = add i3 %k_cast, 1

ST_43: k_2_cast [1/1] 0.00ns
.loopexit2:67  %k_2_cast = zext i3 %k_2 to i32

ST_43: stg_258 [1/1] 1.57ns
.loopexit2:70  store i32 2, i32* %t

ST_43: stg_259 [1/1] 1.57ns
.loopexit2:71  store i32 %k_2_cast, i32* %k_1


 <State 44>: 3.61ns
ST_44: i_1 [1/1] 0.00ns
:0  %i_1 = phi i3 [ 1, %10 ], [ %i_3, %14 ]

ST_44: i_1_cast16_cast [1/1] 0.00ns
:1  %i_1_cast16_cast = zext i3 %i_1 to i6

ST_44: tmp_23 [1/1] 1.94ns
:2  %tmp_23 = icmp ult i3 %i_1, -3

ST_44: empty_62 [1/1] 0.00ns
:3  %empty_62 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 4, i64 2) nounwind

ST_44: stg_264 [1/1] 1.57ns
:4  br i1 %tmp_23, label %12, label %.loopexit2

ST_44: tmp_25 [1/1] 1.10ns
:0  %tmp_25 = mul i6 %i_1_cast16_cast, %i_1_cast16_cast

ST_44: tmp_35_cast [1/1] 0.00ns
:1  %tmp_35_cast = zext i6 %tmp_25 to i9

ST_44: tmp_26 [1/1] 2.51ns
:2  %tmp_26 = icmp sgt i9 %tmp_35_cast, %temp_1

ST_44: stg_268 [1/1] 0.00ns
:3  br i1 %tmp_26, label %13, label %14

ST_44: i_3 [1/1] 0.75ns
:0  %i_3 = add i3 %i_1, 1

ST_44: stg_270 [1/1] 0.00ns
:1  br label %11

ST_44: a_5 [1/1] 0.75ns
:0  %a_5 = add i3 %i_1, -1

ST_44: a_5_cast [1/1] 0.00ns
:1  %a_5_cast = zext i3 %a_5 to i4

ST_44: stg_273 [1/1] 1.57ns
:2  br label %.loopexit2


 <State 45>: 15.57ns
ST_45: a_3 [1/1] 0.00ns
.loopexit2:1  %a_3 = phi i4 [ %a_1, %8 ], [ %a_5_cast, %13 ], [ 0, %11 ], [ %a, %6 ]

ST_45: temp2 [1/1] 0.00ns
.loopexit2:2  %temp2 = phi i12 [ %temp, %8 ], [ %temp_1_cast, %13 ], [ %temp_1_cast, %11 ], [ %temp, %6 ]

ST_45: a_3_cast15_cast [1/1] 0.00ns
.loopexit2:10  %a_3_cast15_cast = zext i4 %a_3 to i8

ST_45: divisor [1/1] 0.00ns
.loopexit2:19  %divisor = call i5 @_ssdm_op_BitConcatenate.i5.i4.i1(i4 %a_3, i1 false)

ST_45: divisor_cast1 [1/1] 0.00ns
.loopexit2:20  %divisor_cast1 = zext i5 %divisor to i17

ST_45: tmp_29 [1/1] 3.36ns
.loopexit2:22  %tmp_29 = mul i8 %a_3_cast15_cast, %a_3_cast15_cast

ST_45: tmp_37_cast [1/1] 0.00ns
.loopexit2:23  %tmp_37_cast = zext i8 %tmp_29 to i12

ST_45: remainder [1/1] 3.82ns
.loopexit2:24  %remainder = sub i12 %temp2, %tmp_37_cast

ST_45: remainder_cast [1/1] 0.00ns
.loopexit2:25  %remainder_cast = sext i12 %remainder to i32

ST_45: remy_addr [1/1] 0.00ns
.loopexit2:26  %remy_addr = getelementptr inbounds [20 x i32]* %remy, i64 0, i64 0

ST_45: stg_284 [1/1] 2.39ns
.loopexit2:27  store i32 %remainder_cast, i32* %remy_addr, align 16

ST_45: p_shl1 [1/1] 0.00ns
.loopexit2:28  %p_shl1 = call i15 @_ssdm_op_BitConcatenate.i15.i12.i3(i12 %remainder, i3 0)

ST_45: p_shl1_cast [1/1] 0.00ns
.loopexit2:29  %p_shl1_cast = sext i15 %p_shl1 to i16

ST_45: p_shl2 [1/1] 0.00ns
.loopexit2:30  %p_shl2 = call i13 @_ssdm_op_BitConcatenate.i13.i12.i1(i12 %remainder, i1 false)

ST_45: p_shl2_cast [1/1] 0.00ns
.loopexit2:31  %p_shl2_cast = sext i13 %p_shl2 to i16

ST_45: h_load_2 [1/2] 2.39ns
.loopexit2:35  %h_load_2 = load i8* %h_addr_7, align 1

ST_45: tmp_41_cast [1/1] 0.00ns
.loopexit2:36  %tmp_41_cast = sext i8 %h_load_2 to i9

ST_45: tmp5 [1/1] 1.68ns
.loopexit2:37  %tmp5 = add i16 %p_shl2_cast, %p_shl1_cast

ST_45: tmp6 [1/1] 1.67ns
.loopexit2:38  %tmp6 = add i9 %tmp_41_cast, -48

ST_45: tmp6_cast [1/1] 0.00ns
.loopexit2:39  %tmp6_cast = sext i9 %tmp6 to i16

ST_45: temp_2 [1/1] 1.68ns
.loopexit2:40  %temp_2 = add i16 %tmp5, %tmp6_cast

ST_45: temp_2_tr [1/1] 0.00ns
.loopexit2:42  %temp_2_tr = sext i16 %temp_2 to i17

ST_45: tmp_1 [21/21] 5.03ns
.loopexit2:43  %tmp_1 = sdiv i17 %temp_2_tr, %divisor_cast1


 <State 46>: 5.03ns
ST_46: tmp_1 [20/21] 5.03ns
.loopexit2:43  %tmp_1 = sdiv i17 %temp_2_tr, %divisor_cast1


 <State 47>: 5.03ns
ST_47: tmp_1 [19/21] 5.03ns
.loopexit2:43  %tmp_1 = sdiv i17 %temp_2_tr, %divisor_cast1


 <State 48>: 5.03ns
ST_48: tmp_1 [18/21] 5.03ns
.loopexit2:43  %tmp_1 = sdiv i17 %temp_2_tr, %divisor_cast1


 <State 49>: 5.03ns
ST_49: tmp_1 [17/21] 5.03ns
.loopexit2:43  %tmp_1 = sdiv i17 %temp_2_tr, %divisor_cast1


 <State 50>: 5.03ns
ST_50: tmp_1 [16/21] 5.03ns
.loopexit2:43  %tmp_1 = sdiv i17 %temp_2_tr, %divisor_cast1


 <State 51>: 5.03ns
ST_51: tmp_1 [15/21] 5.03ns
.loopexit2:43  %tmp_1 = sdiv i17 %temp_2_tr, %divisor_cast1


 <State 52>: 5.03ns
ST_52: tmp_1 [14/21] 5.03ns
.loopexit2:43  %tmp_1 = sdiv i17 %temp_2_tr, %divisor_cast1


 <State 53>: 5.03ns
ST_53: tmp_1 [13/21] 5.03ns
.loopexit2:43  %tmp_1 = sdiv i17 %temp_2_tr, %divisor_cast1


 <State 54>: 5.03ns
ST_54: tmp_1 [12/21] 5.03ns
.loopexit2:43  %tmp_1 = sdiv i17 %temp_2_tr, %divisor_cast1


 <State 55>: 5.03ns
ST_55: tmp_1 [11/21] 5.03ns
.loopexit2:43  %tmp_1 = sdiv i17 %temp_2_tr, %divisor_cast1


 <State 56>: 5.03ns
ST_56: tmp_1 [10/21] 5.03ns
.loopexit2:43  %tmp_1 = sdiv i17 %temp_2_tr, %divisor_cast1


 <State 57>: 5.03ns
ST_57: tmp_1 [9/21] 5.03ns
.loopexit2:43  %tmp_1 = sdiv i17 %temp_2_tr, %divisor_cast1


 <State 58>: 5.03ns
ST_58: tmp_1 [8/21] 5.03ns
.loopexit2:43  %tmp_1 = sdiv i17 %temp_2_tr, %divisor_cast1


 <State 59>: 5.03ns
ST_59: tmp_1 [7/21] 5.03ns
.loopexit2:43  %tmp_1 = sdiv i17 %temp_2_tr, %divisor_cast1


 <State 60>: 5.03ns
ST_60: tmp_1 [6/21] 5.03ns
.loopexit2:43  %tmp_1 = sdiv i17 %temp_2_tr, %divisor_cast1


 <State 61>: 5.03ns
ST_61: tmp_1 [5/21] 5.03ns
.loopexit2:43  %tmp_1 = sdiv i17 %temp_2_tr, %divisor_cast1


 <State 62>: 5.03ns
ST_62: tmp_1 [4/21] 5.03ns
.loopexit2:43  %tmp_1 = sdiv i17 %temp_2_tr, %divisor_cast1


 <State 63>: 5.03ns
ST_63: tmp_1 [3/21] 5.03ns
.loopexit2:43  %tmp_1 = sdiv i17 %temp_2_tr, %divisor_cast1


 <State 64>: 5.03ns
ST_64: tmp_1 [2/21] 5.03ns
.loopexit2:43  %tmp_1 = sdiv i17 %temp_2_tr, %divisor_cast1


 <State 65>: 18.12ns
ST_65: size_of_a_0_in [1/1] 0.00ns
.loopexit2:3  %size_of_a_0_in = phi i32 [ %len2, %8 ], [ %len, %13 ], [ %len, %11 ], [ %len2, %6 ]

ST_65: a_3_cast15_cast1 [1/1] 0.00ns
.loopexit2:9  %a_3_cast15_cast1 = zext i4 %a_3 to i21

ST_65: tmp_68 [1/1] 0.00ns
.loopexit2:11  %tmp_68 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %size_of_a_0_in, i32 31)

ST_65: p_neg [1/1] 2.39ns
.loopexit2:12  %p_neg = sub i32 0, %size_of_a_0_in

ST_65: p_lshr [1/1] 0.00ns
.loopexit2:13  %p_lshr = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %p_neg, i32 1, i32 31)

ST_65: tmp_61 [1/1] 0.00ns
.loopexit2:14  %tmp_61 = zext i31 %p_lshr to i32

ST_65: p_neg_t [1/1] 2.39ns
.loopexit2:15  %p_neg_t = sub i32 0, %tmp_61

ST_65: p_lshr_f [1/1] 0.00ns
.loopexit2:16  %p_lshr_f = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %size_of_a_0_in, i32 1, i32 31)

ST_65: tmp_62 [1/1] 0.00ns
.loopexit2:17  %tmp_62 = zext i31 %p_lshr_f to i32

ST_65: size_of_a [1/1] 1.37ns
.loopexit2:18  %size_of_a = select i1 %tmp_68, i32 %p_neg_t, i32 %tmp_62

ST_65: divisor_cast [1/1] 0.00ns
.loopexit2:21  %divisor_cast = zext i5 %divisor to i32

ST_65: temp_2_cast_cast [1/1] 0.00ns
.loopexit2:41  %temp_2_cast_cast = sext i16 %temp_2 to i23

ST_65: tmp_1 [1/21] 5.03ns
.loopexit2:43  %tmp_1 = sdiv i17 %temp_2_tr, %divisor_cast1

ST_65: tmp_69 [1/1] 0.00ns
.loopexit2:44  %tmp_69 = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %a_3, i4 0)

ST_65: p_shl3 [1/1] 0.00ns
.loopexit2:45  %p_shl3 = zext i8 %tmp_69 to i22

ST_65: tmp_70 [1/1] 0.00ns
.loopexit2:46  %tmp_70 = call i6 @_ssdm_op_BitConcatenate.i6.i4.i2(i4 %a_3, i2 0)

ST_65: p_shl4 [1/1] 0.00ns
.loopexit2:47  %p_shl4 = zext i6 %tmp_70 to i22

ST_65: Ny [1/1] 1.67ns
.loopexit2:48  %Ny = add i22 %p_shl4, %p_shl3

ST_65: x [1/1] 0.00ns
.loopexit2:49  %x = sext i16 %temp_2 to i22

ST_65: slt [1/1] 2.77ns
.loopexit2:50  %slt = icmp slt i22 %x, %Ny

ST_65: rev [1/1] 0.00ns (grouped into LUT with out node p_s)
.loopexit2:51  %rev = xor i1 %slt, true

ST_65: p_s [1/1] 1.37ns (out node of the LUT)
.loopexit2:52  %p_s = select i1 %rev, i17 9, i17 %tmp_1

ST_65: p_cast_cast [1/1] 0.00ns
.loopexit2:53  %p_cast_cast = sext i17 %p_s to i21

ST_65: p_shl8 [1/1] 0.00ns
.loopexit2:54  %p_shl8 = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %a_3, i3 0)

ST_65: p_shl8_cast [1/1] 0.00ns
.loopexit2:55  %p_shl8_cast = zext i7 %p_shl8 to i17

ST_65: tmp7 [1/1] 1.74ns
.loopexit2:56  %tmp7 = add i17 %p_s, %p_shl8_cast

ST_65: a_6 [1/1] 1.74ns
.loopexit2:57  %a_6 = add i17 %divisor_cast1, %tmp7

ST_65: a_6_cast [1/1] 0.00ns
.loopexit2:58  %a_6_cast = sext i17 %a_6 to i32

ST_65: tmp_33 [1/1] 7.18ns
.loopexit2:59  %tmp_33 = mul i21 %a_3_cast15_cast1, %p_cast_cast

ST_65: tmp_63 [1/1] 0.00ns
.loopexit2:60  %tmp_63 = call i22 @_ssdm_op_BitConcatenate.i22.i21.i1(i21 %tmp_33, i1 false)

ST_65: tmp_36_cast [1/1] 0.00ns
.loopexit2:61  %tmp_36_cast = sext i22 %tmp_63 to i23

ST_65: remainder_1 [1/1] 2.15ns
.loopexit2:62  %remainder_1 = sub i23 %temp_2_cast_cast, %tmp_36_cast

ST_65: remainder_1_cast [1/1] 0.00ns
.loopexit2:63  %remainder_1_cast = sext i23 %remainder_1 to i32

ST_65: remy_addr_1 [1/1] 0.00ns
.loopexit2:64  %remy_addr_1 = getelementptr inbounds [20 x i32]* %remy, i64 0, i64 1

ST_65: stg_350 [1/1] 2.39ns
.loopexit2:65  store i32 %remainder_1_cast, i32* %remy_addr_1, align 4

ST_65: tmp_37 [1/1] 2.39ns
.loopexit2:68  %tmp_37 = add nsw i32 %len2, 4

ST_65: tmp_50 [1/1] 0.00ns
.loopexit2:69  %tmp_50 = zext i4 %a_3 to i31

ST_65: stg_353 [1/1] 1.57ns
.loopexit2:72  store i32 %remainder_1_cast, i32* %remainder_4

ST_65: stg_354 [1/1] 1.57ns
.loopexit2:73  store i32 %a_6_cast, i32* %a_4

ST_65: stg_355 [1/1] 0.00ns
.loopexit2:74  br label %.backedge


 <State 66>: 24.56ns
ST_66: k_1_load [1/1] 0.00ns
.backedge:0  %k_1_load = load i32* %k_1

ST_66: tmp_38 [1/1] 2.93ns
.backedge:1  %tmp_38 = icmp sgt i32 %k_1_load, %tmp_37

ST_66: stg_358 [1/1] 0.00ns
.backedge:2  br i1 %tmp_38, label %20, label %15

ST_66: a_4_load_1 [1/1] 0.00ns
:0  %a_4_load_1 = load i32* %a_4

ST_66: t_load_2 [1/1] 0.00ns
:1  %t_load_2 = load i32* %t

ST_66: t_2 [1/1] 2.39ns
:2  %t_2 = add nsw i32 -1, %t_load_2

ST_66: tmp_41 [1/1] 0.00ns
:3  %tmp_41 = sext i32 %t_2 to i64

ST_66: remy_addr_2 [1/1] 0.00ns
:4  %remy_addr_2 = getelementptr inbounds [20 x i32]* %remy, i64 0, i64 %tmp_41

ST_66: remy_load [2/2] 2.39ns
:5  %remy_load = load i32* %remy_addr_2, align 4

ST_66: k_4 [1/1] 2.39ns
:8  %k_4 = add nsw i32 -1, %k_1_load

ST_66: tmp_42 [1/1] 0.00ns
:9  %tmp_42 = sext i32 %k_4 to i64

ST_66: h_addr_8 [1/1] 0.00ns
:10  %h_addr_8 = getelementptr inbounds [100 x i8]* %h, i64 0, i64 %tmp_42

ST_66: h_load_3 [2/2] 2.39ns
:11  %h_load_3 = load i8* %h_addr_8, align 1

ST_66: tmp_43 [2/2] 4.08ns
:13  %tmp_43 = call fastcc i32 @Square_root_dup(i32 %a_4_load_1) nounwind

ST_66: a_4_load [1/1] 0.00ns
:0  %a_4_load = load i32* %a_4

ST_66: t_load_1 [1/1] 0.00ns
:1  %t_load_1 = load i32* %t

ST_66: tmp_39 [1/1] 22.99ns
:2  %tmp_39 = sitofp i32 %a_4_load to float

ST_66: tmp_40 [1/1] 2.39ns
:3  %tmp_40 = sub nsw i32 %t_load_1, %size_of_a

ST_66: stg_374 [1/1] 1.57ns
:4  br label %21


 <State 67>: 18.32ns
ST_67: remy_load [1/2] 2.39ns
:5  %remy_load = load i32* %remy_addr_2, align 4

ST_67: tmp_75 [1/1] 0.00ns (grouped into LUT with out node tmp8)
:6  %tmp_75 = shl i32 %remy_load, 3

ST_67: tmp_76 [1/1] 0.00ns (grouped into LUT with out node tmp8)
:7  %tmp_76 = shl i32 %remy_load, 1

ST_67: h_load_3 [1/2] 2.39ns
:11  %h_load_3 = load i8* %h_addr_8, align 1

ST_67: tmp_53_cast [1/1] 0.00ns
:12  %tmp_53_cast = sext i8 %h_load_3 to i9

ST_67: tmp_43 [1/2] 10.94ns
:13  %tmp_43 = call fastcc i32 @Square_root_dup(i32 %a_4_load_1) nounwind

ST_67: tmp8 [1/1] 2.39ns (out node of the LUT)
:14  %tmp8 = add i32 %tmp_75, %tmp_76

ST_67: tmp9 [1/1] 1.67ns
:15  %tmp9 = add i9 -48, %tmp_53_cast

ST_67: tmp9_cast [1/1] 0.00ns
:16  %tmp9_cast = sext i9 %tmp9 to i32

ST_67: new_temp [1/1] 1.92ns
:17  %new_temp = add i32 %tmp9_cast, %tmp8

ST_67: temp2_1 [1/1] 1.92ns
:18  %temp2_1 = sub i32 %new_temp, %tmp_43

ST_67: tmp_77 [1/1] 0.00ns
:19  %tmp_77 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %temp2_1, i32 31)

ST_67: stg_387 [1/1] 0.00ns
:20  br i1 %tmp_77, label %16, label %19

ST_67: quotient [36/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast

ST_67: k_3 [1/1] 2.39ns
:14  %k_3 = add nsw i32 1, %k_1_load

ST_67: stg_390 [1/1] 1.57ns
:17  store i32 %k_3, i32* %k_1

ST_67: a_7 [1/1] 2.39ns
:9  %a_7 = add nsw i32 -1, %a_4_load_1

ST_67: tmp_81 [1/1] 0.00ns
:13  %tmp_81 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %a_7, i32 31)


 <State 68>: 5.46ns
ST_68: quotient [35/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 69>: 5.46ns
ST_69: quotient [34/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 70>: 5.46ns
ST_70: quotient [33/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 71>: 5.46ns
ST_71: quotient [32/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 72>: 5.46ns
ST_72: quotient [31/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 73>: 5.46ns
ST_73: quotient [30/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 74>: 5.46ns
ST_74: quotient [29/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 75>: 5.46ns
ST_75: quotient [28/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 76>: 5.46ns
ST_76: quotient [27/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 77>: 5.46ns
ST_77: quotient [26/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 78>: 5.46ns
ST_78: quotient [25/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 79>: 5.46ns
ST_79: quotient [24/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 80>: 5.46ns
ST_80: quotient [23/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 81>: 5.46ns
ST_81: quotient [22/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 82>: 5.46ns
ST_82: quotient [21/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 83>: 5.46ns
ST_83: quotient [20/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 84>: 5.46ns
ST_84: quotient [19/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 85>: 5.46ns
ST_85: quotient [18/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 86>: 5.46ns
ST_86: quotient [17/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 87>: 5.46ns
ST_87: quotient [16/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 88>: 5.46ns
ST_88: quotient [15/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 89>: 5.46ns
ST_89: quotient [14/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 90>: 5.46ns
ST_90: quotient [13/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 91>: 5.46ns
ST_91: quotient [12/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 92>: 5.46ns
ST_92: quotient [11/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 93>: 5.46ns
ST_93: quotient [10/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 94>: 5.46ns
ST_94: quotient [9/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 95>: 5.46ns
ST_95: quotient [8/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 96>: 5.46ns
ST_96: quotient [7/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 97>: 5.46ns
ST_97: quotient [6/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 98>: 5.46ns
ST_98: quotient [5/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 99>: 5.46ns
ST_99: quotient [4/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 100>: 5.46ns
ST_100: quotient [3/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 101>: 5.46ns
ST_101: quotient [2/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast


 <State 102>: 24.23ns
ST_102: quotient [1/36] 5.46ns
:0  %quotient = udiv i32 %temp2_1, %divisor_cast

ST_102: tmp_48 [1/1] 2.93ns
:1  %tmp_48 = icmp sgt i32 %quotient, 9

ST_102: p_6 [1/1] 1.37ns
:2  %p_6 = select i1 %tmp_48, i32 9, i32 %quotient

ST_102: tmp_85 [1/1] 0.00ns
:3  %tmp_85 = shl i32 %a_4_load_1, 3

ST_102: tmp_86 [1/1] 0.00ns
:4  %tmp_86 = shl i32 %a_4_load_1, 1

ST_102: tmp10 [1/1] 1.92ns
:5  %tmp10 = add i32 %tmp_85, %p_6

ST_102: a_8 [1/1] 1.92ns
:6  %a_8 = add nsw i32 %tmp10, %tmp_86

ST_102: tmp_87 [1/1] 0.00ns
:7  %tmp_87 = trunc i32 %p_6 to i31

ST_102: tmp_51 [1/1] 9.69ns
:8  %tmp_51 = mul i31 %tmp_87, %tmp_50

ST_102: tmp_53 [1/1] 0.00ns
:9  %tmp_53 = call i32 @_ssdm_op_BitConcatenate.i32.i31.i1(i31 %tmp_51, i1 false)

ST_102: remainder_2 [1/1] 2.39ns
:10  %remainder_2 = sub nsw i32 %temp2_1, %tmp_53

ST_102: tmp_54 [1/1] 0.00ns
:11  %tmp_54 = sext i32 %t_load_2 to i64

ST_102: remy_addr_3 [1/1] 0.00ns
:12  %remy_addr_3 = getelementptr inbounds [20 x i32]* %remy, i64 0, i64 %tmp_54

ST_102: stg_440 [1/1] 2.39ns
:13  store i32 %remainder_2, i32* %remy_addr_3, align 4

ST_102: t_1 [1/1] 2.39ns
:15  %t_1 = add nsw i32 1, %t_load_2

ST_102: stg_442 [1/1] 1.57ns
:16  store i32 %t_1, i32* %t

ST_102: stg_443 [1/1] 1.57ns
:18  store i32 %remainder_2, i32* %remainder_4

ST_102: stg_444 [1/1] 1.57ns
:19  store i32 %a_8, i32* %a_4

ST_102: stg_445 [1/1] 0.00ns
:20  br label %.backedge.backedge

ST_102: stg_446 [1/1] 0.00ns
.backedge.backedge:0  br label %.backedge


 <State 103>: 24.25ns
ST_103: sext1_cast [1/1] 0.00ns
:0  %sext1_cast = sext i32 %a_4_load_1 to i65

ST_103: mul1 [1/1] 14.12ns
:1  %mul1 = mul i65 6871947674, %sext1_cast

ST_103: neg_mul1 [1/1] 3.47ns
:2  %neg_mul1 = sub i65 0, %mul1

ST_103: tmp_78 [1/1] 0.00ns
:3  %tmp_78 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %a_4_load_1, i32 31)

ST_103: tmp_79 [1/1] 0.00ns (grouped into LUT with out node neg_ti2)
:4  %tmp_79 = call i29 @_ssdm_op_PartSelect.i29.i65.i32.i32(i65 %neg_mul1, i32 36, i32 64)

ST_103: tmp_80 [1/1] 0.00ns
:5  %tmp_80 = call i29 @_ssdm_op_PartSelect.i29.i65.i32.i32(i65 %mul1, i32 36, i32 64)

ST_103: p_v_v [1/1] 0.00ns (grouped into LUT with out node neg_ti2)
:6  %p_v_v = select i1 %tmp_78, i29 %tmp_79, i29 %tmp_80

ST_103: neg_ti2 [1/1] 2.39ns (out node of the LUT)
:7  %neg_ti2 = sub i29 0, %p_v_v

ST_103: tmp_71 [1/1] 0.00ns (grouped into LUT with out node tmp_47)
:8  %tmp_71 = select i1 %tmp_78, i29 %neg_ti2, i29 %tmp_80

ST_103: sext2_cast [1/1] 0.00ns
:10  %sext2_cast = sext i32 %a_7 to i65

ST_103: mul2 [1/1] 14.12ns
:11  %mul2 = mul i65 6871947674, %sext2_cast

ST_103: neg_mul2 [1/1] 3.47ns
:12  %neg_mul2 = sub i65 0, %mul2

ST_103: tmp_82 [1/1] 0.00ns (grouped into LUT with out node neg_ti3)
:14  %tmp_82 = call i29 @_ssdm_op_PartSelect.i29.i65.i32.i32(i65 %neg_mul2, i32 36, i32 64)

ST_103: tmp_72 [1/1] 0.00ns (grouped into LUT with out node neg_ti3)
:15  %tmp_72 = sext i29 %tmp_82 to i32

ST_103: tmp_83 [1/1] 0.00ns
:16  %tmp_83 = call i29 @_ssdm_op_PartSelect.i29.i65.i32.i32(i65 %mul2, i32 36, i32 64)

ST_103: tmp_73 [1/1] 0.00ns
:17  %tmp_73 = sext i29 %tmp_83 to i32

ST_103: tmp_74 [1/1] 0.00ns (grouped into LUT with out node neg_ti3)
:18  %tmp_74 = select i1 %tmp_81, i32 %tmp_72, i32 %tmp_73

ST_103: neg_ti3 [1/1] 2.39ns (out node of the LUT)
:19  %neg_ti3 = sub i32 0, %tmp_74

ST_103: vr2 [1/1] 1.37ns
:20  %vr2 = select i1 %tmp_81, i32 %neg_ti3, i32 %tmp_73

ST_103: tmp_84 [1/1] 0.00ns (grouped into LUT with out node tmp_47)
:21  %tmp_84 = trunc i32 %vr2 to i29

ST_103: tmp_47 [1/1] 2.90ns (out node of the LUT)
:22  %tmp_47 = icmp eq i29 %tmp_71, %tmp_84

ST_103: stg_468 [1/1] 0.00ns
:23  br i1 %tmp_47, label %17, label %18

ST_103: t_load [1/1] 0.00ns
:0  %t_load = load i32* %t

ST_103: tmp_56 [1/1] 2.39ns
:1  %tmp_56 = add nsw i32 %t_load, -2

ST_103: tmp_57 [1/1] 0.00ns
:2  %tmp_57 = sext i32 %tmp_56 to i64

ST_103: remy_addr_4 [1/1] 0.00ns
:3  %remy_addr_4 = getelementptr inbounds [20 x i32]* %remy, i64 0, i64 %tmp_57

ST_103: remy_load_1 [2/2] 2.39ns
:4  %remy_load_1 = load i32* %remy_addr_4, align 4

ST_103: stg_474 [1/1] 1.57ns
:7  store i32 %t_2, i32* %t

ST_103: stg_475 [1/1] 1.57ns
:8  store i32 %k_4, i32* %k_1

ST_103: stg_476 [1/1] 1.57ns
:9  store i32 %vr2, i32* %a_4

ST_103: remainder_4_load [1/1] 0.00ns
:0  %remainder_4_load = load i32* %remainder_4

ST_103: remainder_3 [1/1] 2.39ns
:1  %remainder_3 = add nsw i32 %divisor_cast, %remainder_4_load

ST_103: stg_479 [1/1] 2.39ns
:2  store i32 %remainder_3, i32* %remy_addr_2, align 4

ST_103: stg_480 [1/1] 1.57ns
:3  store i32 %remainder_3, i32* %remainder_4

ST_103: stg_481 [1/1] 1.57ns
:4  store i32 %a_7, i32* %a_4

ST_103: stg_482 [1/1] 0.00ns
:5  br label %.backedge.backedge


 <State 104>: 7.17ns
ST_104: remy_load_1 [1/2] 2.39ns
:4  %remy_load_1 = load i32* %remy_addr_4, align 4

ST_104: tmp_58 [1/1] 2.39ns
:5  %tmp_58 = add nsw i32 %remy_load_1, %divisor_cast

ST_104: stg_485 [1/1] 2.39ns
:6  store i32 %tmp_58, i32* %remy_addr_4, align 4

ST_104: stg_486 [1/1] 0.00ns
:10  br label %.backedge.backedge


 <State 105>: 24.35ns
ST_105: ans_local [1/1] 0.00ns
:0  %ans_local = phi float [ %tmp_39, %20 ], [ %tmp_55, %22 ]

ST_105: i_2 [1/1] 0.00ns
:1  %i_2 = phi i31 [ 0, %20 ], [ %i_4, %22 ]

ST_105: i_2_cast [1/1] 0.00ns
:2  %i_2_cast = zext i31 %i_2 to i32

ST_105: tmp_46 [1/1] 2.93ns
:3  %tmp_46 = icmp slt i32 %i_2_cast, %tmp_40

ST_105: i_4 [1/1] 2.39ns
:4  %i_4 = add i31 %i_2, 1

ST_105: stg_492 [1/1] 0.00ns
:5  br i1 %tmp_46, label %22, label %23

ST_105: tmp_55 [6/6] 24.35ns
:0  %tmp_55 = fdiv float %ans_local, 1.000000e+01

ST_105: stg_494 [1/1] 0.00ns
:0  call void @_ssdm_op_Write.ap_auto.floatP(float* %ans, float %ans_local) nounwind

ST_105: stg_495 [1/1] 0.00ns
:1  ret void


 <State 106>: 24.35ns
ST_106: tmp_55 [5/6] 24.35ns
:0  %tmp_55 = fdiv float %ans_local, 1.000000e+01


 <State 107>: 24.35ns
ST_107: tmp_55 [4/6] 24.35ns
:0  %tmp_55 = fdiv float %ans_local, 1.000000e+01


 <State 108>: 24.35ns
ST_108: tmp_55 [3/6] 24.35ns
:0  %tmp_55 = fdiv float %ans_local, 1.000000e+01


 <State 109>: 24.35ns
ST_109: tmp_55 [2/6] 24.35ns
:0  %tmp_55 = fdiv float %ans_local, 1.000000e+01


 <State 110>: 24.35ns
ST_110: tmp_55 [1/6] 24.35ns
:0  %tmp_55 = fdiv float %ans_local, 1.000000e+01

ST_110: stg_501 [1/1] 0.00ns
:1  br label %21



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 30ns, clock uncertainty: 3.75ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
