// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Square_root,hls_ip_2016_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200tfbg484-1,HLS_INPUT_CLOCK=30.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=25.860000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=33,HLS_SYN_FF=2953,HLS_SYN_LUT=5443}" *)

module Square_root (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        num_i,
        num_o,
        num_o_ap_vld,
        ans,
        ans_ap_vld
);

parameter    ap_ST_st1_fsm_0 = 110'b1;
parameter    ap_ST_st2_fsm_1 = 110'b10;
parameter    ap_ST_st3_fsm_2 = 110'b100;
parameter    ap_ST_st4_fsm_3 = 110'b1000;
parameter    ap_ST_st5_fsm_4 = 110'b10000;
parameter    ap_ST_st6_fsm_5 = 110'b100000;
parameter    ap_ST_st7_fsm_6 = 110'b1000000;
parameter    ap_ST_st8_fsm_7 = 110'b10000000;
parameter    ap_ST_st9_fsm_8 = 110'b100000000;
parameter    ap_ST_st10_fsm_9 = 110'b1000000000;
parameter    ap_ST_st11_fsm_10 = 110'b10000000000;
parameter    ap_ST_st12_fsm_11 = 110'b100000000000;
parameter    ap_ST_st13_fsm_12 = 110'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 110'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 110'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 110'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 110'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 110'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 110'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 110'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 110'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 110'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 110'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 110'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 110'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 110'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 110'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 110'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 110'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 110'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 110'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 110'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 110'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 110'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 110'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 110'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 110'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 110'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 110'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 110'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 110'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 110'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 110'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 110'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 110'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 110'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 110'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 110'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 110'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 110'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 110'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 110'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 110'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 110'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 110'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 110'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 110'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 110'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 110'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 110'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 110'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 110'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 110'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 110'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 110'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 110'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 110'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 110'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 110'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 110'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 110'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 110'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 110'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 110'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 110'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 110'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 110'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st78_fsm_77 = 110'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st79_fsm_78 = 110'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st80_fsm_79 = 110'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_80 = 110'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st82_fsm_81 = 110'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st83_fsm_82 = 110'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st84_fsm_83 = 110'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st85_fsm_84 = 110'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st86_fsm_85 = 110'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st87_fsm_86 = 110'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st88_fsm_87 = 110'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st89_fsm_88 = 110'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st90_fsm_89 = 110'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st91_fsm_90 = 110'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st92_fsm_91 = 110'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st93_fsm_92 = 110'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st94_fsm_93 = 110'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st95_fsm_94 = 110'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st96_fsm_95 = 110'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st97_fsm_96 = 110'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st98_fsm_97 = 110'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st99_fsm_98 = 110'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st100_fsm_99 = 110'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st101_fsm_100 = 110'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st102_fsm_101 = 110'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st103_fsm_102 = 110'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st104_fsm_103 = 110'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st105_fsm_104 = 110'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st106_fsm_105 = 110'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st107_fsm_106 = 110'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st108_fsm_107 = 110'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st109_fsm_108 = 110'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st110_fsm_109 = 110'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_41 = 32'b1000001;
parameter    ap_const_lv32_42 = 32'b1000010;
parameter    ap_const_lv32_66 = 32'b1100110;
parameter    ap_const_lv32_68 = 32'b1101000;
parameter    ap_const_lv32_6D = 32'b1101101;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv2_3 = 2'b11;
parameter    ap_const_lv2_2 = 2'b10;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv32_65 = 32'b1100101;
parameter    ap_const_lv8_30 = 8'b110000;
parameter    ap_const_lv32_67 = 32'b1100111;
parameter    ap_const_lv32_41200000 = 32'b1000001001000000000000000000000;
parameter    ap_const_lv65_19999999A = 65'b110011001100110011001100110011010;
parameter    ap_const_lv65_0 = 65'b00000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv6_30 = 6'b110000;
parameter    ap_const_lv32_FFFFFFFF = 32'b11111111111111111111111111111111;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv9_1D0 = 9'b111010000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv11_5F0 = 11'b10111110000;
parameter    ap_const_lv4_A = 4'b1010;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv3_5 = 3'b101;
parameter    ap_const_lv3_7 = 3'b111;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv17_9 = 17'b1001;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv29_0 = 29'b00000000000000000000000000000;
parameter    ap_const_lv32_FFFFFFFE = 32'b11111111111111111111111111111110;
parameter    ap_const_lv31_1 = 31'b1;
parameter    ap_const_lv32_43 = 32'b1000011;
parameter    ap_const_lv32_44 = 32'b1000100;
parameter    ap_const_lv32_45 = 32'b1000101;
parameter    ap_const_lv32_46 = 32'b1000110;
parameter    ap_const_lv32_47 = 32'b1000111;
parameter    ap_const_lv32_48 = 32'b1001000;
parameter    ap_const_lv32_49 = 32'b1001001;
parameter    ap_const_lv32_4A = 32'b1001010;
parameter    ap_const_lv32_4B = 32'b1001011;
parameter    ap_const_lv32_4C = 32'b1001100;
parameter    ap_const_lv32_4D = 32'b1001101;
parameter    ap_const_lv32_4E = 32'b1001110;
parameter    ap_const_lv32_4F = 32'b1001111;
parameter    ap_const_lv32_50 = 32'b1010000;
parameter    ap_const_lv32_51 = 32'b1010001;
parameter    ap_const_lv32_52 = 32'b1010010;
parameter    ap_const_lv32_53 = 32'b1010011;
parameter    ap_const_lv32_54 = 32'b1010100;
parameter    ap_const_lv32_55 = 32'b1010101;
parameter    ap_const_lv32_56 = 32'b1010110;
parameter    ap_const_lv32_57 = 32'b1010111;
parameter    ap_const_lv32_58 = 32'b1011000;
parameter    ap_const_lv32_59 = 32'b1011001;
parameter    ap_const_lv32_5A = 32'b1011010;
parameter    ap_const_lv32_5B = 32'b1011011;
parameter    ap_const_lv32_5C = 32'b1011100;
parameter    ap_const_lv32_5D = 32'b1011101;
parameter    ap_const_lv32_5E = 32'b1011110;
parameter    ap_const_lv32_5F = 32'b1011111;
parameter    ap_const_lv32_60 = 32'b1100000;
parameter    ap_const_lv32_61 = 32'b1100001;
parameter    ap_const_lv32_62 = 32'b1100010;
parameter    ap_const_lv32_63 = 32'b1100011;
parameter    ap_const_lv32_64 = 32'b1100100;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] num_i;
output  [31:0] num_o;
output   num_o_ap_vld;
output  [31:0] ans;
output   ans_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[31:0] num_o;
reg num_o_ap_vld;
reg ans_ap_vld;

(* fsm_encoding = "none" *) reg   [109:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_125;
reg   [31:0] n_reg_1569;
wire   [31:0] len_fu_480_p2;
reg   [31:0] len_reg_1578;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_149;
wire   [31:0] n_1_fu_552_p3;
wire   [0:0] tmp_fu_474_p2;
wire   [0:0] tmp_32_fu_560_p1;
reg   [0:0] tmp_32_reg_1591;
wire   [31:0] tmp_22_fu_642_p3;
reg   [31:0] tmp_22_reg_1598;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_168;
wire   [0:0] tmp_11_fu_564_p2;
wire   [31:0] len2_1_fu_675_p2;
reg    ap_sig_cseq_ST_st38_fsm_37;
reg    ap_sig_180;
reg    ap_sig_cseq_ST_st40_fsm_39;
reg    ap_sig_189;
wire   [7:0] h_q1;
reg   [7:0] h_load_reg_1613;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_198;
wire   [8:0] temp_1_fu_712_p2;
reg   [8:0] temp_1_reg_1624;
wire  signed [11:0] temp_1_cast_fu_718_p1;
reg  signed [11:0] temp_1_cast_reg_1629;
wire   [11:0] temp_fu_764_p2;
reg   [11:0] temp_reg_1635;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_217;
wire   [3:0] i_fu_795_p2;
reg    ap_sig_cseq_ST_st43_fsm_42;
reg    ap_sig_226;
wire   [0:0] tmp_24_fu_774_p2;
wire   [0:0] tmp_28_fu_790_p2;
wire   [3:0] a_1_fu_801_p2;
wire   [2:0] i_3_fu_867_p2;
reg    ap_sig_cseq_ST_st44_fsm_43;
reg    ap_sig_253;
wire   [0:0] tmp_23_fu_846_p2;
wire   [0:0] tmp_26_fu_862_p2;
wire   [3:0] a_5_cast_fu_879_p1;
wire   [4:0] divisor_fu_887_p3;
reg   [4:0] divisor_reg_1712;
reg    ap_sig_cseq_ST_st45_fsm_44;
reg    ap_sig_274;
wire   [16:0] divisor_cast1_fu_895_p1;
reg   [16:0] divisor_cast1_reg_1717;
wire   [15:0] temp_2_fu_945_p2;
reg   [15:0] temp_2_reg_1723;
wire   [31:0] size_of_a_fu_1013_p3;
reg   [31:0] size_of_a_reg_1734;
reg    ap_sig_cseq_ST_st65_fsm_64;
reg    ap_sig_289;
wire   [31:0] divisor_cast_fu_1021_p1;
reg   [31:0] divisor_cast_reg_1739;
wire   [31:0] tmp_37_fu_1140_p2;
reg   [31:0] tmp_37_reg_1746;
wire   [30:0] tmp_50_fu_1146_p1;
reg   [30:0] tmp_50_reg_1751;
reg   [31:0] k_1_load_reg_1756;
reg    ap_sig_cseq_ST_st66_fsm_65;
reg    ap_sig_304;
reg   [31:0] a_4_load_1_reg_1764;
wire   [0:0] tmp_38_fu_1163_p2;
reg   [31:0] t_load_2_reg_1774;
wire   [31:0] t_2_fu_1168_p2;
reg   [31:0] t_2_reg_1780;
reg   [4:0] remy_addr_2_reg_1785;
wire   [31:0] k_4_fu_1179_p2;
reg   [31:0] k_4_reg_1790;
wire   [31:0] tmp_39_fu_463_p1;
wire   [31:0] tmp_40_fu_1190_p2;
reg   [31:0] tmp_40_reg_1805;
wire   [31:0] temp2_1_fu_1233_p2;
reg   [31:0] temp2_1_reg_1810;
reg    ap_sig_cseq_ST_st67_fsm_66;
reg    ap_sig_334;
wire    grp_Square_root_dup_fu_452_ap_done;
wire   [0:0] tmp_77_fu_1239_p3;
reg   [0:0] tmp_77_reg_1816;
wire   [31:0] a_7_fu_1262_p2;
reg   [31:0] a_7_reg_1820;
reg   [0:0] tmp_81_reg_1826;
reg   [4:0] remy_addr_4_reg_1835;
reg    ap_sig_cseq_ST_st103_fsm_102;
reg    ap_sig_356;
wire   [0:0] tmp_47_fu_1489_p2;
wire   [30:0] i_4_fu_1552_p2;
reg   [30:0] i_4_reg_1843;
reg    ap_sig_cseq_ST_st105_fsm_104;
reg    ap_sig_368;
wire   [31:0] grp_fu_457_p2;
reg    ap_sig_cseq_ST_st110_fsm_109;
reg    ap_sig_377;
reg   [4:0] remy_address0;
reg    remy_ce0;
reg    remy_we0;
reg   [31:0] remy_d0;
wire   [31:0] remy_q0;
reg   [6:0] h_address0;
reg    h_ce0;
reg    h_we0;
reg   [7:0] h_d0;
wire   [7:0] h_q0;
reg   [6:0] h_address1;
reg    h_ce1;
reg    h_we1;
wire    grp_Square_root_dup_fu_452_ap_start;
wire    grp_Square_root_dup_fu_452_ap_idle;
wire    grp_Square_root_dup_fu_452_ap_ready;
wire   [31:0] grp_Square_root_dup_fu_452_ap_return;
reg   [31:0] n1_reg_289;
reg   [31:0] len2_reg_298;
reg   [31:0] tmp_s_reg_310;
reg   [31:0] len1_reg_320;
reg   [3:0] a_reg_331;
reg   [3:0] a_2_reg_343;
reg   [1:0] k_phi_fu_360_p8;
reg   [1:0] k_reg_356;
reg   [2:0] i_1_reg_374;
reg   [3:0] a_3_reg_385;
reg   [11:0] temp2_reg_402;
reg   [31:0] size_of_a_0_in_reg_415;
reg   [31:0] ans_local_reg_430;
reg   [30:0] i_2_reg_441;
reg    ap_reg_grp_Square_root_dup_fu_452_ap_start;
wire  signed [63:0] tmp_12_fu_651_p1;
wire  signed [63:0] tmp_14_fu_656_p1;
wire  signed [63:0] tmp_21_fu_681_p1;
wire  signed [63:0] tmp_16_fu_692_p1;
reg    ap_sig_cseq_ST_st39_fsm_38;
reg    ap_sig_464;
wire  signed [63:0] tmp_18_fu_703_p1;
wire   [63:0] tmp_31_fu_817_p1;
wire  signed [63:0] tmp_41_fu_1174_p1;
wire  signed [63:0] tmp_42_fu_1185_p1;
wire  signed [63:0] tmp_54_fu_1334_p1;
reg    ap_sig_cseq_ST_st102_fsm_101;
reg    ap_sig_482;
wire  signed [63:0] tmp_57_fu_1501_p1;
reg   [31:0] a_4_fu_138;
wire  signed [31:0] a_6_cast_fu_1107_p1;
wire   [31:0] a_8_fu_1305_p2;
wire   [31:0] vr2_fu_1478_p3;
reg   [31:0] remainder_4_fu_142;
wire  signed [31:0] remainder_1_cast_fu_1135_p1;
wire   [31:0] remainder_2_fu_1328_p2;
wire   [31:0] remainder_3_fu_1522_p2;
reg   [31:0] k_1_fu_146;
wire   [31:0] k_2_cast_fu_828_p1;
wire   [31:0] k_3_fu_1252_p2;
reg   [31:0] t_fu_150;
wire   [31:0] t_1_fu_1338_p2;
wire   [0:0] tmp_46_fu_1547_p2;
wire   [7:0] tmp_23_cast_fu_670_p1;
wire  signed [31:0] remainder_cast_fu_899_p1;
reg    ap_sig_cseq_ST_st104_fsm_103;
reg    ap_sig_539;
wire   [31:0] tmp_58_fu_1537_p2;
wire  signed [31:0] mul_fu_490_p0;
wire   [64:0] mul_fu_490_p2;
wire   [64:0] neg_mul_fu_496_p2;
wire   [28:0] tmp_44_fu_510_p4;
wire   [28:0] tmp_49_fu_524_p4;
wire   [0:0] tmp_36_fu_502_p3;
wire  signed [31:0] tmp_34_fu_520_p1;
wire  signed [31:0] tmp_35_fu_534_p1;
wire   [31:0] tmp_45_fu_538_p3;
wire   [31:0] neg_ti_fu_546_p2;
wire   [4:0] grp_fu_570_p1;
wire  signed [31:0] mul6_fu_580_p1;
wire   [64:0] mul6_fu_580_p2;
wire   [64:0] neg_mul7_fu_586_p2;
wire   [28:0] tmp_66_fu_600_p4;
wire   [28:0] tmp_67_fu_614_p4;
wire   [0:0] tmp_65_fu_592_p3;
wire  signed [31:0] tmp_52_fu_610_p1;
wire  signed [31:0] tmp_59_fu_624_p1;
wire   [31:0] tmp_60_fu_628_p3;
wire   [31:0] neg_ti1_fu_636_p2;
wire   [5:0] grp_fu_570_p2;
wire   [5:0] tmp_64_fu_660_p1;
wire   [5:0] tmp_20_fu_664_p2;
wire   [31:0] tmp_15_fu_686_p2;
wire   [31:0] tmp_17_fu_697_p2;
wire  signed [8:0] tmp_30_cast_fu_708_p1;
wire   [10:0] p_shl_fu_722_p3;
wire   [8:0] p_shl6_fu_733_p3;
wire  signed [11:0] p_shl_cast_fu_729_p1;
wire  signed [11:0] p_shl6_cast_fu_740_p1;
wire  signed [10:0] tmp_28_cast_fu_744_p1;
wire   [10:0] tmp3_fu_754_p2;
wire   [11:0] tmp2_fu_748_p2;
wire  signed [11:0] tmp3_cast_fu_760_p1;
wire   [3:0] tmp_27_fu_780_p0;
wire   [7:0] a_2_cast17_cast_fu_770_p1;
wire   [3:0] tmp_27_fu_780_p1;
wire   [7:0] tmp_27_fu_780_p2;
wire   [11:0] tmp_33_cast_fu_786_p1;
wire   [1:0] tmp_30_fu_811_p2;
wire   [2:0] k_cast_fu_807_p1;
wire   [2:0] k_2_fu_822_p2;
wire   [2:0] tmp_25_fu_852_p0;
wire   [5:0] i_1_cast16_cast_fu_842_p1;
wire   [2:0] tmp_25_fu_852_p1;
wire   [5:0] tmp_25_fu_852_p2;
wire   [8:0] tmp_35_cast_fu_858_p1;
wire   [2:0] a_5_fu_873_p2;
wire   [11:0] grp_fu_1558_p3;
wire   [14:0] p_shl1_fu_903_p3;
wire   [12:0] p_shl2_fu_914_p3;
wire  signed [15:0] p_shl2_cast_fu_921_p1;
wire  signed [15:0] p_shl1_cast_fu_910_p1;
wire  signed [8:0] tmp_41_cast_fu_925_p1;
wire   [8:0] tmp6_fu_935_p2;
wire   [15:0] tmp5_fu_929_p2;
wire  signed [15:0] tmp6_cast_fu_941_p1;
wire  signed [16:0] grp_fu_955_p0;
wire   [5:0] grp_fu_955_p1;
wire   [31:0] p_neg_fu_973_p2;
wire   [30:0] p_lshr_fu_979_p4;
wire   [31:0] tmp_61_fu_989_p1;
wire   [30:0] p_lshr_f_fu_999_p4;
wire   [0:0] tmp_68_fu_965_p3;
wire   [31:0] p_neg_t_fu_993_p2;
wire   [31:0] tmp_62_fu_1009_p1;
wire   [7:0] tmp_69_fu_1027_p3;
wire   [5:0] tmp_70_fu_1039_p3;
wire   [21:0] p_shl4_fu_1047_p1;
wire   [21:0] p_shl3_fu_1035_p1;
wire  signed [21:0] x_fu_1057_p1;
wire   [21:0] Ny_fu_1051_p2;
wire   [0:0] slt_fu_1060_p2;
wire   [0:0] rev_fu_1066_p2;
wire   [16:0] grp_fu_955_p2;
wire   [16:0] p_s_fu_1072_p3;
wire   [6:0] p_shl8_fu_1084_p3;
wire   [16:0] p_shl8_cast_fu_1092_p1;
wire   [16:0] tmp7_fu_1096_p2;
wire   [16:0] a_6_fu_1102_p2;
wire   [3:0] tmp_33_fu_1111_p0;
wire  signed [16:0] tmp_33_fu_1111_p1;
wire   [20:0] tmp_33_fu_1111_p2;
wire   [21:0] tmp_63_fu_1117_p3;
wire  signed [22:0] temp_2_cast_cast_fu_1024_p1;
wire  signed [22:0] tmp_36_cast_fu_1125_p1;
wire   [22:0] remainder_1_fu_1129_p2;
wire   [31:0] tmp_75_fu_1195_p2;
wire   [31:0] tmp_76_fu_1201_p2;
wire  signed [8:0] tmp_53_cast_fu_1207_p1;
wire   [8:0] tmp9_fu_1217_p2;
wire  signed [31:0] tmp9_cast_fu_1223_p1;
wire   [31:0] tmp8_fu_1211_p2;
wire   [31:0] new_temp_fu_1227_p2;
wire   [4:0] grp_fu_1247_p1;
wire   [31:0] grp_fu_1247_p2;
wire   [0:0] tmp_48_fu_1275_p2;
wire   [31:0] tmp_85_fu_1289_p2;
wire   [31:0] p_6_fu_1281_p3;
wire   [31:0] tmp10_fu_1299_p2;
wire   [31:0] tmp_86_fu_1294_p2;
wire  signed [30:0] tmp_87_fu_1311_p1;
wire   [3:0] tmp_51_fu_1315_p1;
wire   [30:0] tmp_51_fu_1315_p2;
wire   [31:0] tmp_53_fu_1320_p3;
wire  signed [31:0] mul1_fu_1361_p1;
wire   [64:0] mul1_fu_1361_p2;
wire   [64:0] neg_mul1_fu_1367_p2;
wire   [0:0] tmp_78_fu_1373_p3;
wire   [28:0] tmp_79_fu_1380_p4;
wire   [28:0] tmp_80_fu_1390_p4;
wire   [28:0] p_v_v_fu_1400_p3;
wire   [28:0] neg_ti2_fu_1408_p2;
wire  signed [31:0] mul2_fu_1425_p1;
wire   [64:0] mul2_fu_1425_p2;
wire   [64:0] neg_mul2_fu_1431_p2;
wire   [28:0] tmp_82_fu_1437_p4;
wire   [28:0] tmp_83_fu_1451_p4;
wire  signed [31:0] tmp_72_fu_1447_p1;
wire  signed [31:0] tmp_73_fu_1461_p1;
wire   [31:0] tmp_74_fu_1465_p3;
wire   [31:0] neg_ti3_fu_1472_p2;
wire   [28:0] tmp_71_fu_1414_p3;
wire   [28:0] tmp_84_fu_1485_p1;
wire   [31:0] tmp_56_fu_1495_p2;
wire   [31:0] i_2_cast_fu_1543_p1;
wire   [3:0] grp_fu_1558_p0;
wire   [7:0] a_3_cast15_cast_fu_883_p1;
wire   [3:0] grp_fu_1558_p1;
reg    grp_fu_570_ap_start;
wire    grp_fu_570_ap_done;
reg    grp_fu_955_ap_start;
wire    grp_fu_955_ap_done;
reg    grp_fu_1247_ap_start;
wire    grp_fu_1247_ap_done;
reg    grp_fu_1247_ce;
reg    ap_sig_cseq_ST_st68_fsm_67;
reg    ap_sig_1171;
reg    ap_sig_cseq_ST_st69_fsm_68;
reg    ap_sig_1179;
reg    ap_sig_cseq_ST_st70_fsm_69;
reg    ap_sig_1187;
reg    ap_sig_cseq_ST_st71_fsm_70;
reg    ap_sig_1195;
reg    ap_sig_cseq_ST_st72_fsm_71;
reg    ap_sig_1203;
reg    ap_sig_cseq_ST_st73_fsm_72;
reg    ap_sig_1211;
reg    ap_sig_cseq_ST_st74_fsm_73;
reg    ap_sig_1219;
reg    ap_sig_cseq_ST_st75_fsm_74;
reg    ap_sig_1227;
reg    ap_sig_cseq_ST_st76_fsm_75;
reg    ap_sig_1235;
reg    ap_sig_cseq_ST_st77_fsm_76;
reg    ap_sig_1243;
reg    ap_sig_cseq_ST_st78_fsm_77;
reg    ap_sig_1251;
reg    ap_sig_cseq_ST_st79_fsm_78;
reg    ap_sig_1259;
reg    ap_sig_cseq_ST_st80_fsm_79;
reg    ap_sig_1267;
reg    ap_sig_cseq_ST_st81_fsm_80;
reg    ap_sig_1275;
reg    ap_sig_cseq_ST_st82_fsm_81;
reg    ap_sig_1283;
reg    ap_sig_cseq_ST_st83_fsm_82;
reg    ap_sig_1291;
reg    ap_sig_cseq_ST_st84_fsm_83;
reg    ap_sig_1299;
reg    ap_sig_cseq_ST_st85_fsm_84;
reg    ap_sig_1307;
reg    ap_sig_cseq_ST_st86_fsm_85;
reg    ap_sig_1315;
reg    ap_sig_cseq_ST_st87_fsm_86;
reg    ap_sig_1323;
reg    ap_sig_cseq_ST_st88_fsm_87;
reg    ap_sig_1331;
reg    ap_sig_cseq_ST_st89_fsm_88;
reg    ap_sig_1339;
reg    ap_sig_cseq_ST_st90_fsm_89;
reg    ap_sig_1347;
reg    ap_sig_cseq_ST_st91_fsm_90;
reg    ap_sig_1355;
reg    ap_sig_cseq_ST_st92_fsm_91;
reg    ap_sig_1363;
reg    ap_sig_cseq_ST_st93_fsm_92;
reg    ap_sig_1371;
reg    ap_sig_cseq_ST_st94_fsm_93;
reg    ap_sig_1379;
reg    ap_sig_cseq_ST_st95_fsm_94;
reg    ap_sig_1387;
reg    ap_sig_cseq_ST_st96_fsm_95;
reg    ap_sig_1395;
reg    ap_sig_cseq_ST_st97_fsm_96;
reg    ap_sig_1403;
reg    ap_sig_cseq_ST_st98_fsm_97;
reg    ap_sig_1411;
reg    ap_sig_cseq_ST_st99_fsm_98;
reg    ap_sig_1419;
reg    ap_sig_cseq_ST_st100_fsm_99;
reg    ap_sig_1427;
reg    ap_sig_cseq_ST_st101_fsm_100;
reg    ap_sig_1435;
reg   [109:0] ap_NS_fsm;
wire   [16:0] grp_fu_955_p10;
wire   [20:0] tmp_33_fu_1111_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 110'b1;
#0 ap_reg_grp_Square_root_dup_fu_452_ap_start = 1'b0;
end

Square_root_remy #(
    .DataWidth( 32 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
remy_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(remy_address0),
    .ce0(remy_ce0),
    .we0(remy_we0),
    .d0(remy_d0),
    .q0(remy_q0)
);

Square_root_h #(
    .DataWidth( 8 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
h_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(h_address0),
    .ce0(h_ce0),
    .we0(h_we0),
    .d0(h_d0),
    .q0(h_q0),
    .address1(h_address1),
    .ce1(h_ce1),
    .we1(h_we1),
    .d1(ap_const_lv8_30),
    .q1(h_q1)
);

Square_root_dup grp_Square_root_dup_fu_452(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Square_root_dup_fu_452_ap_start),
    .ap_done(grp_Square_root_dup_fu_452_ap_done),
    .ap_idle(grp_Square_root_dup_fu_452_ap_idle),
    .ap_ready(grp_Square_root_dup_fu_452_ap_ready),
    .x(a_4_load_1_reg_1764),
    .ap_return(grp_Square_root_dup_fu_452_ap_return)
);

Square_root_fdiv_32ns_32ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Square_root_fdiv_32ns_32ns_32_6_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ans_local_reg_430),
    .din1(ap_const_lv32_41200000),
    .ce(1'b1),
    .dout(grp_fu_457_p2)
);

Square_root_sitofp_32ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Square_root_sitofp_32ns_32_1_U6(
    .din0(a_4_fu_138),
    .dout(tmp_39_fu_463_p1)
);

Square_root_srem_32ns_5ns_6_36_seq #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 6 ))
Square_root_srem_32ns_5ns_6_36_seq_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_570_ap_start),
    .done(grp_fu_570_ap_done),
    .din0(tmp_s_reg_310),
    .din1(grp_fu_570_p1),
    .ce(1'b1),
    .dout(grp_fu_570_p2)
);

Square_root_sdiv_17s_6ns_17_21_seq #(
    .ID( 1 ),
    .NUM_STAGE( 21 ),
    .din0_WIDTH( 17 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 17 ))
Square_root_sdiv_17s_6ns_17_21_seq_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_955_ap_start),
    .done(grp_fu_955_ap_done),
    .din0(grp_fu_955_p0),
    .din1(grp_fu_955_p1),
    .ce(1'b1),
    .dout(grp_fu_955_p2)
);

Square_root_udiv_32ns_5ns_32_36_seq #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
Square_root_udiv_32ns_5ns_32_36_seq_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1247_ap_start),
    .done(grp_fu_1247_ap_done),
    .din0(temp2_1_fu_1233_p2),
    .din1(grp_fu_1247_p1),
    .ce(grp_fu_1247_ce),
    .dout(grp_fu_1247_p2)
);

Square_root_mac_mulsub_4ns_4ns_12ns_12_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
Square_root_mac_mulsub_4ns_4ns_12ns_12_1_U10(
    .din0(grp_fu_1558_p0),
    .din1(grp_fu_1558_p1),
    .din2(temp2_reg_402),
    .dout(grp_fu_1558_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_Square_root_dup_fu_452_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st66_fsm_65) & (1'b0 == tmp_38_fu_1163_p2))) begin
            ap_reg_grp_Square_root_dup_fu_452_ap_start <= 1'b1;
        end else if ((1'b1 == grp_Square_root_dup_fu_452_ap_ready)) begin
            ap_reg_grp_Square_root_dup_fu_452_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == tmp_32_reg_1591) & (1'b1 == ap_sig_cseq_ST_st43_fsm_42) & ~(1'b0 == tmp_24_fu_774_p2) & (1'b0 == tmp_28_fu_790_p2))) begin
        a_2_reg_343 <= i_fu_795_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        a_2_reg_343 <= ap_const_lv4_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == tmp_32_reg_1591) & (1'b1 == ap_sig_cseq_ST_st43_fsm_42) & (1'b0 == tmp_24_fu_774_p2))) begin
        a_3_reg_385 <= a_reg_331;
    end else if (((1'b1 == ap_sig_cseq_ST_st44_fsm_43) & (1'b0 == tmp_23_fu_846_p2))) begin
        a_3_reg_385 <= ap_const_lv4_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st44_fsm_43) & ~(1'b0 == tmp_23_fu_846_p2) & ~(1'b0 == tmp_26_fu_862_p2))) begin
        a_3_reg_385 <= a_5_cast_fu_879_p1;
    end else if (((1'b0 == tmp_32_reg_1591) & (1'b1 == ap_sig_cseq_ST_st43_fsm_42) & ~(1'b0 == tmp_24_fu_774_p2) & ~(1'b0 == tmp_28_fu_790_p2))) begin
        a_3_reg_385 <= a_1_fu_801_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st103_fsm_102) & ~(1'b0 == tmp_47_fu_1489_p2))) begin
        a_4_fu_138 <= a_7_reg_1820;
    end else if (((1'b1 == ap_sig_cseq_ST_st103_fsm_102) & (1'b0 == tmp_47_fu_1489_p2))) begin
        a_4_fu_138 <= vr2_fu_1478_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st102_fsm_101) & (1'b0 == tmp_77_reg_1816))) begin
        a_4_fu_138 <= a_8_fu_1305_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        a_4_fu_138 <= a_6_cast_fu_1107_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == tmp_32_reg_1591) & (1'b1 == ap_sig_cseq_ST_st43_fsm_42) & ~(1'b0 == tmp_24_fu_774_p2) & (1'b0 == tmp_28_fu_790_p2))) begin
        a_reg_331 <= a_2_reg_343;
    end else if ((1'b1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        a_reg_331 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st110_fsm_109)) begin
        ans_local_reg_430 <= grp_fu_457_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st66_fsm_65) & ~(1'b0 == tmp_38_fu_1163_p2))) begin
        ans_local_reg_430 <= tmp_39_fu_463_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st44_fsm_43) & ~(1'b0 == tmp_23_fu_846_p2) & (1'b0 == tmp_26_fu_862_p2))) begin
        i_1_reg_374 <= i_3_fu_867_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st41_fsm_40) & ~(1'b0 == tmp_32_reg_1591))) begin
        i_1_reg_374 <= ap_const_lv3_1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st110_fsm_109)) begin
        i_2_reg_441 <= i_4_reg_1843;
    end else if (((1'b1 == ap_sig_cseq_ST_st66_fsm_65) & ~(1'b0 == tmp_38_fu_1163_p2))) begin
        i_2_reg_441 <= ap_const_lv31_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st103_fsm_102) & (1'b0 == tmp_47_fu_1489_p2))) begin
        k_1_fu_146 <= k_4_reg_1790;
    end else if (((1'b1 == ap_sig_cseq_ST_st67_fsm_66) & ~(1'b0 == grp_Square_root_dup_fu_452_ap_done) & (1'b0 == tmp_77_fu_1239_p3))) begin
        k_1_fu_146 <= k_3_fu_1252_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st43_fsm_42) & (~(1'b0 == tmp_32_reg_1591) | (1'b0 == tmp_24_fu_774_p2) | ~(1'b0 == tmp_28_fu_790_p2)))) begin
        k_1_fu_146 <= k_2_cast_fu_828_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_sig_cseq_ST_st44_fsm_43) & ~(1'b0 == tmp_23_fu_846_p2) & ~(1'b0 == tmp_26_fu_862_p2)) | ((1'b1 == ap_sig_cseq_ST_st44_fsm_43) & (1'b0 == tmp_23_fu_846_p2)))) begin
                k_reg_356[0] <= 1'b0;
    end else if ((((1'b0 == tmp_32_reg_1591) & (1'b1 == ap_sig_cseq_ST_st43_fsm_42) & ~(1'b0 == tmp_24_fu_774_p2) & ~(1'b0 == tmp_28_fu_790_p2)) | ((1'b0 == tmp_32_reg_1591) & (1'b1 == ap_sig_cseq_ST_st43_fsm_42) & (1'b0 == tmp_24_fu_774_p2)))) begin
                k_reg_356[0] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_fu_474_p2 == 1'b0))) begin
        len1_reg_320 <= len2_reg_298;
    end else if ((1'b1 == ap_sig_cseq_ST_st38_fsm_37)) begin
        len1_reg_320 <= len2_1_fu_675_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (tmp_fu_474_p2 == 1'b0))) begin
        len2_reg_298 <= len_fu_480_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        len2_reg_298 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (tmp_fu_474_p2 == 1'b0))) begin
        n1_reg_289 <= n_1_fu_552_p3;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        n1_reg_289 <= num_i;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st103_fsm_102) & ~(1'b0 == tmp_47_fu_1489_p2))) begin
        remainder_4_fu_142 <= remainder_3_fu_1522_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st102_fsm_101) & (1'b0 == tmp_77_reg_1816))) begin
        remainder_4_fu_142 <= remainder_2_fu_1328_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        remainder_4_fu_142 <= remainder_1_cast_fu_1135_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_sig_cseq_ST_st44_fsm_43) & ~(1'b0 == tmp_23_fu_846_p2) & ~(1'b0 == tmp_26_fu_862_p2)) | ((1'b1 == ap_sig_cseq_ST_st44_fsm_43) & (1'b0 == tmp_23_fu_846_p2)))) begin
        size_of_a_0_in_reg_415 <= len_reg_1578;
    end else if ((((1'b0 == tmp_32_reg_1591) & (1'b1 == ap_sig_cseq_ST_st43_fsm_42) & ~(1'b0 == tmp_24_fu_774_p2) & ~(1'b0 == tmp_28_fu_790_p2)) | ((1'b0 == tmp_32_reg_1591) & (1'b1 == ap_sig_cseq_ST_st43_fsm_42) & (1'b0 == tmp_24_fu_774_p2)))) begin
        size_of_a_0_in_reg_415 <= len2_reg_298;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st103_fsm_102) & (1'b0 == tmp_47_fu_1489_p2))) begin
        t_fu_150 <= t_2_reg_1780;
    end else if (((1'b1 == ap_sig_cseq_ST_st102_fsm_101) & (1'b0 == tmp_77_reg_1816))) begin
        t_fu_150 <= t_1_fu_1338_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st43_fsm_42) & (~(1'b0 == tmp_32_reg_1591) | (1'b0 == tmp_24_fu_774_p2) | ~(1'b0 == tmp_28_fu_790_p2)))) begin
        t_fu_150 <= ap_const_lv32_2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_sig_cseq_ST_st44_fsm_43) & ~(1'b0 == tmp_23_fu_846_p2) & ~(1'b0 == tmp_26_fu_862_p2)) | ((1'b1 == ap_sig_cseq_ST_st44_fsm_43) & (1'b0 == tmp_23_fu_846_p2)))) begin
        temp2_reg_402 <= temp_1_cast_reg_1629;
    end else if ((((1'b0 == tmp_32_reg_1591) & (1'b1 == ap_sig_cseq_ST_st43_fsm_42) & ~(1'b0 == tmp_24_fu_774_p2) & ~(1'b0 == tmp_28_fu_790_p2)) | ((1'b0 == tmp_32_reg_1591) & (1'b1 == ap_sig_cseq_ST_st43_fsm_42) & (1'b0 == tmp_24_fu_774_p2)))) begin
        temp2_reg_402 <= temp_reg_1635;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_fu_474_p2 == 1'b0))) begin
        tmp_s_reg_310 <= n_reg_1569;
    end else if ((1'b1 == ap_sig_cseq_ST_st38_fsm_37)) begin
        tmp_s_reg_310 <= tmp_22_reg_1598;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st66_fsm_65) & (1'b0 == tmp_38_fu_1163_p2))) begin
        a_4_load_1_reg_1764 <= a_4_fu_138;
        k_4_reg_1790 <= k_4_fu_1179_p2;
        remy_addr_2_reg_1785 <= tmp_41_fu_1174_p1;
        t_2_reg_1780 <= t_2_fu_1168_p2;
        t_load_2_reg_1774 <= t_fu_150;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st67_fsm_66) & ~(1'b0 == grp_Square_root_dup_fu_452_ap_done) & ~(1'b0 == tmp_77_fu_1239_p3))) begin
        a_7_reg_1820 <= a_7_fu_1262_p2;
        tmp_81_reg_1826 <= a_7_fu_1262_p2[ap_const_lv32_1F];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st45_fsm_44)) begin
        divisor_cast1_reg_1717[4 : 1] <= divisor_cast1_fu_895_p1[4 : 1];
        divisor_reg_1712[4 : 1] <= divisor_fu_887_p3[4 : 1];
        temp_2_reg_1723 <= temp_2_fu_945_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        divisor_cast_reg_1739[4 : 1] <= divisor_cast_fu_1021_p1[4 : 1];
        size_of_a_reg_1734 <= size_of_a_fu_1013_p3;
        tmp_37_reg_1746 <= tmp_37_fu_1140_p2;
        tmp_50_reg_1751[3 : 0] <= tmp_50_fu_1146_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        h_load_reg_1613 <= h_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st105_fsm_104)) begin
        i_4_reg_1843 <= i_4_fu_1552_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st66_fsm_65)) begin
        k_1_load_reg_1756 <= k_1_fu_146;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        len_reg_1578 <= len_fu_480_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        n_reg_1569 <= num_i;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st103_fsm_102) & (1'b0 == tmp_47_fu_1489_p2))) begin
        remy_addr_4_reg_1835 <= tmp_57_fu_1501_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st67_fsm_66) & ~(1'b0 == grp_Square_root_dup_fu_452_ap_done))) begin
        temp2_1_reg_1810 <= temp2_1_fu_1233_p2;
        tmp_77_reg_1816 <= temp2_1_fu_1233_p2[ap_const_lv32_1F];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st41_fsm_40) & ~(1'b0 == tmp_32_reg_1591))) begin
        temp_1_cast_reg_1629 <= temp_1_cast_fu_718_p1;
        temp_1_reg_1624 <= temp_1_fu_712_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        temp_reg_1635 <= temp_fu_764_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == tmp_11_fu_564_p2))) begin
        tmp_22_reg_1598 <= tmp_22_fu_642_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(tmp_fu_474_p2 == 1'b0))) begin
        tmp_32_reg_1591 <= tmp_32_fu_560_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st66_fsm_65) & ~(1'b0 == tmp_38_fu_1163_p2))) begin
        tmp_40_reg_1805 <= tmp_40_fu_1190_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st105_fsm_104) & (1'b0 == tmp_46_fu_1547_p2))) begin
        ans_ap_vld = 1'b1;
    end else begin
        ans_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st105_fsm_104) & (1'b0 == tmp_46_fu_1547_p2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st105_fsm_104) & (1'b0 == tmp_46_fu_1547_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1427) begin
        ap_sig_cseq_ST_st100_fsm_99 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st100_fsm_99 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1435) begin
        ap_sig_cseq_ST_st101_fsm_100 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st101_fsm_100 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_482) begin
        ap_sig_cseq_ST_st102_fsm_101 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st102_fsm_101 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_356) begin
        ap_sig_cseq_ST_st103_fsm_102 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st103_fsm_102 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_539) begin
        ap_sig_cseq_ST_st104_fsm_103 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st104_fsm_103 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_368) begin
        ap_sig_cseq_ST_st105_fsm_104 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st105_fsm_104 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_377) begin
        ap_sig_cseq_ST_st110_fsm_109 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st110_fsm_109 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_125) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_149) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_180) begin
        ap_sig_cseq_ST_st38_fsm_37 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st38_fsm_37 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_464) begin
        ap_sig_cseq_ST_st39_fsm_38 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st39_fsm_38 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_168) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_189) begin
        ap_sig_cseq_ST_st40_fsm_39 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st40_fsm_39 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_198) begin
        ap_sig_cseq_ST_st41_fsm_40 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_217) begin
        ap_sig_cseq_ST_st42_fsm_41 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_226) begin
        ap_sig_cseq_ST_st43_fsm_42 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st43_fsm_42 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_253) begin
        ap_sig_cseq_ST_st44_fsm_43 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st44_fsm_43 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_274) begin
        ap_sig_cseq_ST_st45_fsm_44 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st45_fsm_44 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_289) begin
        ap_sig_cseq_ST_st65_fsm_64 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st65_fsm_64 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_304) begin
        ap_sig_cseq_ST_st66_fsm_65 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st66_fsm_65 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_334) begin
        ap_sig_cseq_ST_st67_fsm_66 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st67_fsm_66 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1171) begin
        ap_sig_cseq_ST_st68_fsm_67 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st68_fsm_67 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1179) begin
        ap_sig_cseq_ST_st69_fsm_68 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st69_fsm_68 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1187) begin
        ap_sig_cseq_ST_st70_fsm_69 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st70_fsm_69 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1195) begin
        ap_sig_cseq_ST_st71_fsm_70 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st71_fsm_70 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1203) begin
        ap_sig_cseq_ST_st72_fsm_71 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st72_fsm_71 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1211) begin
        ap_sig_cseq_ST_st73_fsm_72 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st73_fsm_72 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1219) begin
        ap_sig_cseq_ST_st74_fsm_73 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st74_fsm_73 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1227) begin
        ap_sig_cseq_ST_st75_fsm_74 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st75_fsm_74 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1235) begin
        ap_sig_cseq_ST_st76_fsm_75 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st76_fsm_75 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1243) begin
        ap_sig_cseq_ST_st77_fsm_76 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st77_fsm_76 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1251) begin
        ap_sig_cseq_ST_st78_fsm_77 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st78_fsm_77 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1259) begin
        ap_sig_cseq_ST_st79_fsm_78 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st79_fsm_78 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1267) begin
        ap_sig_cseq_ST_st80_fsm_79 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st80_fsm_79 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1275) begin
        ap_sig_cseq_ST_st81_fsm_80 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st81_fsm_80 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1283) begin
        ap_sig_cseq_ST_st82_fsm_81 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st82_fsm_81 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1291) begin
        ap_sig_cseq_ST_st83_fsm_82 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st83_fsm_82 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1299) begin
        ap_sig_cseq_ST_st84_fsm_83 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st84_fsm_83 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1307) begin
        ap_sig_cseq_ST_st85_fsm_84 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st85_fsm_84 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1315) begin
        ap_sig_cseq_ST_st86_fsm_85 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st86_fsm_85 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1323) begin
        ap_sig_cseq_ST_st87_fsm_86 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st87_fsm_86 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1331) begin
        ap_sig_cseq_ST_st88_fsm_87 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st88_fsm_87 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1339) begin
        ap_sig_cseq_ST_st89_fsm_88 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st89_fsm_88 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1347) begin
        ap_sig_cseq_ST_st90_fsm_89 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st90_fsm_89 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1355) begin
        ap_sig_cseq_ST_st91_fsm_90 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st91_fsm_90 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1363) begin
        ap_sig_cseq_ST_st92_fsm_91 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st92_fsm_91 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1371) begin
        ap_sig_cseq_ST_st93_fsm_92 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st93_fsm_92 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1379) begin
        ap_sig_cseq_ST_st94_fsm_93 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st94_fsm_93 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1387) begin
        ap_sig_cseq_ST_st95_fsm_94 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st95_fsm_94 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1395) begin
        ap_sig_cseq_ST_st96_fsm_95 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st96_fsm_95 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1403) begin
        ap_sig_cseq_ST_st97_fsm_96 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st97_fsm_96 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1411) begin
        ap_sig_cseq_ST_st98_fsm_97 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st98_fsm_97 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1419) begin
        ap_sig_cseq_ST_st99_fsm_98 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st99_fsm_98 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st67_fsm_66) & ~(1'b0 == grp_Square_root_dup_fu_452_ap_done) & (1'b0 == tmp_77_fu_1239_p3))) begin
        grp_fu_1247_ap_start = 1'b1;
    end else begin
        grp_fu_1247_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st67_fsm_66) | (1'b1 == ap_sig_cseq_ST_st102_fsm_101) | (1'b1 == ap_sig_cseq_ST_st68_fsm_67) | (1'b1 == ap_sig_cseq_ST_st69_fsm_68) | (1'b1 == ap_sig_cseq_ST_st70_fsm_69) | (1'b1 == ap_sig_cseq_ST_st71_fsm_70) | (1'b1 == ap_sig_cseq_ST_st72_fsm_71) | (1'b1 == ap_sig_cseq_ST_st73_fsm_72) | (1'b1 == ap_sig_cseq_ST_st74_fsm_73) | (1'b1 == ap_sig_cseq_ST_st75_fsm_74) | (1'b1 == ap_sig_cseq_ST_st76_fsm_75) | (1'b1 == ap_sig_cseq_ST_st77_fsm_76) | (1'b1 == ap_sig_cseq_ST_st78_fsm_77) | (1'b1 == ap_sig_cseq_ST_st79_fsm_78) | (1'b1 == ap_sig_cseq_ST_st80_fsm_79) | (1'b1 == ap_sig_cseq_ST_st81_fsm_80) | (1'b1 == ap_sig_cseq_ST_st82_fsm_81) | (1'b1 == ap_sig_cseq_ST_st83_fsm_82) | (1'b1 == ap_sig_cseq_ST_st84_fsm_83) | (1'b1 == ap_sig_cseq_ST_st85_fsm_84) | (1'b1 == ap_sig_cseq_ST_st86_fsm_85) | (1'b1 == ap_sig_cseq_ST_st87_fsm_86) | (1'b1 == ap_sig_cseq_ST_st88_fsm_87) | (1'b1 == ap_sig_cseq_ST_st89_fsm_88) | (1'b1 == ap_sig_cseq_ST_st90_fsm_89) | (1'b1 == ap_sig_cseq_ST_st91_fsm_90) | (1'b1 == ap_sig_cseq_ST_st92_fsm_91) | (1'b1 == ap_sig_cseq_ST_st93_fsm_92) | (1'b1 == ap_sig_cseq_ST_st94_fsm_93) | (1'b1 == ap_sig_cseq_ST_st95_fsm_94) | (1'b1 == ap_sig_cseq_ST_st96_fsm_95) | (1'b1 == ap_sig_cseq_ST_st97_fsm_96) | (1'b1 == ap_sig_cseq_ST_st98_fsm_97) | (1'b1 == ap_sig_cseq_ST_st99_fsm_98) | (1'b1 == ap_sig_cseq_ST_st100_fsm_99) | (1'b1 == ap_sig_cseq_ST_st101_fsm_100))) begin
        grp_fu_1247_ce = 1'b1;
    end else begin
        grp_fu_1247_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == tmp_11_fu_564_p2))) begin
        grp_fu_570_ap_start = 1'b1;
    end else begin
        grp_fu_570_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st45_fsm_44)) begin
        grp_fu_955_ap_start = 1'b1;
    end else begin
        grp_fu_955_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st39_fsm_38)) begin
        h_address0 = tmp_18_fu_703_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st38_fsm_37)) begin
        h_address0 = tmp_21_fu_681_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        h_address0 = tmp_12_fu_651_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st66_fsm_65)) begin
        h_address0 = tmp_42_fu_1185_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st41_fsm_40)) begin
        h_address0 = ap_const_lv64_1;
    end else begin
        h_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st39_fsm_38)) begin
        h_address1 = tmp_16_fu_692_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        h_address1 = tmp_14_fu_656_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st43_fsm_42)) begin
        h_address1 = tmp_31_fu_817_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st40_fsm_39)) begin
        h_address1 = ap_const_lv64_0;
    end else begin
        h_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st38_fsm_37) | (1'b1 == ap_sig_cseq_ST_st41_fsm_40) | (1'b1 == ap_sig_cseq_ST_st66_fsm_65) | (1'b1 == ap_sig_cseq_ST_st39_fsm_38))) begin
        h_ce0 = 1'b1;
    end else begin
        h_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st40_fsm_39) | (1'b1 == ap_sig_cseq_ST_st43_fsm_42) | (1'b1 == ap_sig_cseq_ST_st39_fsm_38))) begin
        h_ce1 = 1'b1;
    end else begin
        h_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st38_fsm_37)) begin
        h_d0 = tmp_23_cast_fu_670_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st39_fsm_38))) begin
        h_d0 = ap_const_lv8_30;
    end else begin
        h_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st38_fsm_37) | ((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == tmp_11_fu_564_p2)) | (1'b1 == ap_sig_cseq_ST_st39_fsm_38))) begin
        h_we0 = 1'b1;
    end else begin
        h_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == tmp_11_fu_564_p2)) | (1'b1 == ap_sig_cseq_ST_st39_fsm_38))) begin
        h_we1 = 1'b1;
    end else begin
        h_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == tmp_32_reg_1591) & (1'b1 == ap_sig_cseq_ST_st43_fsm_42) & ~(1'b0 == tmp_24_fu_774_p2) & ~(1'b0 == tmp_28_fu_790_p2)) | ((1'b0 == tmp_32_reg_1591) & (1'b1 == ap_sig_cseq_ST_st43_fsm_42) & (1'b0 == tmp_24_fu_774_p2)))) begin
        k_phi_fu_360_p8 = ap_const_lv2_3;
    end else begin
        k_phi_fu_360_p8 = k_reg_356;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == tmp_11_fu_564_p2))) begin
        num_o = tmp_22_fu_642_p3;
    end else begin
        num_o = num_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == tmp_11_fu_564_p2))) begin
        num_o_ap_vld = 1'b1;
    end else begin
        num_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st104_fsm_103)) begin
        remy_address0 = remy_addr_4_reg_1835;
    end else if (((1'b1 == ap_sig_cseq_ST_st103_fsm_102) & ~(1'b0 == tmp_47_fu_1489_p2))) begin
        remy_address0 = remy_addr_2_reg_1785;
    end else if ((1'b1 == ap_sig_cseq_ST_st102_fsm_101)) begin
        remy_address0 = tmp_54_fu_1334_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        remy_address0 = ap_const_lv64_1;
    end else if ((1'b1 == ap_sig_cseq_ST_st45_fsm_44)) begin
        remy_address0 = ap_const_lv64_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st103_fsm_102) & (1'b0 == tmp_47_fu_1489_p2))) begin
        remy_address0 = tmp_57_fu_1501_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st66_fsm_65)) begin
        remy_address0 = tmp_41_fu_1174_p1;
    end else begin
        remy_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st45_fsm_44) | (1'b1 == ap_sig_cseq_ST_st65_fsm_64) | (1'b1 == ap_sig_cseq_ST_st66_fsm_65) | ((1'b1 == ap_sig_cseq_ST_st103_fsm_102) & (1'b0 == tmp_47_fu_1489_p2)) | (1'b1 == ap_sig_cseq_ST_st102_fsm_101) | ((1'b1 == ap_sig_cseq_ST_st103_fsm_102) & ~(1'b0 == tmp_47_fu_1489_p2)) | (1'b1 == ap_sig_cseq_ST_st104_fsm_103))) begin
        remy_ce0 = 1'b1;
    end else begin
        remy_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st104_fsm_103)) begin
        remy_d0 = tmp_58_fu_1537_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st103_fsm_102) & ~(1'b0 == tmp_47_fu_1489_p2))) begin
        remy_d0 = remainder_3_fu_1522_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st102_fsm_101)) begin
        remy_d0 = remainder_2_fu_1328_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st65_fsm_64)) begin
        remy_d0 = remainder_1_cast_fu_1135_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st45_fsm_44)) begin
        remy_d0 = remainder_cast_fu_899_p1;
    end else begin
        remy_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st45_fsm_44) | (1'b1 == ap_sig_cseq_ST_st65_fsm_64) | ((1'b1 == ap_sig_cseq_ST_st102_fsm_101) & (1'b0 == tmp_77_reg_1816)) | ((1'b1 == ap_sig_cseq_ST_st103_fsm_102) & ~(1'b0 == tmp_47_fu_1489_p2)) | (1'b1 == ap_sig_cseq_ST_st104_fsm_103))) begin
        remy_we0 = 1'b1;
    end else begin
        remy_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(tmp_fu_474_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if (~(1'b0 == tmp_11_fu_564_p2)) begin
                ap_NS_fsm = ap_ST_st39_fsm_38;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st39_fsm_38 : begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : begin
            if (~(1'b0 == tmp_32_reg_1591)) begin
                ap_NS_fsm = ap_ST_st44_fsm_43;
            end else begin
                ap_NS_fsm = ap_ST_st42_fsm_41;
            end
        end
        ap_ST_st42_fsm_41 : begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : begin
            if (((1'b0 == tmp_32_reg_1591) & ~(1'b0 == tmp_24_fu_774_p2) & (1'b0 == tmp_28_fu_790_p2))) begin
                ap_NS_fsm = ap_ST_st43_fsm_42;
            end else begin
                ap_NS_fsm = ap_ST_st45_fsm_44;
            end
        end
        ap_ST_st44_fsm_43 : begin
            if ((~(1'b0 == tmp_23_fu_846_p2) & (1'b0 == tmp_26_fu_862_p2))) begin
                ap_NS_fsm = ap_ST_st44_fsm_43;
            end else begin
                ap_NS_fsm = ap_ST_st43_fsm_42;
            end
        end
        ap_ST_st45_fsm_44 : begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : begin
            if (~(1'b0 == tmp_38_fu_1163_p2)) begin
                ap_NS_fsm = ap_ST_st105_fsm_104;
            end else begin
                ap_NS_fsm = ap_ST_st67_fsm_66;
            end
        end
        ap_ST_st67_fsm_66 : begin
            if ((~(1'b0 == grp_Square_root_dup_fu_452_ap_done) & ~(1'b0 == tmp_77_fu_1239_p3))) begin
                ap_NS_fsm = ap_ST_st103_fsm_102;
            end else if ((~(1'b0 == grp_Square_root_dup_fu_452_ap_done) & (1'b0 == tmp_77_fu_1239_p3))) begin
                ap_NS_fsm = ap_ST_st68_fsm_67;
            end else begin
                ap_NS_fsm = ap_ST_st67_fsm_66;
            end
        end
        ap_ST_st68_fsm_67 : begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : begin
            ap_NS_fsm = ap_ST_st71_fsm_70;
        end
        ap_ST_st71_fsm_70 : begin
            ap_NS_fsm = ap_ST_st72_fsm_71;
        end
        ap_ST_st72_fsm_71 : begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : begin
            ap_NS_fsm = ap_ST_st74_fsm_73;
        end
        ap_ST_st74_fsm_73 : begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : begin
            ap_NS_fsm = ap_ST_st77_fsm_76;
        end
        ap_ST_st77_fsm_76 : begin
            ap_NS_fsm = ap_ST_st78_fsm_77;
        end
        ap_ST_st78_fsm_77 : begin
            ap_NS_fsm = ap_ST_st79_fsm_78;
        end
        ap_ST_st79_fsm_78 : begin
            ap_NS_fsm = ap_ST_st80_fsm_79;
        end
        ap_ST_st80_fsm_79 : begin
            ap_NS_fsm = ap_ST_st81_fsm_80;
        end
        ap_ST_st81_fsm_80 : begin
            ap_NS_fsm = ap_ST_st82_fsm_81;
        end
        ap_ST_st82_fsm_81 : begin
            ap_NS_fsm = ap_ST_st83_fsm_82;
        end
        ap_ST_st83_fsm_82 : begin
            ap_NS_fsm = ap_ST_st84_fsm_83;
        end
        ap_ST_st84_fsm_83 : begin
            ap_NS_fsm = ap_ST_st85_fsm_84;
        end
        ap_ST_st85_fsm_84 : begin
            ap_NS_fsm = ap_ST_st86_fsm_85;
        end
        ap_ST_st86_fsm_85 : begin
            ap_NS_fsm = ap_ST_st87_fsm_86;
        end
        ap_ST_st87_fsm_86 : begin
            ap_NS_fsm = ap_ST_st88_fsm_87;
        end
        ap_ST_st88_fsm_87 : begin
            ap_NS_fsm = ap_ST_st89_fsm_88;
        end
        ap_ST_st89_fsm_88 : begin
            ap_NS_fsm = ap_ST_st90_fsm_89;
        end
        ap_ST_st90_fsm_89 : begin
            ap_NS_fsm = ap_ST_st91_fsm_90;
        end
        ap_ST_st91_fsm_90 : begin
            ap_NS_fsm = ap_ST_st92_fsm_91;
        end
        ap_ST_st92_fsm_91 : begin
            ap_NS_fsm = ap_ST_st93_fsm_92;
        end
        ap_ST_st93_fsm_92 : begin
            ap_NS_fsm = ap_ST_st94_fsm_93;
        end
        ap_ST_st94_fsm_93 : begin
            ap_NS_fsm = ap_ST_st95_fsm_94;
        end
        ap_ST_st95_fsm_94 : begin
            ap_NS_fsm = ap_ST_st96_fsm_95;
        end
        ap_ST_st96_fsm_95 : begin
            ap_NS_fsm = ap_ST_st97_fsm_96;
        end
        ap_ST_st97_fsm_96 : begin
            ap_NS_fsm = ap_ST_st98_fsm_97;
        end
        ap_ST_st98_fsm_97 : begin
            ap_NS_fsm = ap_ST_st99_fsm_98;
        end
        ap_ST_st99_fsm_98 : begin
            ap_NS_fsm = ap_ST_st100_fsm_99;
        end
        ap_ST_st100_fsm_99 : begin
            ap_NS_fsm = ap_ST_st101_fsm_100;
        end
        ap_ST_st101_fsm_100 : begin
            ap_NS_fsm = ap_ST_st102_fsm_101;
        end
        ap_ST_st102_fsm_101 : begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st103_fsm_102 : begin
            if (~(1'b0 == tmp_47_fu_1489_p2)) begin
                ap_NS_fsm = ap_ST_st102_fsm_101;
            end else begin
                ap_NS_fsm = ap_ST_st104_fsm_103;
            end
        end
        ap_ST_st104_fsm_103 : begin
            ap_NS_fsm = ap_ST_st102_fsm_101;
        end
        ap_ST_st105_fsm_104 : begin
            if ((1'b0 == tmp_46_fu_1547_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st106_fsm_105;
            end
        end
        ap_ST_st106_fsm_105 : begin
            ap_NS_fsm = ap_ST_st107_fsm_106;
        end
        ap_ST_st107_fsm_106 : begin
            ap_NS_fsm = ap_ST_st108_fsm_107;
        end
        ap_ST_st108_fsm_107 : begin
            ap_NS_fsm = ap_ST_st109_fsm_108;
        end
        ap_ST_st109_fsm_108 : begin
            ap_NS_fsm = ap_ST_st110_fsm_109;
        end
        ap_ST_st110_fsm_109 : begin
            ap_NS_fsm = ap_ST_st105_fsm_104;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Ny_fu_1051_p2 = (p_shl4_fu_1047_p1 + p_shl3_fu_1035_p1);

assign a_1_fu_801_p2 = ($signed(a_2_reg_343) + $signed(ap_const_lv4_F));

assign a_2_cast17_cast_fu_770_p1 = a_2_reg_343;

assign a_3_cast15_cast_fu_883_p1 = a_3_reg_385;

assign a_5_cast_fu_879_p1 = a_5_fu_873_p2;

assign a_5_fu_873_p2 = ($signed(i_1_reg_374) + $signed(ap_const_lv3_7));

assign a_6_cast_fu_1107_p1 = $signed(a_6_fu_1102_p2);

assign a_6_fu_1102_p2 = (divisor_cast1_reg_1717 + tmp7_fu_1096_p2);

assign a_7_fu_1262_p2 = ($signed(ap_const_lv32_FFFFFFFF) + $signed(a_4_load_1_reg_1764));

assign a_8_fu_1305_p2 = (tmp10_fu_1299_p2 + tmp_86_fu_1294_p2);

assign ans = ans_local_reg_430;

always @ (*) begin
    ap_sig_1171 = (1'b1 == ap_CS_fsm[ap_const_lv32_43]);
end

always @ (*) begin
    ap_sig_1179 = (1'b1 == ap_CS_fsm[ap_const_lv32_44]);
end

always @ (*) begin
    ap_sig_1187 = (1'b1 == ap_CS_fsm[ap_const_lv32_45]);
end

always @ (*) begin
    ap_sig_1195 = (1'b1 == ap_CS_fsm[ap_const_lv32_46]);
end

always @ (*) begin
    ap_sig_1203 = (1'b1 == ap_CS_fsm[ap_const_lv32_47]);
end

always @ (*) begin
    ap_sig_1211 = (1'b1 == ap_CS_fsm[ap_const_lv32_48]);
end

always @ (*) begin
    ap_sig_1219 = (1'b1 == ap_CS_fsm[ap_const_lv32_49]);
end

always @ (*) begin
    ap_sig_1227 = (1'b1 == ap_CS_fsm[ap_const_lv32_4A]);
end

always @ (*) begin
    ap_sig_1235 = (1'b1 == ap_CS_fsm[ap_const_lv32_4B]);
end

always @ (*) begin
    ap_sig_1243 = (1'b1 == ap_CS_fsm[ap_const_lv32_4C]);
end

always @ (*) begin
    ap_sig_125 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_1251 = (1'b1 == ap_CS_fsm[ap_const_lv32_4D]);
end

always @ (*) begin
    ap_sig_1259 = (1'b1 == ap_CS_fsm[ap_const_lv32_4E]);
end

always @ (*) begin
    ap_sig_1267 = (1'b1 == ap_CS_fsm[ap_const_lv32_4F]);
end

always @ (*) begin
    ap_sig_1275 = (1'b1 == ap_CS_fsm[ap_const_lv32_50]);
end

always @ (*) begin
    ap_sig_1283 = (1'b1 == ap_CS_fsm[ap_const_lv32_51]);
end

always @ (*) begin
    ap_sig_1291 = (1'b1 == ap_CS_fsm[ap_const_lv32_52]);
end

always @ (*) begin
    ap_sig_1299 = (1'b1 == ap_CS_fsm[ap_const_lv32_53]);
end

always @ (*) begin
    ap_sig_1307 = (1'b1 == ap_CS_fsm[ap_const_lv32_54]);
end

always @ (*) begin
    ap_sig_1315 = (1'b1 == ap_CS_fsm[ap_const_lv32_55]);
end

always @ (*) begin
    ap_sig_1323 = (1'b1 == ap_CS_fsm[ap_const_lv32_56]);
end

always @ (*) begin
    ap_sig_1331 = (1'b1 == ap_CS_fsm[ap_const_lv32_57]);
end

always @ (*) begin
    ap_sig_1339 = (1'b1 == ap_CS_fsm[ap_const_lv32_58]);
end

always @ (*) begin
    ap_sig_1347 = (1'b1 == ap_CS_fsm[ap_const_lv32_59]);
end

always @ (*) begin
    ap_sig_1355 = (1'b1 == ap_CS_fsm[ap_const_lv32_5A]);
end

always @ (*) begin
    ap_sig_1363 = (1'b1 == ap_CS_fsm[ap_const_lv32_5B]);
end

always @ (*) begin
    ap_sig_1371 = (1'b1 == ap_CS_fsm[ap_const_lv32_5C]);
end

always @ (*) begin
    ap_sig_1379 = (1'b1 == ap_CS_fsm[ap_const_lv32_5D]);
end

always @ (*) begin
    ap_sig_1387 = (1'b1 == ap_CS_fsm[ap_const_lv32_5E]);
end

always @ (*) begin
    ap_sig_1395 = (1'b1 == ap_CS_fsm[ap_const_lv32_5F]);
end

always @ (*) begin
    ap_sig_1403 = (1'b1 == ap_CS_fsm[ap_const_lv32_60]);
end

always @ (*) begin
    ap_sig_1411 = (1'b1 == ap_CS_fsm[ap_const_lv32_61]);
end

always @ (*) begin
    ap_sig_1419 = (1'b1 == ap_CS_fsm[ap_const_lv32_62]);
end

always @ (*) begin
    ap_sig_1427 = (1'b1 == ap_CS_fsm[ap_const_lv32_63]);
end

always @ (*) begin
    ap_sig_1435 = (1'b1 == ap_CS_fsm[ap_const_lv32_64]);
end

always @ (*) begin
    ap_sig_149 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_168 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_180 = (1'b1 == ap_CS_fsm[ap_const_lv32_25]);
end

always @ (*) begin
    ap_sig_189 = (1'b1 == ap_CS_fsm[ap_const_lv32_27]);
end

always @ (*) begin
    ap_sig_198 = (1'b1 == ap_CS_fsm[ap_const_lv32_28]);
end

always @ (*) begin
    ap_sig_217 = (1'b1 == ap_CS_fsm[ap_const_lv32_29]);
end

always @ (*) begin
    ap_sig_226 = (1'b1 == ap_CS_fsm[ap_const_lv32_2A]);
end

always @ (*) begin
    ap_sig_253 = (1'b1 == ap_CS_fsm[ap_const_lv32_2B]);
end

always @ (*) begin
    ap_sig_274 = (1'b1 == ap_CS_fsm[ap_const_lv32_2C]);
end

always @ (*) begin
    ap_sig_289 = (1'b1 == ap_CS_fsm[ap_const_lv32_40]);
end

always @ (*) begin
    ap_sig_304 = (1'b1 == ap_CS_fsm[ap_const_lv32_41]);
end

always @ (*) begin
    ap_sig_334 = (1'b1 == ap_CS_fsm[ap_const_lv32_42]);
end

always @ (*) begin
    ap_sig_356 = (1'b1 == ap_CS_fsm[ap_const_lv32_66]);
end

always @ (*) begin
    ap_sig_368 = (1'b1 == ap_CS_fsm[ap_const_lv32_68]);
end

always @ (*) begin
    ap_sig_377 = (1'b1 == ap_CS_fsm[ap_const_lv32_6D]);
end

always @ (*) begin
    ap_sig_464 = (1'b1 == ap_CS_fsm[ap_const_lv32_26]);
end

always @ (*) begin
    ap_sig_482 = (1'b1 == ap_CS_fsm[ap_const_lv32_65]);
end

always @ (*) begin
    ap_sig_539 = (1'b1 == ap_CS_fsm[ap_const_lv32_67]);
end

assign divisor_cast1_fu_895_p1 = divisor_fu_887_p3;

assign divisor_cast_fu_1021_p1 = divisor_reg_1712;

assign divisor_fu_887_p3 = {{a_3_reg_385}, {1'b0}};

assign grp_Square_root_dup_fu_452_ap_start = ap_reg_grp_Square_root_dup_fu_452_ap_start;

assign grp_fu_1247_p1 = divisor_cast_reg_1739;

assign grp_fu_1558_p0 = a_3_cast15_cast_fu_883_p1;

assign grp_fu_1558_p1 = a_3_cast15_cast_fu_883_p1;

assign grp_fu_570_p1 = ap_const_lv32_A;

assign grp_fu_955_p0 = $signed(temp_2_fu_945_p2);

assign grp_fu_955_p1 = grp_fu_955_p10;

assign grp_fu_955_p10 = divisor_fu_887_p3;

assign i_1_cast16_cast_fu_842_p1 = i_1_reg_374;

assign i_2_cast_fu_1543_p1 = i_2_reg_441;

assign i_3_fu_867_p2 = (i_1_reg_374 + ap_const_lv3_1);

assign i_4_fu_1552_p2 = (i_2_reg_441 + ap_const_lv31_1);

assign i_fu_795_p2 = (a_2_reg_343 + ap_const_lv4_1);

assign k_2_cast_fu_828_p1 = k_2_fu_822_p2;

assign k_2_fu_822_p2 = (k_cast_fu_807_p1 + ap_const_lv3_1);

assign k_3_fu_1252_p2 = (ap_const_lv32_1 + k_1_load_reg_1756);

assign k_4_fu_1179_p2 = ($signed(ap_const_lv32_FFFFFFFF) + $signed(k_1_fu_146));

assign k_cast_fu_807_p1 = k_phi_fu_360_p8;

assign len2_1_fu_675_p2 = ($signed(ap_const_lv32_FFFFFFFF) + $signed(len1_reg_320));

assign len_fu_480_p2 = (len2_reg_298 + ap_const_lv32_1);

assign mul1_fu_1361_p1 = a_4_load_1_reg_1764;

assign mul1_fu_1361_p2 = ($signed({{1'b0}, {ap_const_lv65_19999999A}}) * $signed(mul1_fu_1361_p1));

assign mul2_fu_1425_p1 = a_7_reg_1820;

assign mul2_fu_1425_p2 = ($signed({{1'b0}, {ap_const_lv65_19999999A}}) * $signed(mul2_fu_1425_p1));

assign mul6_fu_580_p1 = tmp_s_reg_310;

assign mul6_fu_580_p2 = ($signed({{1'b0}, {ap_const_lv65_19999999A}}) * $signed(mul6_fu_580_p1));

assign mul_fu_490_p0 = n1_reg_289;

assign mul_fu_490_p2 = ($signed(mul_fu_490_p0) * $signed(65'h19999999A));

assign n_1_fu_552_p3 = ((tmp_36_fu_502_p3[0:0] === 1'b1) ? neg_ti_fu_546_p2 : tmp_35_fu_534_p1);

assign neg_mul1_fu_1367_p2 = (ap_const_lv65_0 - mul1_fu_1361_p2);

assign neg_mul2_fu_1431_p2 = (ap_const_lv65_0 - mul2_fu_1425_p2);

assign neg_mul7_fu_586_p2 = (ap_const_lv65_0 - mul6_fu_580_p2);

assign neg_mul_fu_496_p2 = (ap_const_lv65_0 - mul_fu_490_p2);

assign neg_ti1_fu_636_p2 = (ap_const_lv32_0 - tmp_60_fu_628_p3);

assign neg_ti2_fu_1408_p2 = (ap_const_lv29_0 - p_v_v_fu_1400_p3);

assign neg_ti3_fu_1472_p2 = (ap_const_lv32_0 - tmp_74_fu_1465_p3);

assign neg_ti_fu_546_p2 = (ap_const_lv32_0 - tmp_45_fu_538_p3);

assign new_temp_fu_1227_p2 = ($signed(tmp9_cast_fu_1223_p1) + $signed(tmp8_fu_1211_p2));

assign p_6_fu_1281_p3 = ((tmp_48_fu_1275_p2[0:0] === 1'b1) ? ap_const_lv32_9 : grp_fu_1247_p2);

assign p_lshr_f_fu_999_p4 = {{size_of_a_0_in_reg_415[ap_const_lv32_1F : ap_const_lv32_1]}};

assign p_lshr_fu_979_p4 = {{p_neg_fu_973_p2[ap_const_lv32_1F : ap_const_lv32_1]}};

assign p_neg_fu_973_p2 = (ap_const_lv32_0 - size_of_a_0_in_reg_415);

assign p_neg_t_fu_993_p2 = (ap_const_lv32_0 - tmp_61_fu_989_p1);

assign p_s_fu_1072_p3 = ((rev_fu_1066_p2[0:0] === 1'b1) ? ap_const_lv17_9 : grp_fu_955_p2);

assign p_shl1_cast_fu_910_p1 = $signed(p_shl1_fu_903_p3);

assign p_shl1_fu_903_p3 = {{grp_fu_1558_p3}, {ap_const_lv3_0}};

assign p_shl2_cast_fu_921_p1 = $signed(p_shl2_fu_914_p3);

assign p_shl2_fu_914_p3 = {{grp_fu_1558_p3}, {1'b0}};

assign p_shl3_fu_1035_p1 = tmp_69_fu_1027_p3;

assign p_shl4_fu_1047_p1 = tmp_70_fu_1039_p3;

assign p_shl6_cast_fu_740_p1 = $signed(p_shl6_fu_733_p3);

assign p_shl6_fu_733_p3 = {{h_load_reg_1613}, {1'b0}};

assign p_shl8_cast_fu_1092_p1 = p_shl8_fu_1084_p3;

assign p_shl8_fu_1084_p3 = {{a_3_reg_385}, {ap_const_lv3_0}};

assign p_shl_cast_fu_729_p1 = $signed(p_shl_fu_722_p3);

assign p_shl_fu_722_p3 = {{h_load_reg_1613}, {ap_const_lv3_0}};

assign p_v_v_fu_1400_p3 = ((tmp_78_fu_1373_p3[0:0] === 1'b1) ? tmp_79_fu_1380_p4 : tmp_80_fu_1390_p4);

assign remainder_1_cast_fu_1135_p1 = $signed(remainder_1_fu_1129_p2);

assign remainder_1_fu_1129_p2 = ($signed(temp_2_cast_cast_fu_1024_p1) - $signed(tmp_36_cast_fu_1125_p1));

assign remainder_2_fu_1328_p2 = (temp2_1_reg_1810 - tmp_53_fu_1320_p3);

assign remainder_3_fu_1522_p2 = (divisor_cast_reg_1739 + remainder_4_fu_142);

assign remainder_cast_fu_899_p1 = $signed(grp_fu_1558_p3);

assign rev_fu_1066_p2 = (slt_fu_1060_p2 ^ 1'b1);

assign size_of_a_fu_1013_p3 = ((tmp_68_fu_965_p3[0:0] === 1'b1) ? p_neg_t_fu_993_p2 : tmp_62_fu_1009_p1);

assign slt_fu_1060_p2 = (($signed(x_fu_1057_p1) < $signed(Ny_fu_1051_p2)) ? 1'b1 : 1'b0);

assign t_1_fu_1338_p2 = (ap_const_lv32_1 + t_load_2_reg_1774);

assign t_2_fu_1168_p2 = ($signed(ap_const_lv32_FFFFFFFF) + $signed(t_fu_150));

assign temp2_1_fu_1233_p2 = (new_temp_fu_1227_p2 - grp_Square_root_dup_fu_452_ap_return);

assign temp_1_cast_fu_718_p1 = $signed(temp_1_fu_712_p2);

assign temp_1_fu_712_p2 = ($signed(tmp_30_cast_fu_708_p1) + $signed(ap_const_lv9_1D0));

assign temp_2_cast_cast_fu_1024_p1 = $signed(temp_2_reg_1723);

assign temp_2_fu_945_p2 = ($signed(tmp5_fu_929_p2) + $signed(tmp6_cast_fu_941_p1));

assign temp_fu_764_p2 = ($signed(tmp2_fu_748_p2) + $signed(tmp3_cast_fu_760_p1));

assign tmp10_fu_1299_p2 = (tmp_85_fu_1289_p2 + p_6_fu_1281_p3);

assign tmp2_fu_748_p2 = ($signed(p_shl_cast_fu_729_p1) + $signed(p_shl6_cast_fu_740_p1));

assign tmp3_cast_fu_760_p1 = $signed(tmp3_fu_754_p2);

assign tmp3_fu_754_p2 = ($signed(tmp_28_cast_fu_744_p1) + $signed(ap_const_lv11_5F0));

assign tmp5_fu_929_p2 = ($signed(p_shl2_cast_fu_921_p1) + $signed(p_shl1_cast_fu_910_p1));

assign tmp6_cast_fu_941_p1 = $signed(tmp6_fu_935_p2);

assign tmp6_fu_935_p2 = ($signed(tmp_41_cast_fu_925_p1) + $signed(ap_const_lv9_1D0));

assign tmp7_fu_1096_p2 = (p_s_fu_1072_p3 + p_shl8_cast_fu_1092_p1);

assign tmp8_fu_1211_p2 = (tmp_75_fu_1195_p2 + tmp_76_fu_1201_p2);

assign tmp9_cast_fu_1223_p1 = $signed(tmp9_fu_1217_p2);

assign tmp9_fu_1217_p2 = ($signed(ap_const_lv9_1D0) + $signed(tmp_53_cast_fu_1207_p1));

assign tmp_11_fu_564_p2 = ((tmp_s_reg_310 == ap_const_lv32_0) ? 1'b1 : 1'b0);

assign tmp_12_fu_651_p1 = $signed(len2_reg_298);

assign tmp_14_fu_656_p1 = $signed(len_reg_1578);

assign tmp_15_fu_686_p2 = (len2_reg_298 + ap_const_lv32_2);

assign tmp_16_fu_692_p1 = $signed(tmp_15_fu_686_p2);

assign tmp_17_fu_697_p2 = (len2_reg_298 + ap_const_lv32_3);

assign tmp_18_fu_703_p1 = $signed(tmp_17_fu_697_p2);

assign tmp_20_fu_664_p2 = ($signed(ap_const_lv6_30) + $signed(tmp_64_fu_660_p1));

assign tmp_21_fu_681_p1 = $signed(len2_1_fu_675_p2);

assign tmp_22_fu_642_p3 = ((tmp_65_fu_592_p3[0:0] === 1'b1) ? neg_ti1_fu_636_p2 : tmp_59_fu_624_p1);

assign tmp_23_cast_fu_670_p1 = tmp_20_fu_664_p2;

assign tmp_23_fu_846_p2 = ((i_1_reg_374 < ap_const_lv3_5) ? 1'b1 : 1'b0);

assign tmp_24_fu_774_p2 = ((a_2_reg_343 < ap_const_lv4_A) ? 1'b1 : 1'b0);

assign tmp_25_fu_852_p0 = i_1_cast16_cast_fu_842_p1;

assign tmp_25_fu_852_p1 = i_1_cast16_cast_fu_842_p1;

assign tmp_25_fu_852_p2 = (tmp_25_fu_852_p0 * tmp_25_fu_852_p1);

assign tmp_26_fu_862_p2 = (($signed(tmp_35_cast_fu_858_p1) > $signed(temp_1_reg_1624)) ? 1'b1 : 1'b0);

assign tmp_27_fu_780_p0 = a_2_cast17_cast_fu_770_p1;

assign tmp_27_fu_780_p1 = a_2_cast17_cast_fu_770_p1;

assign tmp_27_fu_780_p2 = (tmp_27_fu_780_p0 * tmp_27_fu_780_p1);

assign tmp_28_cast_fu_744_p1 = $signed(h_q0);

assign tmp_28_fu_790_p2 = (($signed(tmp_33_cast_fu_786_p1) > $signed(temp_reg_1635)) ? 1'b1 : 1'b0);

assign tmp_30_cast_fu_708_p1 = $signed(h_q1);

assign tmp_30_fu_811_p2 = ($signed(k_phi_fu_360_p8) + $signed(ap_const_lv2_3));

assign tmp_31_fu_817_p1 = tmp_30_fu_811_p2;

assign tmp_32_fu_560_p1 = len2_reg_298[0:0];

assign tmp_33_cast_fu_786_p1 = tmp_27_fu_780_p2;

assign tmp_33_fu_1111_p0 = tmp_33_fu_1111_p00;

assign tmp_33_fu_1111_p00 = a_3_reg_385;

assign tmp_33_fu_1111_p1 = p_s_fu_1072_p3;

assign tmp_33_fu_1111_p2 = ($signed({{1'b0}, {tmp_33_fu_1111_p0}}) * $signed(tmp_33_fu_1111_p1));

assign tmp_34_fu_520_p1 = $signed(tmp_44_fu_510_p4);

assign tmp_35_cast_fu_858_p1 = tmp_25_fu_852_p2;

assign tmp_35_fu_534_p1 = $signed(tmp_49_fu_524_p4);

assign tmp_36_cast_fu_1125_p1 = $signed(tmp_63_fu_1117_p3);

assign tmp_36_fu_502_p3 = n1_reg_289[ap_const_lv32_1F];

assign tmp_37_fu_1140_p2 = (len2_reg_298 + ap_const_lv32_4);

assign tmp_38_fu_1163_p2 = (($signed(k_1_fu_146) > $signed(tmp_37_reg_1746)) ? 1'b1 : 1'b0);

assign tmp_40_fu_1190_p2 = (t_fu_150 - size_of_a_reg_1734);

assign tmp_41_cast_fu_925_p1 = $signed(h_q1);

assign tmp_41_fu_1174_p1 = $signed(t_2_fu_1168_p2);

assign tmp_42_fu_1185_p1 = $signed(k_4_fu_1179_p2);

assign tmp_44_fu_510_p4 = {{neg_mul_fu_496_p2[ap_const_lv32_40 : ap_const_lv32_24]}};

assign tmp_45_fu_538_p3 = ((tmp_36_fu_502_p3[0:0] === 1'b1) ? tmp_34_fu_520_p1 : tmp_35_fu_534_p1);

assign tmp_46_fu_1547_p2 = (($signed(i_2_cast_fu_1543_p1) < $signed(tmp_40_reg_1805)) ? 1'b1 : 1'b0);

assign tmp_47_fu_1489_p2 = ((tmp_71_fu_1414_p3 == tmp_84_fu_1485_p1) ? 1'b1 : 1'b0);

assign tmp_48_fu_1275_p2 = (($signed(grp_fu_1247_p2) > $signed(32'b1001)) ? 1'b1 : 1'b0);

assign tmp_49_fu_524_p4 = {{mul_fu_490_p2[ap_const_lv32_40 : ap_const_lv32_24]}};

assign tmp_50_fu_1146_p1 = a_3_reg_385;

assign tmp_51_fu_1315_p1 = tmp_50_reg_1751;

assign tmp_51_fu_1315_p2 = ($signed(tmp_87_fu_1311_p1) * $signed({{1'b0}, {tmp_51_fu_1315_p1}}));

assign tmp_52_fu_610_p1 = $signed(tmp_66_fu_600_p4);

assign tmp_53_cast_fu_1207_p1 = $signed(h_q0);

assign tmp_53_fu_1320_p3 = {{tmp_51_fu_1315_p2}, {1'b0}};

assign tmp_54_fu_1334_p1 = $signed(t_load_2_reg_1774);

assign tmp_56_fu_1495_p2 = ($signed(t_fu_150) + $signed(ap_const_lv32_FFFFFFFE));

assign tmp_57_fu_1501_p1 = $signed(tmp_56_fu_1495_p2);

assign tmp_58_fu_1537_p2 = (remy_q0 + divisor_cast_reg_1739);

assign tmp_59_fu_624_p1 = $signed(tmp_67_fu_614_p4);

assign tmp_60_fu_628_p3 = ((tmp_65_fu_592_p3[0:0] === 1'b1) ? tmp_52_fu_610_p1 : tmp_59_fu_624_p1);

assign tmp_61_fu_989_p1 = p_lshr_fu_979_p4;

assign tmp_62_fu_1009_p1 = p_lshr_f_fu_999_p4;

assign tmp_63_fu_1117_p3 = {{tmp_33_fu_1111_p2}, {1'b0}};

assign tmp_64_fu_660_p1 = grp_fu_570_p2[5:0];

assign tmp_65_fu_592_p3 = tmp_s_reg_310[ap_const_lv32_1F];

assign tmp_66_fu_600_p4 = {{neg_mul7_fu_586_p2[ap_const_lv32_40 : ap_const_lv32_24]}};

assign tmp_67_fu_614_p4 = {{mul6_fu_580_p2[ap_const_lv32_40 : ap_const_lv32_24]}};

assign tmp_68_fu_965_p3 = size_of_a_0_in_reg_415[ap_const_lv32_1F];

assign tmp_69_fu_1027_p3 = {{a_3_reg_385}, {ap_const_lv4_0}};

assign tmp_70_fu_1039_p3 = {{a_3_reg_385}, {ap_const_lv2_0}};

assign tmp_71_fu_1414_p3 = ((tmp_78_fu_1373_p3[0:0] === 1'b1) ? neg_ti2_fu_1408_p2 : tmp_80_fu_1390_p4);

assign tmp_72_fu_1447_p1 = $signed(tmp_82_fu_1437_p4);

assign tmp_73_fu_1461_p1 = $signed(tmp_83_fu_1451_p4);

assign tmp_74_fu_1465_p3 = ((tmp_81_reg_1826[0:0] === 1'b1) ? tmp_72_fu_1447_p1 : tmp_73_fu_1461_p1);

assign tmp_75_fu_1195_p2 = remy_q0 << ap_const_lv32_3;

assign tmp_76_fu_1201_p2 = remy_q0 << ap_const_lv32_1;

assign tmp_77_fu_1239_p3 = temp2_1_fu_1233_p2[ap_const_lv32_1F];

assign tmp_78_fu_1373_p3 = a_4_load_1_reg_1764[ap_const_lv32_1F];

assign tmp_79_fu_1380_p4 = {{neg_mul1_fu_1367_p2[ap_const_lv32_40 : ap_const_lv32_24]}};

assign tmp_80_fu_1390_p4 = {{mul1_fu_1361_p2[ap_const_lv32_40 : ap_const_lv32_24]}};

assign tmp_82_fu_1437_p4 = {{neg_mul2_fu_1431_p2[ap_const_lv32_40 : ap_const_lv32_24]}};

assign tmp_83_fu_1451_p4 = {{mul2_fu_1425_p2[ap_const_lv32_40 : ap_const_lv32_24]}};

assign tmp_84_fu_1485_p1 = vr2_fu_1478_p3[28:0];

assign tmp_85_fu_1289_p2 = a_4_load_1_reg_1764 << ap_const_lv32_3;

assign tmp_86_fu_1294_p2 = a_4_load_1_reg_1764 << ap_const_lv32_1;

assign tmp_87_fu_1311_p1 = p_6_fu_1281_p3[30:0];

assign tmp_fu_474_p2 = ((n1_reg_289 == ap_const_lv32_0) ? 1'b1 : 1'b0);

assign vr2_fu_1478_p3 = ((tmp_81_reg_1826[0:0] === 1'b1) ? neg_ti3_fu_1472_p2 : tmp_73_fu_1461_p1);

assign x_fu_1057_p1 = $signed(temp_2_reg_1723);

always @ (posedge ap_clk) begin
    divisor_reg_1712[0] <= 1'b0;
    divisor_cast1_reg_1717[0] <= 1'b0;
    divisor_cast1_reg_1717[16:5] <= 12'b000000000000;
    divisor_cast_reg_1739[0] <= 1'b0;
    divisor_cast_reg_1739[31:5] <= 27'b000000000000000000000000000;
    tmp_50_reg_1751[30:4] <= 27'b000000000000000000000000000;
    k_reg_356[1] <= 1'b1;
end

endmodule //Square_root
