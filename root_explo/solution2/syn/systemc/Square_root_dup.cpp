// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Square_root_dup.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Square_root_dup::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Square_root_dup::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<59> Square_root_dup::ap_ST_st1_fsm_0 = "1";
const sc_lv<59> Square_root_dup::ap_ST_st2_fsm_1 = "10";
const sc_lv<59> Square_root_dup::ap_ST_st3_fsm_2 = "100";
const sc_lv<59> Square_root_dup::ap_ST_st4_fsm_3 = "1000";
const sc_lv<59> Square_root_dup::ap_ST_st5_fsm_4 = "10000";
const sc_lv<59> Square_root_dup::ap_ST_st6_fsm_5 = "100000";
const sc_lv<59> Square_root_dup::ap_ST_st7_fsm_6 = "1000000";
const sc_lv<59> Square_root_dup::ap_ST_st8_fsm_7 = "10000000";
const sc_lv<59> Square_root_dup::ap_ST_st9_fsm_8 = "100000000";
const sc_lv<59> Square_root_dup::ap_ST_st10_fsm_9 = "1000000000";
const sc_lv<59> Square_root_dup::ap_ST_st11_fsm_10 = "10000000000";
const sc_lv<59> Square_root_dup::ap_ST_st12_fsm_11 = "100000000000";
const sc_lv<59> Square_root_dup::ap_ST_st13_fsm_12 = "1000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st14_fsm_13 = "10000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st15_fsm_14 = "100000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st16_fsm_15 = "1000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st17_fsm_16 = "10000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st18_fsm_17 = "100000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st19_fsm_18 = "1000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st20_fsm_19 = "10000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st21_fsm_20 = "100000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st22_fsm_21 = "1000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st23_fsm_22 = "10000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st24_fsm_23 = "100000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st25_fsm_24 = "1000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st26_fsm_25 = "10000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st27_fsm_26 = "100000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st28_fsm_27 = "1000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st29_fsm_28 = "10000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st30_fsm_29 = "100000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st31_fsm_30 = "1000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st32_fsm_31 = "10000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st33_fsm_32 = "100000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st34_fsm_33 = "1000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st35_fsm_34 = "10000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st36_fsm_35 = "100000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st37_fsm_36 = "1000000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st38_fsm_37 = "10000000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st39_fsm_38 = "100000000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st40_fsm_39 = "1000000000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st41_fsm_40 = "10000000000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st42_fsm_41 = "100000000000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st43_fsm_42 = "1000000000000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st44_fsm_43 = "10000000000000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st45_fsm_44 = "100000000000000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st46_fsm_45 = "1000000000000000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st47_fsm_46 = "10000000000000000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st48_fsm_47 = "100000000000000000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st49_fsm_48 = "1000000000000000000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st50_fsm_49 = "10000000000000000000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st51_fsm_50 = "100000000000000000000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st52_fsm_51 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st53_fsm_52 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st54_fsm_53 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st55_fsm_54 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st56_fsm_55 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st57_fsm_56 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st58_fsm_57 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<59> Square_root_dup::ap_ST_st59_fsm_58 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> Square_root_dup::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> Square_root_dup::ap_const_lv1_1 = "1";
const sc_lv<32> Square_root_dup::ap_const_lv32_1 = "1";
const sc_lv<1> Square_root_dup::ap_const_lv1_0 = "0";
const sc_lv<32> Square_root_dup::ap_const_lv32_2 = "10";
const sc_lv<32> Square_root_dup::ap_const_lv32_38 = "111000";
const sc_lv<32> Square_root_dup::ap_const_lv32_39 = "111001";
const sc_lv<32> Square_root_dup::ap_const_lv32_37 = "110111";
const sc_lv<5> Square_root_dup::ap_const_lv5_0 = "00000";
const sc_lv<4> Square_root_dup::ap_const_lv4_0 = "0000";
const sc_lv<15> Square_root_dup::ap_const_lv15_0 = "000000000000000";
const sc_lv<3> Square_root_dup::ap_const_lv3_0 = "000";
const sc_lv<52> Square_root_dup::ap_const_lv52_0 = "0000000000000000000000000000000000000000000000000000";
const sc_lv<5> Square_root_dup::ap_const_lv5_1 = "1";
const sc_lv<52> Square_root_dup::ap_const_lv52_A = "1010";
const sc_lv<105> Square_root_dup::ap_const_lv105_1999999999999A = "11001100110011001100110011001100110011001100110011010";
const sc_lv<32> Square_root_dup::ap_const_lv32_33 = "110011";
const sc_lv<32> Square_root_dup::ap_const_lv32_68 = "1101000";
const sc_lv<32> Square_root_dup::ap_const_lv32_4 = "100";
const sc_lv<6> Square_root_dup::ap_const_lv6_3F = "111111";
const sc_lv<105> Square_root_dup::ap_const_lv105_0 = "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<4> Square_root_dup::ap_const_lv4_1 = "1";
const sc_lv<32> Square_root_dup::ap_const_lv32_3A = "111010";

Square_root_dup::Square_root_dup(sc_module_name name) : sc_module(name), mVcdFile(0) {
    arr_U = new Square_root_dup_arr("arr_U");
    arr_U->clk(ap_clk);
    arr_U->reset(ap_rst);
    arr_U->address0(arr_address0);
    arr_U->ce0(arr_ce0);
    arr_U->we0(arr_we0);
    arr_U->d0(arr_d0);
    arr_U->q0(arr_q0);
    arr_U->address1(arr_address1);
    arr_U->ce1(arr_ce1);
    arr_U->q1(arr_q1);
    Square_root_srem_51ns_5ns_5_55_seq_U1 = new Square_root_srem_51ns_5ns_5_55_seq<1,55,51,5,5>("Square_root_srem_51ns_5ns_5_55_seq_U1");
    Square_root_srem_51ns_5ns_5_55_seq_U1->clk(ap_clk);
    Square_root_srem_51ns_5ns_5_55_seq_U1->reset(ap_rst);
    Square_root_srem_51ns_5ns_5_55_seq_U1->start(grp_fu_197_ap_start);
    Square_root_srem_51ns_5ns_5_55_seq_U1->done(grp_fu_197_ap_done);
    Square_root_srem_51ns_5ns_5_55_seq_U1->din0(grp_fu_197_p0);
    Square_root_srem_51ns_5ns_5_55_seq_U1->din1(grp_fu_197_p1);
    Square_root_srem_51ns_5ns_5_55_seq_U1->ce(ap_var_for_const0);
    Square_root_srem_51ns_5ns_5_55_seq_U1->dout(grp_fu_197_p2);
    Square_root_mac_muladd_5s_5s_15s_32_1_U2 = new Square_root_mac_muladd_5s_5s_15s_32_1<1,1,5,5,15,32>("Square_root_mac_muladd_5s_5s_15s_32_1_U2");
    Square_root_mac_muladd_5s_5s_15s_32_1_U2->din0(grp_fu_382_p0);
    Square_root_mac_muladd_5s_5s_15s_32_1_U2->din1(grp_fu_382_p1);
    Square_root_mac_muladd_5s_5s_15s_32_1_U2->din2(grp_fu_382_p2);
    Square_root_mac_muladd_5s_5s_15s_32_1_U2->dout(grp_fu_382_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st59_fsm_58 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st59_fsm_58 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_sig_cseq_ST_st59_fsm_58 );
    sensitive << ( tmp_13_fu_376_p3 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_ap_sig_126);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_135);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_158);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_180);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_303);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_76);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_95);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_76 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_95 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_126 );

    SC_METHOD(thread_ap_sig_cseq_ST_st56_fsm_55);
    sensitive << ( ap_sig_180 );

    SC_METHOD(thread_ap_sig_cseq_ST_st57_fsm_56);
    sensitive << ( ap_sig_135 );

    SC_METHOD(thread_ap_sig_cseq_ST_st58_fsm_57);
    sensitive << ( ap_sig_158 );

    SC_METHOD(thread_ap_sig_cseq_ST_st59_fsm_58);
    sensitive << ( ap_sig_303 );

    SC_METHOD(thread_arr_address0);
    sensitive << ( cou1_cast_reg_396 );
    sensitive << ( tmp_3_reg_425 );
    sensitive << ( tmp_1_cast_reg_435 );
    sensitive << ( ap_sig_cseq_ST_st57_fsm_56 );
    sensitive << ( exitcond_fu_315_p2 );
    sensitive << ( ap_sig_cseq_ST_st56_fsm_55 );
    sensitive << ( tmp_7_cast_fu_331_p1 );

    SC_METHOD(thread_arr_address1);
    sensitive << ( ap_sig_cseq_ST_st57_fsm_56 );
    sensitive << ( i_cast_fu_310_p1 );

    SC_METHOD(thread_arr_ce0);
    sensitive << ( tmp_3_reg_425 );
    sensitive << ( ap_sig_cseq_ST_st57_fsm_56 );
    sensitive << ( exitcond_fu_315_p2 );
    sensitive << ( ap_sig_cseq_ST_st56_fsm_55 );

    SC_METHOD(thread_arr_ce1);
    sensitive << ( ap_sig_cseq_ST_st57_fsm_56 );

    SC_METHOD(thread_arr_d0);
    sensitive << ( ap_sig_cseq_ST_st56_fsm_55 );
    sensitive << ( grp_fu_197_p2 );

    SC_METHOD(thread_arr_we0);
    sensitive << ( ap_sig_cseq_ST_st56_fsm_55 );

    SC_METHOD(thread_cou1_cast2_fu_235_p1);
    sensitive << ( indvars_iv_reg_103 );

    SC_METHOD(thread_cou1_cast_fu_181_p1);
    sensitive << ( indvars_iv_reg_103 );

    SC_METHOD(thread_cou1_fu_191_p2);
    sensitive << ( indvars_iv_reg_103 );

    SC_METHOD(thread_exitcond_fu_315_p2);
    sensitive << ( p_lshr_f_cast_reg_430 );
    sensitive << ( ap_sig_cseq_ST_st57_fsm_56 );
    sensitive << ( i_reg_124 );

    SC_METHOD(thread_extLd_cast_fu_368_p1);
    sensitive << ( arr_q0 );

    SC_METHOD(thread_grp_fu_197_ap_start);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( tmp_fu_185_p2 );

    SC_METHOD(thread_grp_fu_197_p0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( y1_reg_114 );

    SC_METHOD(thread_grp_fu_197_p1);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_grp_fu_382_p0);
    sensitive << ( tmp_3_reg_425 );
    sensitive << ( ap_sig_cseq_ST_st59_fsm_58 );
    sensitive << ( extLd_cast_fu_368_p1 );

    SC_METHOD(thread_grp_fu_382_p1);
    sensitive << ( tmp_3_reg_425 );
    sensitive << ( ap_sig_cseq_ST_st59_fsm_58 );
    sensitive << ( extLd_cast_fu_368_p1 );

    SC_METHOD(thread_grp_fu_382_p2);
    sensitive << ( tmp_3_reg_425 );
    sensitive << ( ap_sig_cseq_ST_st59_fsm_58 );
    sensitive << ( tmp_11_fu_372_p1 );

    SC_METHOD(thread_i_1_fu_320_p2);
    sensitive << ( i_reg_124 );

    SC_METHOD(thread_i_cast1_fu_306_p1);
    sensitive << ( i_reg_124 );

    SC_METHOD(thread_i_cast_fu_310_p1);
    sensitive << ( i_reg_124 );

    SC_METHOD(thread_mul_fu_207_p1);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( y1_reg_114 );

    SC_METHOD(thread_mul_fu_207_p2);
    sensitive << ( mul_fu_207_p1 );

    SC_METHOD(thread_neg_mul_fu_259_p2);
    sensitive << ( mul_reg_409 );

    SC_METHOD(thread_neg_ti_fu_288_p2);
    sensitive << ( tmp_10_fu_281_p3 );

    SC_METHOD(thread_p_lshr_f_cast_fu_239_p4);
    sensitive << ( indvars_iv_reg_103 );

    SC_METHOD(thread_p_shl1_cast_fu_167_p1);
    sensitive << ( p_shl1_fu_159_p3 );

    SC_METHOD(thread_p_shl1_fu_159_p3);
    sensitive << ( x );

    SC_METHOD(thread_p_shl_cast_fu_155_p1);
    sensitive << ( p_shl_fu_147_p3 );

    SC_METHOD(thread_p_shl_fu_147_p3);
    sensitive << ( x );

    SC_METHOD(thread_tmp_10_fu_281_p3);
    sensitive << ( tmp_16_reg_414 );
    sensitive << ( tmp_1_fu_274_p1 );
    sensitive << ( tmp_5_fu_278_p1 );

    SC_METHOD(thread_tmp_11_fu_372_p1);
    sensitive << ( z_reg_135 );

    SC_METHOD(thread_tmp_13_fu_376_p3);
    sensitive << ( tmp_3_reg_425 );
    sensitive << ( grp_fu_382_p3 );
    sensitive << ( tmp_11_fu_372_p1 );

    SC_METHOD(thread_tmp_14_fu_294_p3);
    sensitive << ( tmp_16_reg_414 );
    sensitive << ( tmp_5_fu_278_p1 );
    sensitive << ( neg_ti_fu_288_p2 );

    SC_METHOD(thread_tmp_15_fu_350_p3);
    sensitive << ( tmp_8_fu_344_p2 );

    SC_METHOD(thread_tmp_17_fu_264_p4);
    sensitive << ( neg_mul_fu_259_p2 );

    SC_METHOD(thread_tmp_1_cast_fu_249_p1);
    sensitive << ( p_lshr_f_cast_fu_239_p4 );

    SC_METHOD(thread_tmp_1_fu_274_p1);
    sensitive << ( tmp_17_fu_264_p4 );

    SC_METHOD(thread_tmp_3_fu_231_p1);
    sensitive << ( indvars_iv_reg_103 );

    SC_METHOD(thread_tmp_5_fu_278_p1);
    sensitive << ( tmp_18_reg_420 );

    SC_METHOD(thread_tmp_6_fu_253_p2);
    sensitive << ( cou1_cast2_fu_235_p1 );

    SC_METHOD(thread_tmp_7_cast_fu_331_p1);
    sensitive << ( tmp_7_fu_326_p2 );

    SC_METHOD(thread_tmp_7_fu_326_p2);
    sensitive << ( tmp_6_reg_440 );
    sensitive << ( i_cast1_fu_306_p1 );

    SC_METHOD(thread_tmp_8_fu_344_p0);
    sensitive << ( ap_sig_cseq_ST_st58_fsm_57 );
    sensitive << ( arr_q0 );

    SC_METHOD(thread_tmp_8_fu_344_p1);
    sensitive << ( ap_sig_cseq_ST_st58_fsm_57 );
    sensitive << ( arr_q1 );

    SC_METHOD(thread_tmp_8_fu_344_p2);
    sensitive << ( tmp_8_fu_344_p0 );
    sensitive << ( tmp_8_fu_344_p1 );

    SC_METHOD(thread_tmp_9_cast_fu_358_p1);
    sensitive << ( tmp_15_fu_350_p3 );

    SC_METHOD(thread_tmp_fu_185_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( y1_reg_114 );

    SC_METHOD(thread_x_assign_cast_cast_cast_fu_177_p1);
    sensitive << ( y_fu_171_p2 );

    SC_METHOD(thread_y_fu_171_p2);
    sensitive << ( p_shl_cast_fu_155_p1 );
    sensitive << ( p_shl1_cast_fu_167_p1 );

    SC_METHOD(thread_z_1_fu_362_p2);
    sensitive << ( z_reg_135 );
    sensitive << ( tmp_9_cast_fu_358_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_fu_185_p2 );
    sensitive << ( exitcond_fu_315_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000000000000000000000000000000000000000000000001";
    ap_return_preg = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Square_root_dup_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x, "(port)x");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_76, "ap_sig_76");
    sc_trace(mVcdFile, x_assign_cast_cast_cast_fu_177_p1, "x_assign_cast_cast_cast_fu_177_p1");
    sc_trace(mVcdFile, cou1_cast_fu_181_p1, "cou1_cast_fu_181_p1");
    sc_trace(mVcdFile, cou1_cast_reg_396, "cou1_cast_reg_396");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_95, "ap_sig_95");
    sc_trace(mVcdFile, cou1_fu_191_p2, "cou1_fu_191_p2");
    sc_trace(mVcdFile, cou1_reg_404, "cou1_reg_404");
    sc_trace(mVcdFile, mul_fu_207_p2, "mul_fu_207_p2");
    sc_trace(mVcdFile, mul_reg_409, "mul_reg_409");
    sc_trace(mVcdFile, tmp_fu_185_p2, "tmp_fu_185_p2");
    sc_trace(mVcdFile, tmp_16_reg_414, "tmp_16_reg_414");
    sc_trace(mVcdFile, tmp_18_reg_420, "tmp_18_reg_420");
    sc_trace(mVcdFile, tmp_3_fu_231_p1, "tmp_3_fu_231_p1");
    sc_trace(mVcdFile, tmp_3_reg_425, "tmp_3_reg_425");
    sc_trace(mVcdFile, p_lshr_f_cast_fu_239_p4, "p_lshr_f_cast_fu_239_p4");
    sc_trace(mVcdFile, p_lshr_f_cast_reg_430, "p_lshr_f_cast_reg_430");
    sc_trace(mVcdFile, tmp_1_cast_fu_249_p1, "tmp_1_cast_fu_249_p1");
    sc_trace(mVcdFile, tmp_1_cast_reg_435, "tmp_1_cast_reg_435");
    sc_trace(mVcdFile, tmp_6_fu_253_p2, "tmp_6_fu_253_p2");
    sc_trace(mVcdFile, tmp_6_reg_440, "tmp_6_reg_440");
    sc_trace(mVcdFile, tmp_14_fu_294_p3, "tmp_14_fu_294_p3");
    sc_trace(mVcdFile, tmp_14_reg_445, "tmp_14_reg_445");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_126, "ap_sig_126");
    sc_trace(mVcdFile, i_1_fu_320_p2, "i_1_fu_320_p2");
    sc_trace(mVcdFile, i_1_reg_453, "i_1_reg_453");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st57_fsm_56, "ap_sig_cseq_ST_st57_fsm_56");
    sc_trace(mVcdFile, ap_sig_135, "ap_sig_135");
    sc_trace(mVcdFile, exitcond_fu_315_p2, "exitcond_fu_315_p2");
    sc_trace(mVcdFile, z_1_fu_362_p2, "z_1_fu_362_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st58_fsm_57, "ap_sig_cseq_ST_st58_fsm_57");
    sc_trace(mVcdFile, ap_sig_158, "ap_sig_158");
    sc_trace(mVcdFile, arr_address0, "arr_address0");
    sc_trace(mVcdFile, arr_ce0, "arr_ce0");
    sc_trace(mVcdFile, arr_we0, "arr_we0");
    sc_trace(mVcdFile, arr_d0, "arr_d0");
    sc_trace(mVcdFile, arr_q0, "arr_q0");
    sc_trace(mVcdFile, arr_address1, "arr_address1");
    sc_trace(mVcdFile, arr_ce1, "arr_ce1");
    sc_trace(mVcdFile, arr_q1, "arr_q1");
    sc_trace(mVcdFile, indvars_iv_reg_103, "indvars_iv_reg_103");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st56_fsm_55, "ap_sig_cseq_ST_st56_fsm_55");
    sc_trace(mVcdFile, ap_sig_180, "ap_sig_180");
    sc_trace(mVcdFile, y1_reg_114, "y1_reg_114");
    sc_trace(mVcdFile, i_reg_124, "i_reg_124");
    sc_trace(mVcdFile, z_reg_135, "z_reg_135");
    sc_trace(mVcdFile, tmp_7_cast_fu_331_p1, "tmp_7_cast_fu_331_p1");
    sc_trace(mVcdFile, i_cast_fu_310_p1, "i_cast_fu_310_p1");
    sc_trace(mVcdFile, p_shl_fu_147_p3, "p_shl_fu_147_p3");
    sc_trace(mVcdFile, p_shl1_fu_159_p3, "p_shl1_fu_159_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_155_p1, "p_shl_cast_fu_155_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_167_p1, "p_shl1_cast_fu_167_p1");
    sc_trace(mVcdFile, y_fu_171_p2, "y_fu_171_p2");
    sc_trace(mVcdFile, grp_fu_197_p0, "grp_fu_197_p0");
    sc_trace(mVcdFile, grp_fu_197_p1, "grp_fu_197_p1");
    sc_trace(mVcdFile, mul_fu_207_p1, "mul_fu_207_p1");
    sc_trace(mVcdFile, cou1_cast2_fu_235_p1, "cou1_cast2_fu_235_p1");
    sc_trace(mVcdFile, neg_mul_fu_259_p2, "neg_mul_fu_259_p2");
    sc_trace(mVcdFile, tmp_17_fu_264_p4, "tmp_17_fu_264_p4");
    sc_trace(mVcdFile, tmp_1_fu_274_p1, "tmp_1_fu_274_p1");
    sc_trace(mVcdFile, tmp_5_fu_278_p1, "tmp_5_fu_278_p1");
    sc_trace(mVcdFile, tmp_10_fu_281_p3, "tmp_10_fu_281_p3");
    sc_trace(mVcdFile, neg_ti_fu_288_p2, "neg_ti_fu_288_p2");
    sc_trace(mVcdFile, grp_fu_197_p2, "grp_fu_197_p2");
    sc_trace(mVcdFile, i_cast1_fu_306_p1, "i_cast1_fu_306_p1");
    sc_trace(mVcdFile, tmp_7_fu_326_p2, "tmp_7_fu_326_p2");
    sc_trace(mVcdFile, tmp_8_fu_344_p0, "tmp_8_fu_344_p0");
    sc_trace(mVcdFile, tmp_8_fu_344_p1, "tmp_8_fu_344_p1");
    sc_trace(mVcdFile, tmp_8_fu_344_p2, "tmp_8_fu_344_p2");
    sc_trace(mVcdFile, tmp_15_fu_350_p3, "tmp_15_fu_350_p3");
    sc_trace(mVcdFile, tmp_9_cast_fu_358_p1, "tmp_9_cast_fu_358_p1");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st59_fsm_58, "ap_sig_cseq_ST_st59_fsm_58");
    sc_trace(mVcdFile, ap_sig_303, "ap_sig_303");
    sc_trace(mVcdFile, grp_fu_382_p3, "grp_fu_382_p3");
    sc_trace(mVcdFile, tmp_11_fu_372_p1, "tmp_11_fu_372_p1");
    sc_trace(mVcdFile, grp_fu_382_p0, "grp_fu_382_p0");
    sc_trace(mVcdFile, extLd_cast_fu_368_p1, "extLd_cast_fu_368_p1");
    sc_trace(mVcdFile, grp_fu_382_p1, "grp_fu_382_p1");
    sc_trace(mVcdFile, grp_fu_382_p2, "grp_fu_382_p2");
    sc_trace(mVcdFile, grp_fu_197_ap_start, "grp_fu_197_ap_start");
    sc_trace(mVcdFile, grp_fu_197_ap_done, "grp_fu_197_ap_done");
    sc_trace(mVcdFile, tmp_13_fu_376_p3, "tmp_13_fu_376_p3");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Square_root_dup::~Square_root_dup() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete arr_U;
    delete Square_root_srem_51ns_5ns_5_55_seq_U1;
    delete Square_root_mac_muladd_5s_5s_15s_32_1_U2;
}

void Square_root_dup::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void Square_root_dup::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st59_fsm_58.read())) {
            ap_return_preg = tmp_13_fu_376_p3.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(tmp_fu_185_p2.read(), ap_const_lv1_0))) {
        i_reg_124 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st58_fsm_57.read())) {
        i_reg_124 = i_1_reg_453.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        indvars_iv_reg_103 = ap_const_lv5_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st56_fsm_55.read())) {
        indvars_iv_reg_103 = cou1_reg_404.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
         !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        y1_reg_114 = x_assign_cast_cast_cast_fu_177_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st56_fsm_55.read())) {
        y1_reg_114 = tmp_14_reg_445.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(tmp_fu_185_p2.read(), ap_const_lv1_0))) {
        z_reg_135 = ap_const_lv15_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st58_fsm_57.read())) {
        z_reg_135 = z_1_fu_362_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        cou1_cast_reg_396 = cou1_cast_fu_181_p1.read();
        cou1_reg_404 = cou1_fu_191_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st57_fsm_56.read())) {
        i_1_reg_453 = i_1_fu_320_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && esl_seteq<1,1,1>(tmp_fu_185_p2.read(), ap_const_lv1_0))) {
        mul_reg_409 = mul_fu_207_p2.read();
        tmp_16_reg_414 = y1_reg_114.read().range(51, 51);
        tmp_18_reg_420 = mul_fu_207_p2.read().range(104, 56);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && !esl_seteq<1,1,1>(tmp_fu_185_p2.read(), ap_const_lv1_0))) {
        p_lshr_f_cast_reg_430 = indvars_iv_reg_103.read().range(4, 1);
        tmp_1_cast_reg_435 = tmp_1_cast_fu_249_p1.read();
        tmp_3_reg_425 = tmp_3_fu_231_p1.read();
        tmp_6_reg_440 = tmp_6_fu_253_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        tmp_14_reg_445 = tmp_14_fu_294_p3.read();
    }
}

void Square_root_dup::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st59_fsm_58.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Square_root_dup::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Square_root_dup::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st59_fsm_58.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Square_root_dup::thread_ap_return() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st59_fsm_58.read())) {
        ap_return = tmp_13_fu_376_p3.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void Square_root_dup::thread_ap_sig_126() {
    ap_sig_126 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void Square_root_dup::thread_ap_sig_135() {
    ap_sig_135 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(56, 56));
}

void Square_root_dup::thread_ap_sig_158() {
    ap_sig_158 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(57, 57));
}

void Square_root_dup::thread_ap_sig_180() {
    ap_sig_180 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(55, 55));
}

void Square_root_dup::thread_ap_sig_303() {
    ap_sig_303 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(58, 58));
}

void Square_root_dup::thread_ap_sig_76() {
    ap_sig_76 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void Square_root_dup::thread_ap_sig_95() {
    ap_sig_95 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void Square_root_dup::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_76.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void Square_root_dup::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_95.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void Square_root_dup::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_126.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void Square_root_dup::thread_ap_sig_cseq_ST_st56_fsm_55() {
    if (ap_sig_180.read()) {
        ap_sig_cseq_ST_st56_fsm_55 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st56_fsm_55 = ap_const_logic_0;
    }
}

void Square_root_dup::thread_ap_sig_cseq_ST_st57_fsm_56() {
    if (ap_sig_135.read()) {
        ap_sig_cseq_ST_st57_fsm_56 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st57_fsm_56 = ap_const_logic_0;
    }
}

void Square_root_dup::thread_ap_sig_cseq_ST_st58_fsm_57() {
    if (ap_sig_158.read()) {
        ap_sig_cseq_ST_st58_fsm_57 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st58_fsm_57 = ap_const_logic_0;
    }
}

void Square_root_dup::thread_ap_sig_cseq_ST_st59_fsm_58() {
    if (ap_sig_303.read()) {
        ap_sig_cseq_ST_st59_fsm_58 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st59_fsm_58 = ap_const_logic_0;
    }
}

void Square_root_dup::thread_arr_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st56_fsm_55.read())) {
        arr_address0 =  (sc_lv<5>) (cou1_cast_reg_396.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st57_fsm_56.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_315_p2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_425.read()))) {
        arr_address0 =  (sc_lv<5>) (tmp_1_cast_reg_435.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st57_fsm_56.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_315_p2.read()))) {
        arr_address0 =  (sc_lv<5>) (tmp_7_cast_fu_331_p1.read());
    } else {
        arr_address0 = "XXXXX";
    }
}

void Square_root_dup::thread_arr_address1() {
    arr_address1 =  (sc_lv<5>) (i_cast_fu_310_p1.read());
}

void Square_root_dup::thread_arr_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st57_fsm_56.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_315_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st57_fsm_56.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_315_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_reg_425.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st56_fsm_55.read()))) {
        arr_ce0 = ap_const_logic_1;
    } else {
        arr_ce0 = ap_const_logic_0;
    }
}

void Square_root_dup::thread_arr_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st57_fsm_56.read())) {
        arr_ce1 = ap_const_logic_1;
    } else {
        arr_ce1 = ap_const_logic_0;
    }
}

void Square_root_dup::thread_arr_d0() {
    arr_d0 = grp_fu_197_p2.read().range(5-1, 0);
}

void Square_root_dup::thread_arr_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st56_fsm_55.read()))) {
        arr_we0 = ap_const_logic_1;
    } else {
        arr_we0 = ap_const_logic_0;
    }
}

void Square_root_dup::thread_cou1_cast2_fu_235_p1() {
    cou1_cast2_fu_235_p1 = esl_zext<6,5>(indvars_iv_reg_103.read());
}

void Square_root_dup::thread_cou1_cast_fu_181_p1() {
    cou1_cast_fu_181_p1 = esl_zext<64,5>(indvars_iv_reg_103.read());
}

void Square_root_dup::thread_cou1_fu_191_p2() {
    cou1_fu_191_p2 = (!indvars_iv_reg_103.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(indvars_iv_reg_103.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void Square_root_dup::thread_exitcond_fu_315_p2() {
    exitcond_fu_315_p2 = (!i_reg_124.read().is_01() || !p_lshr_f_cast_reg_430.read().is_01())? sc_lv<1>(): sc_lv<1>(i_reg_124.read() == p_lshr_f_cast_reg_430.read());
}

void Square_root_dup::thread_extLd_cast_fu_368_p1() {
    extLd_cast_fu_368_p1 = esl_sext<10,5>(arr_q0.read());
}

void Square_root_dup::thread_grp_fu_197_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         esl_seteq<1,1,1>(tmp_fu_185_p2.read(), ap_const_lv1_0))) {
        grp_fu_197_ap_start = ap_const_logic_1;
    } else {
        grp_fu_197_ap_start = ap_const_logic_0;
    }
}

void Square_root_dup::thread_grp_fu_197_p0() {
    grp_fu_197_p0 =  (sc_lv<51>) (y1_reg_114.read());
}

void Square_root_dup::thread_grp_fu_197_p1() {
    grp_fu_197_p1 =  (sc_lv<5>) (ap_const_lv52_A);
}

void Square_root_dup::thread_grp_fu_382_p0() {
    grp_fu_382_p0 =  (sc_lv<5>) (extLd_cast_fu_368_p1.read());
}

void Square_root_dup::thread_grp_fu_382_p1() {
    grp_fu_382_p1 =  (sc_lv<5>) (extLd_cast_fu_368_p1.read());
}

void Square_root_dup::thread_grp_fu_382_p2() {
    grp_fu_382_p2 =  (sc_lv<15>) (tmp_11_fu_372_p1.read());
}

void Square_root_dup::thread_i_1_fu_320_p2() {
    i_1_fu_320_p2 = (!i_reg_124.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_124.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Square_root_dup::thread_i_cast1_fu_306_p1() {
    i_cast1_fu_306_p1 = esl_zext<6,4>(i_reg_124.read());
}

void Square_root_dup::thread_i_cast_fu_310_p1() {
    i_cast_fu_310_p1 = esl_zext<64,4>(i_reg_124.read());
}

void Square_root_dup::thread_mul_fu_207_p1() {
    mul_fu_207_p1 =  (sc_lv<51>) (y1_reg_114.read());
}

void Square_root_dup::thread_mul_fu_207_p2() {
    mul_fu_207_p2 = (!ap_const_lv105_1999999999999A.is_01() || !mul_fu_207_p1.read().is_01())? sc_lv<105>(): sc_biguint<105>(ap_const_lv105_1999999999999A) * sc_bigint<51>(mul_fu_207_p1.read());
}

void Square_root_dup::thread_neg_mul_fu_259_p2() {
    neg_mul_fu_259_p2 = (!ap_const_lv105_0.is_01() || !mul_reg_409.read().is_01())? sc_lv<105>(): (sc_biguint<105>(ap_const_lv105_0) - sc_biguint<105>(mul_reg_409.read()));
}

void Square_root_dup::thread_neg_ti_fu_288_p2() {
    neg_ti_fu_288_p2 = (!ap_const_lv52_0.is_01() || !tmp_10_fu_281_p3.read().is_01())? sc_lv<52>(): (sc_biguint<52>(ap_const_lv52_0) - sc_biguint<52>(tmp_10_fu_281_p3.read()));
}

void Square_root_dup::thread_p_lshr_f_cast_fu_239_p4() {
    p_lshr_f_cast_fu_239_p4 = indvars_iv_reg_103.read().range(4, 1);
}

void Square_root_dup::thread_p_shl1_cast_fu_167_p1() {
    p_shl1_cast_fu_167_p1 = esl_sext<36,33>(p_shl1_fu_159_p3.read());
}

void Square_root_dup::thread_p_shl1_fu_159_p3() {
    p_shl1_fu_159_p3 = esl_concat<32,1>(x.read(), ap_const_lv1_0);
}

void Square_root_dup::thread_p_shl_cast_fu_155_p1() {
    p_shl_cast_fu_155_p1 = esl_sext<36,35>(p_shl_fu_147_p3.read());
}

void Square_root_dup::thread_p_shl_fu_147_p3() {
    p_shl_fu_147_p3 = esl_concat<32,3>(x.read(), ap_const_lv3_0);
}

void Square_root_dup::thread_tmp_10_fu_281_p3() {
    tmp_10_fu_281_p3 = (!tmp_16_reg_414.read()[0].is_01())? sc_lv<52>(): ((tmp_16_reg_414.read()[0].to_bool())? tmp_1_fu_274_p1.read(): tmp_5_fu_278_p1.read());
}

void Square_root_dup::thread_tmp_11_fu_372_p1() {
    tmp_11_fu_372_p1 = esl_sext<32,15>(z_reg_135.read());
}

void Square_root_dup::thread_tmp_13_fu_376_p3() {
    tmp_13_fu_376_p3 = (!tmp_3_reg_425.read()[0].is_01())? sc_lv<32>(): ((tmp_3_reg_425.read()[0].to_bool())? grp_fu_382_p3.read(): tmp_11_fu_372_p1.read());
}

void Square_root_dup::thread_tmp_14_fu_294_p3() {
    tmp_14_fu_294_p3 = (!tmp_16_reg_414.read()[0].is_01())? sc_lv<52>(): ((tmp_16_reg_414.read()[0].to_bool())? neg_ti_fu_288_p2.read(): tmp_5_fu_278_p1.read());
}

void Square_root_dup::thread_tmp_15_fu_350_p3() {
    tmp_15_fu_350_p3 = esl_concat<10,1>(tmp_8_fu_344_p2.read(), ap_const_lv1_0);
}

void Square_root_dup::thread_tmp_17_fu_264_p4() {
    tmp_17_fu_264_p4 = neg_mul_fu_259_p2.read().range(104, 56);
}

void Square_root_dup::thread_tmp_1_cast_fu_249_p1() {
    tmp_1_cast_fu_249_p1 = esl_zext<64,4>(p_lshr_f_cast_fu_239_p4.read());
}

void Square_root_dup::thread_tmp_1_fu_274_p1() {
    tmp_1_fu_274_p1 = esl_sext<52,49>(tmp_17_fu_264_p4.read());
}

void Square_root_dup::thread_tmp_3_fu_231_p1() {
    tmp_3_fu_231_p1 = indvars_iv_reg_103.read().range(1-1, 0);
}

void Square_root_dup::thread_tmp_5_fu_278_p1() {
    tmp_5_fu_278_p1 = esl_sext<52,49>(tmp_18_reg_420.read());
}

void Square_root_dup::thread_tmp_6_fu_253_p2() {
    tmp_6_fu_253_p2 = (!ap_const_lv6_3F.is_01() || !cou1_cast2_fu_235_p1.read().is_01())? sc_lv<6>(): (sc_bigint<6>(ap_const_lv6_3F) + sc_biguint<6>(cou1_cast2_fu_235_p1.read()));
}

void Square_root_dup::thread_tmp_7_cast_fu_331_p1() {
    tmp_7_cast_fu_331_p1 = esl_sext<64,6>(tmp_7_fu_326_p2.read());
}

void Square_root_dup::thread_tmp_7_fu_326_p2() {
    tmp_7_fu_326_p2 = (!tmp_6_reg_440.read().is_01() || !i_cast1_fu_306_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_6_reg_440.read()) - sc_biguint<6>(i_cast1_fu_306_p1.read()));
}

void Square_root_dup::thread_tmp_8_fu_344_p0() {
    tmp_8_fu_344_p0 = arr_q0.read();
}

void Square_root_dup::thread_tmp_8_fu_344_p1() {
    tmp_8_fu_344_p1 = arr_q1.read();
}

void Square_root_dup::thread_tmp_8_fu_344_p2() {
    tmp_8_fu_344_p2 = (!tmp_8_fu_344_p0.read().is_01() || !tmp_8_fu_344_p1.read().is_01())? sc_lv<10>(): sc_bigint<5>(tmp_8_fu_344_p0.read()) * sc_bigint<5>(tmp_8_fu_344_p1.read());
}

void Square_root_dup::thread_tmp_9_cast_fu_358_p1() {
    tmp_9_cast_fu_358_p1 = esl_sext<15,11>(tmp_15_fu_350_p3.read());
}

void Square_root_dup::thread_tmp_fu_185_p2() {
    tmp_fu_185_p2 = (!y1_reg_114.read().is_01() || !ap_const_lv52_0.is_01())? sc_lv<1>(): sc_lv<1>(y1_reg_114.read() == ap_const_lv52_0);
}

void Square_root_dup::thread_x_assign_cast_cast_cast_fu_177_p1() {
    x_assign_cast_cast_cast_fu_177_p1 = esl_sext<52,36>(y_fu_171_p2.read());
}

void Square_root_dup::thread_y_fu_171_p2() {
    y_fu_171_p2 = (!p_shl_cast_fu_155_p1.read().is_01() || !p_shl1_cast_fu_167_p1.read().is_01())? sc_lv<36>(): (sc_bigint<36>(p_shl_cast_fu_155_p1.read()) + sc_bigint<36>(p_shl1_cast_fu_167_p1.read()));
}

void Square_root_dup::thread_z_1_fu_362_p2() {
    z_1_fu_362_p2 = (!z_reg_135.read().is_01() || !tmp_9_cast_fu_358_p1.read().is_01())? sc_lv<15>(): (sc_biguint<15>(z_reg_135.read()) + sc_bigint<15>(tmp_9_cast_fu_358_p1.read()));
}

void Square_root_dup::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(tmp_fu_185_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st57_fsm_56;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st5_fsm_4;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_st6_fsm_5;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_st7_fsm_6;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_st8_fsm_7;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_st9_fsm_8;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_st10_fsm_9;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_st11_fsm_10;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_st12_fsm_11;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_st13_fsm_12;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_st14_fsm_13;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_st15_fsm_14;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_st16_fsm_15;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_st17_fsm_16;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_st18_fsm_17;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_st19_fsm_18;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_st20_fsm_19;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_st21_fsm_20;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_st22_fsm_21;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_st23_fsm_22;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_st24_fsm_23;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_st25_fsm_24;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_st26_fsm_25;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_st27_fsm_26;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_st28_fsm_27;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_st29_fsm_28;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_st30_fsm_29;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_st31_fsm_30;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_st32_fsm_31;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_st33_fsm_32;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_st34_fsm_33;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_st35_fsm_34;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_st36_fsm_35;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_st37_fsm_36;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_st38_fsm_37;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_st39_fsm_38;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_st40_fsm_39;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_st41_fsm_40;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_st42_fsm_41;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_st43_fsm_42;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_st44_fsm_43;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_st45_fsm_44;
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_st46_fsm_45;
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_st47_fsm_46;
            break;
        case 70368744177664 : 
            ap_NS_fsm = ap_ST_st48_fsm_47;
            break;
        case 140737488355328 : 
            ap_NS_fsm = ap_ST_st49_fsm_48;
            break;
        case 281474976710656 : 
            ap_NS_fsm = ap_ST_st50_fsm_49;
            break;
        case 562949953421312 : 
            ap_NS_fsm = ap_ST_st51_fsm_50;
            break;
        case 1125899906842624 : 
            ap_NS_fsm = ap_ST_st52_fsm_51;
            break;
        case 2251799813685248 : 
            ap_NS_fsm = ap_ST_st53_fsm_52;
            break;
        case 4503599627370496 : 
            ap_NS_fsm = ap_ST_st54_fsm_53;
            break;
        case 9007199254740992 : 
            ap_NS_fsm = ap_ST_st55_fsm_54;
            break;
        case 18014398509481984 : 
            ap_NS_fsm = ap_ST_st56_fsm_55;
            break;
        case 36028797018963968 : 
            ap_NS_fsm = ap_ST_st2_fsm_1;
            break;
        case 72057594037927936 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_315_p2.read())) {
                ap_NS_fsm = ap_ST_st59_fsm_58;
            } else {
                ap_NS_fsm = ap_ST_st58_fsm_57;
            }
            break;
        case 144115188075855872 : 
            ap_NS_fsm = ap_ST_st57_fsm_56;
            break;
        case 288230376151711744 : 
            ap_NS_fsm = ap_ST_st1_fsm_0;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<59>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

